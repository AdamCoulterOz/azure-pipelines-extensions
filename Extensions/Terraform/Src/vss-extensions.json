[
  {
    "manifestVersion": 1,
    "id": "custom-terraform-tasks",
    "name": "Custom Terraform Release Task",
    "version": "0.0.117",
    "publisher": "Akash-Chakrabarti",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Task to execute terraform commands during Azure DevOps Release pipeline",
    "categories": [
      "Azure Pipelines"
    ],
    "files": [
      {
        "path": "TerraformTaskV3"
      },
      {
        "path": "TerraformInstaller"
      }
    ],
    "contributions": [
      {
        "id": "custom-terraform-installer-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "TerraformInstaller"
        }
      },
      {
        "id": "custom-terraform-release-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "TerraformTaskV3"
        }
      },
      {
        "id": "aws-enpoint-type",
        "description": "Credentials for task invoking AWS services",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "AWSServiceEndpoint",
          "displayName": "AWS for Terraform",
          "url": {
            "displayName": "Server Url",
            "helpText": "AWS homepage",
            "value": "https://s3.amazonaws.com/",
            "isVisible": "false"
          },
          "dataSources": [
            {
              "name": "AWS",
              "endpointUrl": "{{endpoint.url}}",
              "RequestVerb": "GET",
              "resultSelector": "xpath://ListAllMyBucketsResult/Buckets/Bucket/Name"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "headers": [
                {
                  "name": "X-Amz-Date",
                  "value": "{{ #getCurrentUTCDate {} }}"
                },
                {
                  "name": "X-Amz-Content-Sha256",
                  "value": "{{ #getHashedPayload {} }}"
                },
                {
                  "name": "Authorization",
                  "value": "{{ #getAuthorizationHeader { 'username' : 'endpoint.username', 'password' : 'endpoint.password', 'method': 'get' } }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Access Key ID",
                  "description": "The AWS access key ID for signing programmatic requests",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Secret Access Key",
                  "description": "The AWS secret access key for signing programmatic requests",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "region",
                  "name": "Region",
                  "description": "The region of the AWS bucket to use for storing the state file",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "google-cloud-service-endpoint",
        "description": "Credentials for connecting to Google Cloud Platform",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "GoogleCloudServiceEndpoint",
          "displayName": "GCP for Terraform",
          "helpMarkDown": "[Get JSON Key File](https://console.cloud.google.com/iam-admin/serviceaccounts)",
          "url": {
            "displayName": "Server Url",
            "helpText": "GCP homepage",
            "value": "https://www.googleapis.com/",
            "isVisible": "false"
          },
          "dataSources": [
            {
              "name": "GCP",
              "endpointUrl": "{{endpoint.url}}storage/v1/b?project=$(endpoint.project)",
              "resultSelector": "jsonpath:$.items[*].name"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-JWT",
              "inputDescriptors": [
                {
                  "id": "Issuer",
                  "name": "Client Email",
                  "description": "The client email for creating JWT",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "Audience",
                  "name": "Token URI",
                  "description": "The token uri for creating JWT",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ],
          "inputDescriptors": [
            {
              "id": "project",
              "name": "Project ID",
              "description": "The project id of the GCP project in which your resources will be managed",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "CBT-Screenshot-Test-Task",
    "name": "CBT Screenshot Test Task",
    "version": "0.0.10",
    "publisher": "NathanielStokes3",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Task to start a Screenshot Test Task with CBT",
    "categories": [
      "Azure Pipelines",
      "Azure Repos"
    ],
    "icons": {
      "default": "images/CBTIcon.png"
    },
    "files": [
      {
        "path": "CBTScreenshotTask"
      },
      {
        "path": "my-hub.html",
        "addressable": true
      },
      {
        "path": "node_modules/vss-web-extension-sdk/lib",
        "addressable": true,
        "packagePath": "lib"
      }
    ],
    "contributions": [
      {
        "id": "custom-build-release-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "CBTScreenshotTask"
        }
      },
      {
        "id": "my-hub",
        "type": "ms.vss-web.hub",
        "targets": [
          "ms.vss-code-web.code-hub-group"
        ],
        "properties": {
          "name": "My Hub",
          "uri": "my-hub.html"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Connection to CBT API for screenshot browsers",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "CBTScreenshotEndpoint",
          "displayName": "CrossBrowserTesting Screenshot Api connection",
          "url": {
            "displayName": "Server Url",
            "helpText": "Url for the CBT server to connect to."
          },
          "dataSources": [
            {
              "name": "CBT Screenshots",
              "endpointUrl": "{{endpoint.url}}api/projects/index",
              "resultSelector": "jsonpath:$[*].nm"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "build-task",
        "description": "Task with a dynamic property getting data from an endpoint REST data source",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "CBTScreenshotTask"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "curseforgetasks",
    "version": "0.1.1",
    "name": "CurseForge Tasks",
    "scopes": [],
    "description": "Tasks for deploying mods and other artifacts to CurseForge",
    "publisher": "atomicblom",
    "galleryFlags": [
      "Preview"
    ],
    "icons": {
      "default": "static/images/logo.png"
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [
      "api-version/3.0"
    ],
    "tags": [
      "Sample"
    ],
    "categories": [
      "Build and release"
    ],
    "screenshots": [
      {
        "path": "static/images/screen1.png"
      }
    ],
    "content": {
      "license": {
        "path": "license.md"
      },
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://bit.ly"
      },
      "support": {
        "uri": "https://bit.ly"
      },
      "issues": {
        "uri": "https://bit.ly"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://bit.ly"
    },
    "branding": {
      "color": "rgb(220, 235, 252)",
      "theme": "light"
    },
    "files": [
      {
        "path": "DeployProject"
      }
    ],
    "contributions": [
      {
        "id": "curseforge-vsts-service-endpoint",
        "description": "Service endpoint type for Curseforge connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "CurseForge",
          "displayName": "CurseForge",
          "url": {
            "displayName": "Curseforge site name",
            "helpText": "the root of the site, based on the game being modded, e.g., curseforge.com"
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/game/versions",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Game Dependencies",
              "endpointUrl": "{{endpoint.url}}/api/game/dependencies",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Game Versions",
              "endpointUrl": "{{endpoint.url}}/api/game/versions",
              "resultSelector": "jsonpath:$[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "X-Api-Token",
                  "value": "{{endpoint.apitoken}}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "i18n:API Token",
                  "description": "i18n:API Token for connection to endpoint",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "DeployProject",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "type": "ms.vss-distributed-task.task",
        "properties": {
          "name": "DeployProject"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "augurk-preview",
    "name": "Augurk (Preview)",
    "version": "0.0.0",
    "publisher": "augurk",
    "description": "Integrates the living documentation system called Augurk into the VSTS/TFS experience.",
    "public": false,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "extension-icon.png"
    },
    "galleryFlags": [
      "Preview"
    ],
    "files": [
      {
        "path": "img",
        "addressable": true
      },
      {
        "path": "build-task/PublishFeaturesToAugurk"
      },
      {
        "path": "build-task/AugurkCSharpAnalyzer"
      },
      {
        "path": "build-task/AugurkCSharpAnalyzerInstaller"
      },
      {
        "path": "build-task/AugurkCLI"
      },
      {
        "path": "build-task/AugurkCLIInstaller"
      }
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "branding": {
      "color": "#1D5309",
      "theme": "dark"
    },
    "links": {
      "getstarted": {
        "uri": "https://augurk.github.io/"
      },
      "support": {
        "uri": "https://github.com/Augurk/Augurk/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Augurk/vsts-extension"
    },
    "contributions": [
      {
        "id": "publish-features-to-augurk",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "build-task/PublishFeaturesToAugurk"
        }
      },
      {
        "id": "augurk-csharp-analyzer",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "build-task/AugurkCSharpAnalyzer"
        }
      },
      {
        "id": "augurk-csharp-analyzer-installer",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "build-task/AugurkCSharpAnalyzerInstaller"
        }
      },
      {
        "id": "augurk-cli",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "build-task/AugurkCLI"
        }
      },
      {
        "id": "augurk-cli-installer",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "build-task/AugurkCLIInstaller"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Augurk connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "augurk",
          "displayName": "Augurk",
          "url": {
            "displayName": "Server Url",
            "helpText": "Url for the Augurk server to connect to."
          },
          "dataSources": [
            {
              "name": "Augurk Products",
              "endpointUrl": "{{endpoint.url}}api/v2/products",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Augurk Product Groups",
              "endpointUrl": "{{endpoint.url}}api/v2/products/$(productName)/groups",
              "resultSelector": "jsonpath:$[*].name"
            },
            {
              "name": "Augurk Product Group Features",
              "endpointUrl": "{{endpoint.url}}api/v2/products/$(productName)/groups/$(groupName)/features",
              "resultSelector": "jsonpath:$[*].title"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none"
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "If you wish to use integrated security (Windows authentication), choose **No Authentication** here and configure it in your build task."
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "aws-vsts-tools",
    "version": "1.1.8",
    "name": "AWS Tools for Microsoft Visual Studio Team Services",
    "scopes": [
      "vso.build",
      "vso.build_execute",
      "vso.release"
    ],
    "description": "Tasks for Amazon S3, AWS Elastic Beanstalk, AWS CodeDeploy, AWS Lambda and AWS CloudFormation and more, and running commands in the AWS Tools for Windows PowerShell module and the AWS CLI.",
    "publisher": "unknown",
    "public": false,
    "icons": {
      "default": "images/logo.png"
    },
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "LICENSE"
      }
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "tags": [
      "AWS",
      "S3",
      "CloudFormation",
      "AWS CLI",
      "Lambda",
      "Serverless",
      "CodeDeploy",
      "Elastic Beanstalk",
      "SNS",
      "SQS",
      "AWSPowerShell",
      "Elastic Container Registry",
      "Systems Manager",
      "Secrets Manager"
    ],
    "links": {
      "getstarted": {
        "uri": "https://aws.amazon.com/vsts?referer=vsmarketplace"
      },
      "learn": {
        "uri": "https://aws.amazon.com/vsts?referer=vsmarketplace"
      },
      "license": {
        "uri": "https://github.com/aws/aws-vsts-tools/blob/master/LICENSE"
      },
      "support": {
        "uri": "https://github.com/aws/aws-vsts-tools/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/aws/aws-vsts-tools"
    },
    "branding": {
      "color": "rgb(220, 235, 252)",
      "theme": "light"
    },
    "galleryFlags": [],
    "screenshots": [
      {
        "path": "images/screenshot.png"
      }
    ],
    "files": [
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "Tasks/AWSCLI"
      },
      {
        "path": "Tasks/AWSPowerShellModuleScript"
      },
      {
        "path": "Tasks/AWSShellScript"
      },
      {
        "path": "Tasks/BeanstalkCreateApplicationVersion"
      },
      {
        "path": "Tasks/BeanstalkDeployApplication"
      },
      {
        "path": "Tasks/CloudFormationCreateOrUpdateStack"
      },
      {
        "path": "Tasks/CloudFormationDeleteStack"
      },
      {
        "path": "Tasks/CloudFormationExecuteChangeSet"
      },
      {
        "path": "Tasks/CodeDeployDeployApplication"
      },
      {
        "path": "Tasks/ECRPullImage"
      },
      {
        "path": "Tasks/ECRPushImage"
      },
      {
        "path": "Tasks/LambdaDeployFunction"
      },
      {
        "path": "Tasks/LambdaInvokeFunction"
      },
      {
        "path": "Tasks/LambdaNETCoreDeploy"
      },
      {
        "path": "Tasks/S3Download"
      },
      {
        "path": "Tasks/S3Upload"
      },
      {
        "path": "Tasks/SecretsManagerCreateOrUpdateSecret"
      },
      {
        "path": "Tasks/SecretsManagerGetSecret"
      },
      {
        "path": "Tasks/SendMessage"
      },
      {
        "path": "Tasks/SystemsManagerGetParameter"
      },
      {
        "path": "Tasks/SystemsManagerRunCommand"
      },
      {
        "path": "Tasks/SystemsManagerSetParameter"
      }
    ],
    "categories": [
      "Azure Pipelines"
    ],
    "contributions": [
      {
        "id": "aws-credentials",
        "description": "Credentials for tasks invoking AWS services",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "AWS",
          "displayName": "AWS",
          "url": {
            "displayName": "Server Url",
            "helpText": "AWS homepage.",
            "value": "https://aws.amazon.com/",
            "isVisible": "false"
          },
          "dataSources": [
            {
              "name": "AWS",
              "endpointUrl": "{{endpoint.url}}api/projects/index",
              "resultSelector": "jsonpath:$[*].nm"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Access Key ID",
                  "description": "The AWS access key ID for signing programmatic requests.\nExample: AKIAIOSFODNN7EXAMPLE",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Secret Access Key",
                  "description": "The AWS secret access key for signing programmatic requests.\nExample: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "assumeRoleArn",
                  "name": "Role to Assume",
                  "description": "The Amazon Resource Name (ARN) of the role to assume.\nIf a role ARN is specified the access and secret keys configured in the endpoint will be used to generate temporary session credentials, scoped to the specified role, and used be used by the task.\nThe generated credentials for each AWS task will be valid for a default duration of 15 minutes. If your tasks need a longer duration (up to a maximum of one hour) set the variable 'aws.rolecredential.maxduration' on your build or release definition to the required duration (in seconds, minimum 900 and maximum 3600). Note that this setting will affect all tasks that use AWS endpoints configured to assume a role.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "roleSessionName",
                  "name": "Role Session Name",
                  "description": "Optional identifier for the assumed role session. If not specified the tasks will use a default name of 'aws-vsts-tools'.\nUse the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. In cross-account scenarios, the role session name is visible to, and can be logged by the account that owns the role. The role session name is also used in the ARN of the assumed role principal. This means that subsequent cross-account API requests using the temporary security credentials will expose the role session name to the external account in their CloudTrail logs.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "externalId",
                  "name": "External ID",
                  "description": "A unique identifier that is used by third parties when assuming roles in their customers' accounts, aka cross-account role access.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html?icmpid=docs_iam_console\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "AWSCLI",
        "description": "Run an AWS CLI command against an AWS connection",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/AWSCLI"
        }
      },
      {
        "id": "AWSPowerShellModuleScript",
        "description": "Run a PowerShell script that uses cmdlets from the AWS Tools for Windows PowerShell module.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/AWSPowerShellModuleScript"
        }
      },
      {
        "id": "AWSShellScript",
        "description": "Run a shell script using Bash with AWS credentials.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/AWSShellScript"
        }
      },
      {
        "id": "BeanstalkCreateApplicationVersion",
        "description": "Create a new application version for later deployment to AWS Elastic Beanstalk",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/BeanstalkCreateApplicationVersion"
        }
      },
      {
        "id": "BeanstalkDeployApplication",
        "description": "Deploy an application to AWS Elastic Beanstalk",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/BeanstalkDeployApplication"
        }
      },
      {
        "id": "CloudFormationCreateOrUpdateStack",
        "description": "Create or update an AWS CloudFormation stack",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/CloudFormationCreateOrUpdateStack"
        }
      },
      {
        "id": "CloudFormationDeleteStack",
        "description": "Deletes an AWS CloudFormation stack",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/CloudFormationDeleteStack"
        }
      },
      {
        "id": "CloudFormationExecuteChangeSet",
        "description": "Executes an AWS CloudFormation change set",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/CloudFormationExecuteChangeSet"
        }
      },
      {
        "id": "CodeDeployDeployApplication",
        "description": "Deploy an application to Amazon EC2 instances using AWS CodeDeploy",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/CodeDeployDeployApplication"
        }
      },
      {
        "id": "ECRPullImage",
        "description": "Pull an Elastic Container Registry image",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/ECRPullImage"
        }
      },
      {
        "id": "ECRPushImage",
        "description": "Push a local Docker image to Elastic Container Registry",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/ECRPushImage"
        }
      },
      {
        "id": "LambdaDeployFunction",
        "description": "General purpose deployment for AWS Lambda functions",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/LambdaDeployFunction"
        }
      },
      {
        "id": "LambdaInvokeFunction",
        "description": "Invokes an AWS Lambda function with a JSON payload",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/LambdaInvokeFunction"
        }
      },
      {
        "id": "LambdaNETCoreDeploy",
        "description": "Build and deploy a .NET Core AWS Lambda function",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/LambdaNETCoreDeploy"
        }
      },
      {
        "id": "S3Download",
        "description": "Download files from an Amazon Simple Storage Service (S3) Bucket",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/S3Download"
        }
      },
      {
        "id": "S3Upload",
        "description": "Upload files to an Amazon Simple Storage Service (S3) Bucket",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/S3Upload"
        }
      },
      {
        "id": "SecretsManagerCreateOrUpdateSecret",
        "description": "Updates a secret, optionally creating a secret if it does not exist",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SecretsManagerCreateOrUpdateSecret"
        }
      },
      {
        "id": "SecretsManagerGetSecret",
        "description": "Stores the value of a secret in AWS Secrets Manager into a secret build variable",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SecretsManagerGetSecret"
        }
      },
      {
        "id": "SendMessage",
        "description": "Sends a message to an SNS topic or SQS queue",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SendMessage"
        }
      },
      {
        "id": "SystemsManagerGetParameter",
        "description": "Read one or more Systems Manager Parameter Store values into build variables",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SystemsManagerGetParameter"
        }
      },
      {
        "id": "SystemsManagerRunCommand",
        "description": "Run a command remotely on a fleet of EC2 instances and/or on-premise machines",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SystemsManagerRunCommand"
        }
      },
      {
        "id": "SystemsManagerSetParameter",
        "description": "Creates or updates a parameter value in the Systems Manager Parameter Store.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SystemsManagerSetParameter"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "synopsys-coverity-azure-devops",
    "name": "Synopsys Coverity Azure DevOps",
    "version": "1.0.0.11",
    "publisher": "synopsys-coverity",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Tools for building Synopsys Coverity.",
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "images/synopsys.png"
    },
    "files": [
      {
        "path": "coverityTask"
      }
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "contributions": [
      {
        "id": "coverity-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "coverityTask"
        }
      },
      {
        "id": "coverity-endpoint",
        "description": "Service Endpoint for Coverity connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "coverity",
          "displayName": "Coverity",
          "url": {
            "displayName": "Coverity URL",
            "helpText": "Provide the URL for your Coverity Server - please include the port if other than 80 (http) or 443 (https)"
          },
          "authenticationSchemes": [
            {
              "name": "Basic Authorization",
              "displayName": "Basic Authentication",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "The username to access your Coverity instance",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "The password to access your Coverity instance",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": "1",
    "id": "vsts-chef-tasks",
    "name": "Chef Integration",
    "version": "0.1.9",
    "publisher": "chef-software",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Tasks for performing common Chef operations against the Chef Automate platform.",
    "categories": [
      "Build and release"
    ],
    "galleryFlags": [],
    "icons": {
      "default": "images/cheflogo.png"
    },
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "screenshots": [
      {
        "path": "screenshot_env_task.png"
      },
      {
        "path": "screenshot_env_parameters.png"
      },
      {
        "path": "screenshot_chef_server_endpoint.png"
      }
    ],
    "files": [
      {
        "path": "tasks"
      }
    ],
    "links": {
      "home": {
        "uri": "https://github.com/chef-partners/vsts-tasks/wiki"
      },
      "getstarted": {
        "uri": "https://github.com/chef-partners/vsts-chef/wiki/Getting-Started"
      },
      "issues": {
        "uri": "https://github.com/chef-partners/vsts-chef/issues"
      }
    },
    "contributions": [
      {
        "id": "chef-supermarket-endpoint",
        "description": "Service Endpoint for Chef Supermarket",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "chefsupermarketendpointv1",
          "displayName": "Chef Supermarket",
          "url": {
            "displayName": "Chef Supermarket URL",
            "helpText": "URL to the Chef Supermarket"
          },
          "inputDescriptors": [
            {
              "id": "sslVerify",
              "name": "SSL Verification",
              "description": "Enables/disables the SSL certificate verification for the Chef Supermarket.  Set to `false` if you are using self-signed certificates.  Default: `true` (Chef Server certificate must be signed by a valid Certificate Authority)",
              "inputMode": "combo",
              "isConfidential": false,
              "validation": {
                "isRequired": false,
                "dataType": "string"
              },
              "values": {
                "inputId": "sslVerifyValues",
                "defaultValue": "1",
                "possibleValues": [
                  {
                    "value": "1",
                    "displayValue": "True"
                  },
                  {
                    "value": "0",
                    "displayValue": "False"
                  }
                ]
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username (Node name)",
                  "description": "A username on the Chef server that has admin permissions",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Client Key",
                  "description": "The private key (in pem format) for the specified user",
                  "inputMode": "textarea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Please provide details for accessing the public or private Chef Supermarket"
        }
      },
      {
        "id": "chef-server-endpoint",
        "description": "Service Endpoint for Chef Server",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "chefserverendpointv1",
          "displayName": "Chef Server",
          "url": {
            "displayName": "Chef Server URL",
            "helpText": "URL to the Chef Server including the organization, e.g. `https://mychefserver.westus.cloudapp.azure.com/organizations/myorg`"
          },
          "inputDescriptors": [
            {
              "id": "sslVerify",
              "name": "SSL Verification",
              "description": "Enables/disables the SSL certificate verification for the Chef Server.  Set to `false` if you are using self-signed certificates.  Default: `true` (Chef Server certificate must be signed by a valid Certificate Authority)",
              "inputMode": "combo",
              "isConfidential": false,
              "validation": {
                "isRequired": false,
                "dataType": "string"
              },
              "values": {
                "inputId": "sslVerifyValues",
                "defaultValue": "1",
                "possibleValues": [
                  {
                    "value": "1",
                    "displayValue": "True"
                  },
                  {
                    "value": "0",
                    "displayValue": "False"
                  }
                ]
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username (Node name)",
                  "description": "A username on the Chef server that has admin permissions",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password or Client Key",
                  "description": "Password or the private key (in pem format) for the specified user",
                  "inputMode": "textarea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Please provide the requested information so that VSTS/TFS can access your Chef Server instance"
        }
      },
      {
        "id": "vsts-chef-tasks-environment-cookbook-version-constraint",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/env_version_constraint"
        }
      },
      {
        "id": "vsts-chef-tasks-environment-vsts-variables",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/env_vsts_variables"
        }
      },
      {
        "id": "vsts-chef-tasks-cookbook-upload",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/upload_cookbook"
        }
      },
      {
        "id": "vsts-chef-tasks-cookbook-version",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/cookbook_version"
        }
      },
      {
        "id": "vsts-chef-tasks-exec-inspec",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/exec_inspec"
        }
      },
      {
        "id": "vsts-chef-tasks-exec-chef-client",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/exec_chef_client"
        }
      },
      {
        "id": "vsts-chef-task-cookbook-publish-supermaket",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/publish_supermarket"
        }
      },
      {
        "id": "vsts-chef-task-install-chefdk",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/install_chefdk"
        }
      },
      {
        "id": "vsts-chef-task-install-inspec",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/install_inspec"
        }
      },
      {
        "id": "vsts-chef-task-gem-install",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/gem_install"
        }
      },
      {
        "id": "vsts-chef-task-exec-knife",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/exec_knife"
        }
      },
      {
        "id": "vsts-chef-task-linting",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/linting"
        }
      },
      {
        "id": "vsts-chef-task-test-kitchen",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/test_kitchen"
        }
      },
      {
        "id": "vsts-chef-task-cookbook-gems",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/cookbook_gems"
        }
      }
    ]
  },
  {
    "manifestVersion": "1",
    "id": "vsts-habitat-tasks",
    "name": "Habitat Integration",
    "version": "0.1.28",
    "publisher": "chef-software",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Tasks for performing Habitat build and export functions.",
    "categories": [
      "Azure Pipelines"
    ],
    "galleryFlags": [],
    "icons": {
      "default": "images/habitat-logo.png"
    },
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "screenshots": [
      {
        "path": "build_plan.png"
      },
      {
        "path": "install_habitat.png"
      },
      {
        "path": "package_export.png"
      }
    ],
    "files": [
      {
        "path": "tasks"
      }
    ],
    "links": {
      "home": {
        "uri": "https://chef-partners.github.io/azuredevops-habitat"
      },
      "getstarted": {
        "uri": "hhttps://chef-partners.github.io/azuredevops-habitat/getting-started.html"
      },
      "issues": {
        "uri": "https://github.com/chef-partners/azuredevops-habitat/issues"
      }
    },
    "contributions": [
      {
        "id": "habitat-origin",
        "description": "Habitat Origin",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "habitatoriginendpoint",
          "displayName": "Habitat Origin",
          "url": {
            "displayName": "Habitat Depot URL",
            "helpText": "URL to the Habitat depot that will be used to deploy to"
          },
          "inputDescriptors": [
            {
              "id": "originName",
              "name": "Origin Name",
              "description": "Name of the Habitat origin",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "revision",
              "name": "Revision",
              "description": "Revision of the origin to use",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "publicKey",
              "name": "Public Key",
              "description": "Public item of the origin key pair",
              "inputMode": "textarea",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "useSudo",
              "name": "Use Sudo",
              "description": "Use sudo on habitat commands",
              "inputMode": "combo",
              "isConfidential": false,
              "validation": {
                "isRequired": false,
                "dataType": "string"
              },
              "values": {
                "inputId": "useSudoValues",
                "defaultValue": "1",
                "possibleValues": [
                  {
                    "value": "1",
                    "displayValue": "True"
                  },
                  {
                    "value": "0",
                    "displayValue": "False"
                  }
                ]
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "signingKey",
                  "name": "Signing Key",
                  "description": "Signing item of the origin key pair",
                  "inputMode": "textarea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "authToken",
                  "name": "Habitat Auth Token",
                  "description": "Authentication token for publishing Habitat packages.",
                  "inputMode": "textbox",
                  "isConfidential": "true",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Please provide the requested information so that Habitat packages can be built and deployed. The Habitat Auth Token should be created from your profile at https://bldr.habitat.sh/#/profile"
        }
      },
      {
        "id": "vsts-habitat-tasks-install",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/habitat_install"
        }
      },
      {
        "id": "vsts-habitat-tasks-build",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/habitat_build"
        }
      },
      {
        "id": "vsts-habitat-tasks-signing-key",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/habitat_signing_key"
        }
      },
      {
        "id": "vsts-habitat-tasks-pkg-upload",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/habitat_pkg_upload"
        }
      },
      {
        "id": "vsts-habitat-tasks-pkg-export",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/habitat_pkg_export"
        }
      },
      {
        "id": "vsts-habitat-tasks-pkg-install",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/habitat_pkg_install"
        }
      },
      {
        "id": "vsts-habitat-tasks-docker-tag",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/docker_tag_image"
        }
      },
      {
        "id": "vsts-expose-habitat-build-vars",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/expose_habitat_build_vars"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "version": "0.0.0",
    "id": "servicenow-buildtasks",
    "publisher": "",
    "name": "ServiceNow Integration Tasks",
    "public": false,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Build extensions",
    "categories": [
      "Build and release"
    ],
    "content": {
      "details": {
        "path": "Marketplace/overview.md"
      }
    },
    "files": [
      {
        "path": "Tasks"
      },
      {
        "path": "src",
        "addressable": true
      },
      {
        "path": "css",
        "addressable": true
      },
      {
        "path": "libs",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "validate-service-now-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/ServiceNowTicketTask"
        }
      },
      {
        "id": "custom-servicenow-oauth-endpoint-type",
        "description": "Service endpoint for all ServiceNow connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "servicenow-oauth-key",
          "displayName": "ServiceNow Connection (OAuth)",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "clientKey",
                  "name": "OAuth Client ID",
                  "description": "OAuth Client ID",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "clientSecret",
                  "name": "OAuth Client Secret",
                  "description": "OAuth Client Secret",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "username",
                  "name": "User Account",
                  "description": "User account to authenticate OAuth requests",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "User Password",
                  "description": "Password for user account to authenticate OAuth requests",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "custom-servicenow-basicauth-endpoint-type",
        "description": "Service endpoint for all ServiceNow connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "servicenow-basic-key",
          "displayName": "ServiceNow Connection (Basic)",
          "dataSources": [
            {
              "name": "ChangeRequests",
              "endpointUrl": "{{endpoint.url}}/api/now/table/change_request?sysparm_query=number%3D{{ChangeRequestNumber}}&sysparm_limit=1",
              "resultSelector": "jsonpath:$.result[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "User Account",
                  "description": "User account to authenticate OAuth requests",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "User Password",
                  "description": "Password for user account to authenticate OAuth requests",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "servicenow-release-summary",
        "type": "ms.vss-releaseManagement-web.release-summary-section",
        "targets": [
          "ms.vss-releaseManagement-web.release-details-summary-tab"
        ],
        "properties": {
          "name": "ServiceNow",
          "uri": "src/summary.html",
          "order": 20,
          "column": 1
        }
      }
    ],
    "contributionTypes": [],
    "scopes": [
      "vso.build_execute",
      "vso.serviceendpoint_manage",
      "vso.release",
      "vso.extension.data_write"
    ]
  },
  {
    "manifestVersion": 1,
    "id": "colinsalmcorner-snow-extensions",
    "publisher": "colinsalmcorner",
    "name": "Colin's ALM Corner Azure DevOps ServiceNow extensions",
    "version": "1.0.6",
    "description": "Service Now extensions for Azure DevOps",
    "tags": [
      "Release",
      "Gate",
      "Service Now"
    ],
    "icons": {
      "default": "media/snow-logo.png"
    },
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scopes": [],
    "categories": [
      "Build and release"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "screenshots": [
      {
        "path": "media/snow_gate.png"
      },
      {
        "path": "media/snow_endpoint.png"
      }
    ],
    "links": {
      "home": {
        "uri": "http://colinsalmcorner.com"
      },
      "repository": {
        "uri": "https://github.com/colindembovsky/cols-service-now-extensions"
      },
      "issues": {
        "uri": "https://github.com/colindembovsky/cols-service-now-extensions/issues"
      }
    },
    "badges": [
      {
        "href": "https://colinsalmcorner.visualstudio.com/MarketPlace/_build?definitionId=33",
        "uri": "https://colinsalmcorner.visualstudio.com/MarketPlace/_apis/build/status/ServiceNow%20Extensions",
        "description": "Build"
      },
      {
        "href": "https://colinsalmcorner.visualstudio.com/MarketPlace/_releases2?definitionId=4",
        "uri": "https://colinsalmcorner.vsrm.visualstudio.com/_apis/public/Release/badge/34532943-412e-4dac-b314-a87833e22dd8/4/6",
        "description": "Beta Release"
      },
      {
        "href": "https://colinsalmcorner.visualstudio.com/MarketPlace/_releases2?definitionId=4",
        "uri": "https://colinsalmcorner.vsrm.visualstudio.com/_apis/public/Release/badge/34532943-412e-4dac-b314-a87833e22dd8/4/7",
        "description": "Public Release"
      }
    ],
    "repository": {
      "type": "git",
      "uri": "https://github.com/colindembovsky/cols-service-now-extensions"
    },
    "files": [
      {
        "path": "Tasks/SnowChangeRequestGate"
      }
    ],
    "contributions": [
      {
        "id": "colinsalmcorner-snow-change-request-gate",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/SnowChangeRequestGate"
        }
      },
      {
        "id": "colinsalmcorner-snow-endpoint-type",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "ServiceNow",
          "displayName": "Service Now",
          "helpMarkDown": "Create an authenticated endpoint to a Service Now instance.",
          "url": {
            "displayName": "Service Now URL",
            "description": "The Service Now instance Url, e.g. `https://instance.service-now.com`."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password for the user account.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "cxsast",
    "name": "Checkmarx CxSAST",
    "version": "9.0.0",
    "publisher": "checkmarxdev",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "public": false,
    "description": "Add Secure Static Source Code Analysis inside your build process",
    "icons": {
      "default": "extension-icon.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Security",
      "SCA",
      "Static Code Analysis",
      "Scan",
      "SAST",
      "Checkmarx",
      "CxSAST",
      "OSA",
      "Open source",
      "Software Composition Analysis"
    ],
    "scopes": [
      "vso.build_execute"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "checkmarx-license-terms.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://info.checkmarx.com/cx-microsoft-vs-team-services"
      },
      "learn": {
        "uri": "https://checkmarx.atlassian.net/wiki/spaces/KC/pages/96731162/CxSAST+MS-VSTS+Plugin+v8.4.1+and+up"
      },
      "support": {
        "uri": "https://support.checkmarx.com/home"
      }
    },
    "branding": {
      "color": "rgb(81, 53, 124)",
      "theme": "dark"
    },
    "files": [
      {
        "path": "CxScan"
      },
      {
        "path": "images/config.png",
        "addressable": true
      },
      {
        "path": "images/sample2.png",
        "addressable": true
      },
      {
        "path": "images/sample3.png",
        "addressable": true
      },
      {
        "path": "images/sample5.png",
        "addressable": true
      },
      {
        "path": "images/summaryTab.PNG",
        "addressable": true
      },
      {
        "path": "UI_Versions/8_60_0",
        "addressable": true,
        "packagePath": "UI_Versions/8_60_0/scripts"
      },
      {
        "path": "UI_Versions/8_60_0/cxreport.html",
        "addressable": true
      },
      {
        "path": "UI_Versions/8_60_0/cxSummary.html",
        "addressable": true
      },
      {
        "path": "UI_Versions/8_60_0/css/cxreport.css",
        "addressable": true
      },
      {
        "path": "node_modules/vss-web-extension-sdk/lib",
        "addressable": true,
        "packagePath": "lib"
      },
      {
        "path": "CxScan/CxScanV8_6/osaDLL/OsaClient.dll",
        "addressable": true
      },
      {
        "path": "CxScan/CxScanV8_8/CxOSA/osaDll/CxOSA.dll",
        "addressable": true
      },
      {
        "path": "CxScan/CxScanV9_0/CxOSA/osaDll/CxOSA.dll",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "cx-scan-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "CxScan"
        }
      },
      {
        "id": "CxEndpoint",
        "description": "Service Endpoint type for all Cx connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "Checkmarx-Endpoint",
          "displayName": "Checkmarx",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Checkmarx username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "dataType": "String",
                    "isRequired": true
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Checkmarx user password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "dataType": "String",
                    "isRequired": true
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<span style=\"color: #222\"><font size=\"3\"><span style=\"color: #222\"><font size=\"3\">If you don't already have Checkmarx installed, click </font></span><a href=\"https://info.checkmarx.com/cx-microsoft-vs-team-services\" target=\"_blank\"><span style=\"color: #0072c6\"><font size=\"3\">here</font></span></a>   to register for a Checkmarx cloud account</span>"
        }
      },
      {
        "id": "cx-report",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "A tab contributing to Checkmarx results report",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "Checkmarx",
          "uri": "UI_Versions/8_60_0/cxreport.html",
          "height": "175%",
          "width": "100%"
        }
      },
      {
        "id": "cx-summary-report",
        "type": "ms.vss-build-web.build-results-section",
        "description": "A section contributing Checkmarx results to existing build 'summary' tab",
        "targets": [
          "ms.vss-build-web.build-results-summary-tab"
        ],
        "properties": {
          "name": "Checkmarx Scan Results",
          "uri": "UI_Versions/8_60_0/cxSummary.html",
          "height": "700px",
          "width": "1150px"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "datadog-monitors",
    "name": "Datadog Monitors as Deployment Gates",
    "version": "1.0.0",
    "publisher": "Datadog",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Query Datadog monitors to check for problems before proceeding with a deployment stage",
    "icons": {
      "default": "icon.png"
    },
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "monitoring",
      "datadog",
      "release",
      "staged",
      "canary"
    ],
    "files": [
      {
        "path": "datadog-monitor"
      }
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "branding": {
      "color": "rgb(120, 71, 166)",
      "theme": "dark"
    },
    "galleryFlags": [
      "Public"
    ],
    "links": {
      "getstarted": {
        "uri": "https://docs.datadoghq.com/integrations/azure_devops"
      },
      "learn": {
        "uri": "https://www.docs.datadoghq.com"
      },
      "support": {
        "uri": "https://www.datadoghq.com/support"
      },
      "privacypolicy": {
        "uri": "https://www.datadoghq.com/legal/privacy"
      },
      "license": {
        "uri": "https://www.datadoghq.com/legal/msa"
      }
    },
    "contributions": [
      {
        "id": "datadog-monitors",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "datadog-monitor"
        }
      },
      {
        "id": "datadog-service-endpoint",
        "description": "Service endpoint type for Datadog",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "datadog",
          "displayName": "Datadog",
          "icons": {
            "default": "icon.png",
            "large": "icon.png"
          },
          "url": {
            "displayName": "Datadog API URL",
            "value": "https://api.datadoghq.com/api/v1",
            "isVisible": "false",
            "required": "false"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "DD-API-KEY",
                  "value": "{{endpoint.apitoken}}"
                },
                {
                  "name": "DD-APPLICATION-KEY",
                  "value": "{{endpoint.appkey}}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "i18n:API Token",
                  "description": "i18n:API Token required to connect to Datadog",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "appkey",
                  "name": "i18n:App Key",
                  "description": "i18n:App key required to connect to Datadog",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://docs.datadoghq.com/api/?lang=bash#authentication\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "windows-store-automation",
    "name": "Windows Store Automation",
    "version": "0.0.3",
    "publisher": "davesmits",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scope": [
      "vso.build",
      "vso.serviceendpoint"
    ],
    "description": "Build task to publish to the windows store",
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "logo.png"
    },
    "files": [
      {
        "path": "DeployToStore"
      },
      {
        "path": "VersionUpdate"
      }
    ],
    "contributions": [
      {
        "id": "custom-build-task-1",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DeployToStore"
        }
      },
      {
        "id": "custom-build-task-2",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "VersionUpdate"
        }
      },
      {
        "id": "devcenter-service-endpoint",
        "description": "Windows Dev Center",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "devcenter-auth-key",
          "displayName": "Windows Dev Center",
          "url": "https://developer.windows.com/",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "tenantid",
                  "name": "Tenant Id",
                  "description": "Tenant of the Azure Active Directory",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "clientid",
                  "name": "Client Id",
                  "description": "Client Id",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1.0,
    "id": "vss-services-externaltfs",
    "version": "15.106.1",
    "name": "TFS artifacts for Release Management",
    "publisher": "ms-vscs-rm",
    "description": "Deploy external TFS/ VS-Team-Services artifacts using Release Management",
    "_description.comment": "The below format to define artifact extensions is currently in preview and may change in future.",
    "public": true,
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Artifacts",
      "DevOps",
      "Release"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [
      "contribution/ms.vss-releaseartifact.artifact-types"
    ],
    "icons": {
      "default": "vss_default.png"
    },
    "screenshots": [
      {
        "path": "images/screen1.png"
      },
      {
        "path": "images/screen2.png"
      },
      {
        "path": "images/screen3.png"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      }
    },
    "files": [
      {
        "path": "images/screen1.png",
        "addressable": true
      },
      {
        "path": "images/screen2.png",
        "addressable": true
      },
      {
        "path": "images/screen3.png",
        "addressable": true
      },
      {
        "path": "Tasks/DownloadArtifactsTfsVersionControl"
      },
      {
        "path": "Tasks/DownloadArtifactsTfsGit"
      }
    ],
    "branding": {
      "color": "#5C2D91",
      "theme": "dark"
    },
    "contributions": [
      {
        "id": "externaltfs-endpoint-type",
        "description": "Service Endpoint type for all External TFS connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "externaltfs",
          "displayName": "External TFS",
          "_displayName.comment": "Don't Localize the word 'TFS'",
          "url": {
            "displayName": "TFS Collection Url",
            "_displayName.comment": "Don't Localize the word 'TFS'",
            "helpText": "Url for the Team Project Collection to connect to."
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "Projects",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "Definitions",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions?api-version=3.0-preview",
              "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]"
            },
            {
              "name": "Builds",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds?definitions={{definition}}",
              "resultSelector": "jsonpath:$.value[?(@.result=='succeeded')]"
            },
            {
              "name": "LatestBuild",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds?maxBuildsPerDefinition=1&definitions={{definition}}&resultFilter=succeeded",
              "resultSelector": "jsonpath:$.value[0]"
            },
            {
              "name": "Artifacts",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds/{{version}}/artifacts",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "ArtifactItems",
              "endpointUrl": "{{endpoint.url}}/_apis/resources/Containers/{{containerId}}?ItemPath={{itemPath}}&isShallow=true",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "BranchName",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/builds/{{version}}",
              "resultSelector": "jsonpath:$.sourceBranch"
            },
            {
              "name": "XamlProjects",
              "endpointUrl": "{{endpoint.url}}/_apis/projects?api-version=1.0",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "XamlDefinitions",
              "endpointUrl": "{{endpoint.url}}/_apis/build/definitions?api-version=1.0&projectname={{project}}",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "XamlBuilds",
              "endpointUrl": "{{endpoint.url}}/_apis/build/builds?definition={{definition}}&status=Succeeded&api-version=1.0",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "LatestXamlBuild",
              "endpointUrl": "{{endpoint.url}}/_apis/build/builds?definition={{definition}}&status=Succeeded&$top=1&api-version=1.0",
              "resultSelector": "jsonpath:$.value[0]"
            },
            {
              "name": "XamlBuild",
              "endpointUrl": "{{endpoint.url}}/_apis/build/builds/{{version}}?api-version=1.0",
              "resultSelector": "jsonpath:$"
            },
            {
              "name": "TfvcProjects",
              "endpointUrl": "{{endpoint.url}}/_apis/tfvc/{{project}}/projectinfo",
              "resultSelector": "jsonpath:$"
            },
            {
              "name": "TfvcChangesets",
              "endpointUrl": "{{endpoint.url}}/_apis/tfvc/changesets?api-version=1.0",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "TfvcLatestChangeset",
              "endpointUrl": "{{endpoint.url}}/_apis/tfvc/changesets?$orderby=id dsc&api-version=1.0",
              "resultSelector": "jsonpath:$.value[0]"
            },
            {
              "name": "TfvcArtifacts",
              "endpointUrl": "{{endpoint.url}}/_apis/tfvc/items?scopepath=$/{{project}}&recursionlevel=OneLevel&api-version=1.0-preview.1",
              "resultSelector": "jsonpath:$.value[1:]"
            },
            {
              "name": "TfvcArtifactItems",
              "endpointUrl": "{{endpoint.url}}/_apis/tfvc/items?scopepath=$/{{project}}/{{itemPath}}&recursionlevel=OneLevel&api-version=1.0-preview.1",
              "resultSelector": "jsonpath:$.value[1:]"
            },
            {
              "name": "Repositories",
              "endpointUrl": "{{endpoint.url}}/_apis/git/{{project}}/repositories",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "Branches",
              "endpointUrl": "{{endpoint.url}}/_apis/git/repositories/{{definition}}/stats/branches",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "GitCommits",
              "endpointUrl": "{{endpoint.url}}/_apis/git/{{project}}/repositories/{{definition}}/commits?itemVersion[versionType]=Branch&itemVersion[version]={{branch}}",
              "resultSelector": "jsonpath:$.value[*]"
            },
            {
              "name": "GitLatestCommit",
              "endpointUrl": "{{endpoint.url}}/_apis/git/{{project}}/repositories/{{definition}}/commits?itemVersion[versionType]=Branch&itemVersion[version]={{branch}}",
              "resultSelector": "jsonpath:$.value[0]"
            },
            {
              "name": "GitArtifacts",
              "endpointUrl": "{{endpoint.url}}/_apis/git/repositories/{{definition}}/items?versionType=branch&version={{branch}}&scopePath=%2F&recursionLevel=1",
              "resultSelector": "jsonpath:$.value[1:]"
            },
            {
              "name": "GitArtifactItems",
              "endpointUrl": "{{endpoint.url}}/_apis/git/repositories/{{definition}}/items?versionType=branch&version={{branch}}&scopePath=%2F{{itemPath}}&recursionLevel=1",
              "resultSelector": "jsonpath:$.value[1:]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic"
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal access token is applicable only for endpoint targeting VSTS account or TFS 2016. Click <a href=\"https://www.visualstudio.com/en-us/docs/setup-admin/team-services/use-personal-access-tokens-to-authenticate\" target=\"_blank\">here</a>. for information on how to create Personal Access Token.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://msdn.microsoft.com/Library/vs/alm/Release/author-release-definition/understanding-tasks#serviceconnections\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "externalTFSBuild-release-artifact-type",
        "description": "External TFS Build Artifact",
        "_description.comment": "Don't Localize the word 'TFS'",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "ExternalTfsBuild",
          "displayName": "External TFS Build",
          "_displayName.comment": "Don't Localize the word 'TFS'",
          "endpointTypeId": "ExternalTFS",
          "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
          "artifactType": "Build",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "project",
              "name": "Project",
              "description": "Project Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Build Definition",
              "description": "Build Definition Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "artifacts",
              "name": "Artifacts",
              "description": "Build artifacts",
              "inputMode": "none",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition"
              ],
              "validation": {
                "isRequired": false,
                "dataType": "string",
                "maxLength": 300
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "project",
              "dataSourceName": "Projects",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "definition",
              "dataSourceName": "Definitions",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "Builds",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{buildNumber}}}\" }"
            },
            {
              "target": "latestVersion",
              "dataSourceName": "LatestBuild",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{buildNumber}}}\" }"
            },
            {
              "target": "artifactDetails",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Name: \"{{name}}\", StreamType: \"{{resource.type}}\", downloadUrl : \"{{{resource.downloadUrl}}}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\", data: { artifactType: \"{{resource.type}}\", containerId:\"{{ #regex /([0-9]+)/ resource.data }}\" } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "ArtifactItems",
              "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { itemType: \"{{{itemType}}}\", containerId:\"{{containerId}}\" } }"
            },
            {
              "target": "branchName",
              "dataSourceName": "BranchName"
            }
          ],
          "browsableArtifactTypeMapping": {
            "container": "artifactItems"
          },
          "artifactTypeStreamMapping": {
            "container": "zip",
            "filepath": "fileshare"
          }
        }
      },
      {
        "id": "externalTFVC-release-artifact-type",
        "description": "External TFS Version Control",
        "_description.comment": "Don't Localize the word 'TFS Version Control'",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "ExternalTfvc",
          "displayName": "External TFS Version Control",
          "_displayName.comment": "Don't Localize the word 'TFS Version Control'",
          "endpointTypeId": "ExternalTFS",
          "uniqueSourceIdentifier": "{{{connection}}}:{{{project}}}:{{{definition}}}",
          "downloadTaskId": "f77a5e28-640e-4250-aa3a-174fa697a658",
          "artifactType": "SourceControl",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "project",
              "name": "Project",
              "description": "Projects",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Source (repository)",
              "description": "Repository to pull",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "artifacts",
              "name": "Artifacts",
              "description": "Source Artifacts",
              "inputMode": "none",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition"
              ],
              "validation": {
                "isRequired": false,
                "dataType": "string",
                "maxLength": 300
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "project",
              "dataSourceName": "Projects",
              "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "definition",
              "dataSourceName": "TfvcProjects",
              "resultTemplate": "{ Value : \"{{#if supportsTFVC}}{{{project.id}}}{{else}}{{/if}}\", DisplayValue : \"{{#if supportsTFVC}}$/{{{project.name}}}{{else}}{{/if}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "TfvcChangesets",
              "resultTemplate": "{ Value : \"{{{changesetId}}}\", DisplayValue : \"Changeset {{{changesetId}}}\" }"
            },
            {
              "target": "latestVersion",
              "dataSourceName": "TfvcLatestChangeset",
              "resultTemplate": "{ Value : \"{{{changesetId}}}\", DisplayValue : \"Changeset {{{changesetId}}}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "TfvcArtifacts",
              "resultTemplate": "{ Value : \"{{{ #regex ([^/]*$) path}}}\", DisplayValue : \"{{{ #regex ([^/]*$) path}}}\", data: { artifactType: \"source\" } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "TfvcArtifactItems",
              "resultTemplate": "{ Value : \"{{{ #stringReplace sourceName '' path}}}\", DisplayValue : \"{{{ #stringReplace sourceName '' path}}}\", data: { itemType: \"{{#if isFolder}}folder{{else}}file{{/if}}\" } }"
            }
          ],
          "browsableArtifactTypeMapping": {
            "source": "artifactItems"
          }
        }
      },
      {
        "id": "externalTfvc-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/DownloadArtifactsTfsVersionControl"
        }
      },
      {
        "id": "externalTfGit-release-artifact-type",
        "description": "External TFS Git",
        "_description.comment": "Don't Localize the word 'TFS Git'",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "ExternalTfsGit",
          "displayName": "External TFS Git",
          "_displayName.comment": "Don't Localize the word 'TFS Git'",
          "endpointTypeId": "ExternalTFS",
          "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
          "downloadTaskId": "bf7b17db-eb58-4014-ab2b-e4bf9d3b28f1",
          "artifactType": "SourceControl",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "project",
              "name": "Project",
              "description": "Projects",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Source (repository)",
              "description": "Repository to pull",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "branch",
              "name": "Branch",
              "description": "Branch to checkout",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "artifacts",
              "name": "Artifacts",
              "description": "Source Artifacts",
              "inputMode": "none",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition",
                "branch"
              ],
              "validation": {
                "isRequired": false,
                "dataType": "string",
                "maxLength": 300
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "project",
              "dataSourceName": "Projects",
              "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "definition",
              "dataSourceName": "Repositories",
              "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "branch",
              "dataSourceName": "Branches",
              "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "GitCommits",
              "resultTemplate": "{ Value : \"{{{commitId}}}\", DisplayValue : \"{{{ #subString 0 8 commitId }}}\" }"
            },
            {
              "target": "latestVersion",
              "dataSourceName": "GitLatestCommit",
              "resultTemplate": "{ Value : \"{{{commitId}}}\", DisplayValue : \"{{{ #subString 0 8 commitId }}}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "GitArtifacts",
              "resultTemplate": "{ Value : \"{{{ #regex ([^/]*$) path}}}\", DisplayValue : \"{{{ #regex ([^/]*$) path}}}\", data: { itemType: \"{{#if isFolder}}Folder{{else}}File{{/if}}\", artifactType: \"source\" } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "GitArtifactItems",
              "resultTemplate": "{ Value : \"{{{ #stringReplace sourceName '' path}}}\", DisplayValue : \"{{{ #stringReplace sourceName '' path}}}\", data: { itemType: \"{{#if isFolder}}Folder{{else}}File{{/if}}\" } }"
            }
          ],
          "browsableArtifactTypeMapping": {
            "source": "artifactItems"
          }
        }
      },
      {
        "id": "externalTfGit-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/DownloadArtifactsTfsGit"
        }
      },
      {
        "id": "externalTFSXamlBuild-release-artifact-type",
        "description": "External TFS XAML Build Artifact",
        "_description.comment": "Don't Localize the words 'TFS' and 'XAML'",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "ExternalTfsXamlBuild",
          "displayName": "External TFS XAML Build",
          "_displayName.comment": "Don't Localize the words 'TFS' and 'XAML'",
          "endpointTypeId": "ExternalTFS",
          "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
          "artifactType": "Build",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "project",
              "name": "Project",
              "description": "Project Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "XAML Build Definition",
              "description": "XAML Build Definition Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "artifacts",
              "name": "Artifacts",
              "description": "Build artifacts",
              "inputMode": "none",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition"
              ],
              "validation": {
                "isRequired": false,
                "dataType": "string",
                "maxLength": 300
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "project",
              "dataSourceName": "XamlProjects",
              "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "definition",
              "dataSourceName": "XamlDefinitions",
              "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "XamlBuilds",
              "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{buildNumber}}}\" }"
            },
            {
              "target": "latestVersion",
              "dataSourceName": "LatestXamlBuild",
              "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{buildNumber}}}\" }"
            },
            {
              "target": "artifactDetails",
              "dataSourceName": "XamlBuild",
              "resultTemplate": "{ Name: \"drop\", StreamType: \"{{ #regex ^(..) dropLocation }}\", downloadUrl: \"{{endpoint.url}}/{{project}}/_api/_build/ItemContent?buildUri={{uri}}&path=/drop\", fileShareLocation : \"{{ #jsonEscape dropLocation }}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "XamlBuild",
              "resultTemplate": "{ Value : \"drop\", DisplayValue : \"drop\", data: { artifactType: \"{{{ #regex ^(..) dropLocation }}}\", containerId:\"{{ #regex /([0-9]+)/ dropLocation }}\" } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "ArtifactItems",
              "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { itemType: \"{{{itemType}}}\", containerId:\"{{containerId}}\" } }"
            }
          ],
          "browsableArtifactTypeMapping": {
            "#/": "artifactItems"
          },
          "artifactTypeStreamMapping": {
            "#/": "zip",
            "\\": "fileshare"
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "octopus-dashboard-plugin",
    "version": "0.1.200",
    "name": "Octopus Dashboard Plugin",
    "type": "Microsoft.VisualStudio.Services",
    "scopes": [
      "vso.profile",
      "vso.serviceendpoint_query"
    ],
    "demands": [
      "api-version/3.0"
    ],
    "description": "Adds the ability to visualize your Octopus Deploy release pipelines on your dashboard.",
    "publisher": "dpiessens",
    "public": false,
    "icons": {
      "default": "static/images/logo.png"
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "tags": [
      "deploy",
      "release",
      "octopus",
      "dashboard"
    ],
    "links": {
      "home": {
        "uri": "https://github.com/dpiessens/vsts-octopus-dashboard"
      },
      "repository": {
        "uri": "https://github.com/dpiessens/vsts-octopus-dashboard"
      },
      "issues": {
        "uri": "https://github.com/dpiessens/vsts-octopus-dashboard/issues"
      }
    },
    "branding": {
      "color": "rgb(220, 235, 252)",
      "theme": "light"
    },
    "files": [
      {
        "path": "dist",
        "addressable": true,
        "packagePath": "/"
      },
      {
        "path": "static",
        "addressable": true,
        "packagePath": "/"
      },
      {
        "path": "node_modules/vss-web-extension-sdk/lib",
        "addressable": true,
        "packagePath": "lib"
      },
      {
        "path": "node_modules/moment/min/moment.min.js",
        "addressable": true,
        "packagePath": "moment.js"
      },
      {
        "path": "node_modules/moment-timezone/builds/moment-timezone-with-data.min.js",
        "addressable": true,
        "packagePath": "moment-timezone.js"
      },
      {
        "path": "node_modules/axios/dist/axios.min.js",
        "addressable": true,
        "packagePath": "axios.js"
      }
    ],
    "categories": [
      "Integrate"
    ],
    "contributions": [
      {
        "id": "OctopusDashboardWidget",
        "type": "ms.vss-dashboards-web.widget",
        "targets": [
          "ms.vss-dashboards-web.widget-catalog",
          ".OctopusDashboardWidget-Configuration"
        ],
        "properties": {
          "name": "Octopus Dashboard Widget",
          "description": "A widget that display the deployment status of a project and environment(s)",
          "catalogIconUrl:": "images/logo.png",
          "previewImageUrl": "images/logo.png",
          "uri": "octopus-dashboard-widget.html",
          "supportedSizes": [
            {
              "rowSpan": 1,
              "columnSpan": 1
            },
            {
              "rowSpan": 1,
              "columnSpan": 2
            },
            {
              "rowSpan": 1,
              "columnSpan": 3
            }
          ],
          "supportedScopes": [
            "project_team"
          ]
        }
      },
      {
        "id": "OctopusDashboardWidget-Configuration",
        "type": "ms.vss-dashboards-web.widget-configuration",
        "targets": [
          "ms.vss-dashboards-web.widget-configuration"
        ],
        "properties": {
          "name": "Octopus Dashboard Widget Configuration",
          "description": "Configures the Octopus Dashboard Widget",
          "uri": "octopus-dashboard-widget-config.html"
        }
      },
      {
        "id": "octopus-dashboard-endpoint-type",
        "description": "Octopus Deploy Endpoint type for Octopus Dashboard widgets",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "OctopusDashboardEndpoint",
          "displayName": "Octopus Deploy Dashboard Widgets",
          "dataSources": [
            {
              "name": "OctopusAllProjects",
              "endpointUrl": "$(endpoint.url)/api/projects/all",
              "resultSelector": "jsonpath:$.[*]"
            },
            {
              "name": "OctopusAllEnvironments",
              "endpointUrl": "$(endpoint.url)/api/environments/all",
              "resultSelector": "jsonpath:$.[*]"
            },
            {
              "name": "OctopusAllTenants",
              "endpointUrl": "$(endpoint.url)/api/tenants/all",
              "resultSelector": "jsonpath:$.[*]"
            },
            {
              "name": "OctopusDeployments",
              "endpointUrl": "$(endpoint.url)/api/dashboard",
              "resultSelector": "jsonpath:$.Items[?(@.IsCurrent)]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "API Key",
                  "description": "API key for connection to Octopus Deploy",
                  "inputMode": "passwordBox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 32
                  }
                }
              ],
              "headers": [
                {
                  "name": "X-Octopus-ApiKey",
                  "value": "{{endpoint.apitoken}}"
                }
              ]
            }
          ],
          "helpMarkDown": "The Octopus URL must be accessible from VSTS. See [g.octopushq.com/ApiKey](http://g.octopushq.com/ApiKey) for details on how to generate an API key."
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "dynatrace-test-automation",
    "version": "2.4.9",
    "name": "Dynatrace Test Automation",
    "description": "Integration of Dynatrace within your build. Dynatrace instruments the Unit and Integration tests and performs Test Automation APM magic. The results flow back to your build in TFS.",
    "publisher": "Realdolmen",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "scopes": [
      "vso.build_execute",
      "vso.release_execute"
    ],
    "categories": [
      "Build and release"
    ],
    "content": {
      "details": {
        "path": "README.md"
      }
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Dynatrace connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "Dynatrace",
          "displayName": "Dynatrace API connection",
          "url": {
            "displayName": "Dynatrace API Url",
            "helpText": "Url pointing to the Dynatrace REST API. Should end with /api/v1 typically running on port 8021"
          },
          "dataSources": [
            {
              "name": "Dynatrace Profiles",
              "endpointUrl": "{{endpoint.url}}/profiles",
              "resultSelector": "jsonpath:$.systemprofiles.id"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/Dynatrace/Dynatrace-TFS-Integration-Plugin\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "dynatrace-testrun-results-tab",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "Adds the TestAutomation result details tab",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "Dynatrace Test Automation",
          "uri": "dynatrace-testautomation-results.html",
          "height": "auto"
        }
      },
      {
        "id": "dynatrace-testrun-summary-section",
        "type": "ms.vss-build-web.build-results-section",
        "description": "A section containing the summary of the TestRun results within Dynatrace",
        "targets": [
          "ms.vss-build-web.build-results-summary-tab",
          "ms.vss-releaseManagement-web.release-details-summary-tab"
        ],
        "properties": {
          "name": "Dynatrace Summary",
          "uri": "dynatrace-testautomation-summary.html",
          "order": 20,
          "height": "200px"
        }
      },
      {
        "id": "register-dynatrace-testrun",
        "description": "Register a new Testrun in Dynatrace",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DynatraceRegisterTestrun"
        }
      },
      {
        "id": "collect-dynatrace-testrun-results",
        "description": "Collects Dynatrace Testrun Results and stores them as a build attachment",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DynatraceCollectTestRunResults"
        }
      },
      {
        "id": "configure-dynatrace-server-dotnet",
        "description": "Overwrites default Dynatrace agent configuration by setting specific environment variables",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DynatraceConfigureServerDotNet"
        }
      }
    ],
    "files": [
      {
        "path": "dynatrace-testautomation-results.html",
        "addressable": true
      },
      {
        "path": "dynatrace-testautomation-summary.html",
        "addressable": true
      },
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "screenshots",
        "addressable": true
      },
      {
        "path": "DynatraceRegisterTestrun"
      },
      {
        "path": "DynatraceCollectTestRunResults"
      },
      {
        "path": "DynatraceConfigureServerDotNet"
      },
      {
        "path": "dist",
        "addressable": true,
        "packagePath": "scripts"
      },
      {
        "path": "node_modules/vss-web-extension-sdk/lib",
        "addressable": true,
        "packagePath": "lib"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "electric-flow",
    "version": "1.2.0.303",
    "icons": {
      "default": "images/extension-icon.png"
    },
    "categories": [
      "Azure Pipelines"
    ],
    "name": "ElectricFlow Extension for Azure DevOps Server and Azure DevOps Services",
    "content": {
      "details": {
        "path": "README.md"
      }
    },
    "tags": [
      "build",
      "DevOps"
    ],
    "branding": {
      "color": "white"
    },
    "description": "ElectricFlow is an enterprise-grade DevOps Release Automation platform that simplifies provisioning, build and release of multi-tiered applications.",
    "publisher": "ElectricCloud",
    "scopes": [
      "vso.build_execute",
      "vso.serviceendpoint_manage"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "screenshots": [
      {
        "path": "Screenshots/PublishArtifact.png"
      }
    ],
    "contributions": [
      {
        "id": "ef-endpoint-type",
        "description": "Service Endpoint type for ElectricFlow connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "electricFlow",
          "displayName": "ElectricFlow Server",
          "url": {
            "displayName": "Server URL",
            "helpText": "Specify the URL for the ElectricFlow Server. For e.g., https://electric-flow-server."
          },
          "dataSources": [
            {
              "name": "ElectricFlowProjects",
              "resultSelector": "jsonpath:$.project[*]",
              "endpointUrl": "{{{endpoint.url}}}/rest/{{{endpoint.restVersion}}}/projects"
            },
            {
              "name": "ElectricFlowPipelines",
              "endpointUrl": "{{{endpoint.url}}}/rest/{{{endpoint.restVersion}}}/projects/{{projectName}}/pipelines",
              "resultSelector": "jsonpath:$.pipeline[*].pipelineName"
            },
            {
              "name": "ElectricFlowReleases",
              "endpointUrl": "{{{endpoint.url}}}/rest/{{{endpoint.restVersion}}}/projects/{{projectName}}/releases",
              "resultSelector": "jsonpath:$.release[*].releaseName"
            },
            {
              "name": "ElectricFlowRepositories",
              "endpointUrl": "{{{endpoint.url}}}/rest/{{{endpoint.restVersion}}}/repositories",
              "resultSelector": "jsonpath:$.repository[?(@.repositoryDisabled=='0')].repositoryName"
            },
            {
              "name": "ElectricFlowReleaseStages",
              "endpointUrl": "{{{endpoint.url}}}/rest/{{{endpoint.restVersion}}}/projects/{{projectName}}/releases",
              "resultSelector": "jsonpath:$.release[?(@.releaseName=='{{{releaseName}}}')].stages.stage[*].name"
            }
          ],
          "inputDescriptors": [
            {
              "id": "restVersion",
              "name": "REST API Version",
              "description": "Specify the version for the ElectricFlow REST API. For e.g., v1.",
              "inputMode": "combo",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              },
              "values": {
                "defaultValue": "v1.0",
                "inputId": "restVersionValues",
                "possibleValues": [
                  {
                    "value": "v1.0",
                    "displayValue": "v1.0"
                  }
                ]
              }
            },
            {
              "id": "acceptUntrustedCerts",
              "name": "Override Electric Flow SSL Validation Check",
              "description": "By default SSL Validation Check will be performed. Choose this setting to override the check. If you do not want to override this check, perform the SSL certificate setup required in Jenkins and Electric Flow as per the Electric Flow Server documentation.",
              "inputMode": "checkbox",
              "isConfidential": false,
              "validation": {
                "isRequired": false,
                "dataType": "boolean"
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "User Name",
                  "description": "Specify the user name for the ElectricFlow.",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "User Password",
                  "description": "Specify the user password for the ElectricFlow.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Connection settings, used later in build tasks to connect to your hosted ElectricFlow instance."
        }
      },
      {
        "id": "run-pipeline",
        "description": "ElectricFlow - Run Pipeline",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "RunPipeline"
        }
      },
      {
        "id": "publish-artifact",
        "description": "ElectricFlow - Publish Artifact",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "PublishArtifact"
        }
      },
      {
        "id": "call-rest",
        "description": "ElectricFlow - REST Call",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "RESTCall"
        }
      },
      {
        "id": "TriggerRelease",
        "description": "ElectricFlow - Trigger Release",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "TriggerRelease"
        }
      }
    ],
    "repository": {
      "type": "git",
      "uri": "https://github.com/electric-cloud/tfs-extension"
    },
    "files": [
      {
        "path": "RunPipeline"
      },
      {
        "path": "PublishArtifact"
      },
      {
        "path": "RESTCall"
      },
      {
        "path": "TriggerRelease"
      }
    ],
    "public": true
  },
  {
    "manifestVersion": 1,
    "id": "fusion-app-management",
    "version": "1.0.3",
    "name": "Extension to manage fusion apps",
    "description": "Tasks and service connection to faciliate app deployment, publishing and other management tasks through DevOps pipelines.",
    "publisher": "EquinorFusion",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/extension-icon-120x120.png"
    },
    "content": {
      "details": {
        "path": "README.md"
      }
    },
    "categories": [
      "Azure Pipelines"
    ],
    "files": [
      {
        "path": "tasks/fusion-cli"
      },
      {
        "path": "tasks/fusion-framework"
      },
      {
        "path": "tasks/fusion-app"
      },
      {
        "path": "tasks/fusion-tile"
      }
    ],
    "contributions": [
      {
        "id": "fusion-cli-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/fusion-cli"
        }
      },
      {
        "id": "fusion-framework-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/fusion-framework"
        }
      },
      {
        "id": "fusion-app-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/fusion-app"
        }
      },
      {
        "id": "fusion-tile-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/fusion-tile"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Service endpoint for Fusion App management",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "fusionAppSP",
          "displayName": "Fusion App Management",
          "url": {
            "displayName": "Server Url",
            "value": "https://fusion.equinor.com",
            "isVisible": "false"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "ClientId",
                  "description": "Client ID for the app with management permissions",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "ClientSecret",
                  "description": "Client Secret",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "GoDaddyDnsZoneManager",
    "name": "GoDaddy DNS zone manager",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "publisher": "ExpertaPreview",
    "description": "Tasks package for GoDaddy DNS Zone",
    "tags": [
      "GoDaddy DNS Zone",
      "Build",
      "Release",
      "Azure Pipelines",
      "macOS",
      "linux",
      "windows"
    ],
    "links": {
      "support": {
        "uri": "https://github.com/expertasolutions/GoDaddyDns/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/expertasolutions/GoDaddyDns"
    },
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "icon.png"
    },
    "content": {
      "details": {
        "path": "readme.md"
      },
      "license": {
        "path": "license"
      }
    },
    "files": [
      {
        "path": "aRecordManager"
      },
      {
        "path": "cnameRecordManager"
      },
      {
        "path": "img",
        "addressable": true
      }
    ],
    "badges": [
      {
        "href": "https://dev.azure.com/experta/Community/_build?definitionId=237",
        "uri": "https://dev.azure.com/experta/Community/_apis/build/status/expertasolutions.GoDaddyDNS?branchName=master",
        "description": "Master build"
      },
      {
        "href": "https://dev.azure.com/experta/Community/_release?_a=releases&definitionId=1",
        "uri": "https://vsrm.dev.azure.com/experta/_apis/public/Release/badge/97814487-b723-4a7d-a446-f599ab91ea2f/1/3",
        "description": "Public marketplace"
      }
    ],
    "contributions": [
      {
        "id": "custom-build-release-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "aRecordManager"
        }
      },
      {
        "id": "cnameRecord-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "cnameRecordManager"
        }
      },
      {
        "id": "godaddy-service-endpoint",
        "description": "GoDaddy Service Endpoint",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "godaddy-serviceendpoint",
          "displayName": "GoDaddy API endpoint",
          "url": {
            "displayName": "API Url"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "displayName": "GoDaddy Token Based Authentication",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "{{endpoint.apitoken}}:{{endpoint:apisecret}}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "GoDaddy API Key",
                  "description": "API Token for connection to endpoint",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "apisecret",
                  "name": "GoDaddy API Secret",
                  "description": "API Secret for connection to endpoint",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 100
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "fossa-vsts",
    "publisher": "Fossa",
    "version": "0.0.22",
    "name": "FOSSA",
    "description": "Automatically analyze your code for open source license compliance and security vulnerabilities",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "content": {
      "details": {
        "path": "details.md"
      }
    },
    "categories": [
      "Build and release"
    ],
    "branding": {
      "color": "rgb(78, 104, 193)",
      "theme": "dark"
    },
    "icons": {
      "default": "images/fossa-glyph-dark.png"
    },
    "files": [
      {
        "path": "fossa",
        "addressable": true
      },
      {
        "path": "images",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "fossa-cli",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "fossa"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for FOSSA connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "fossa",
          "displayName": "FOSSA",
          "url": {
            "displayName": "Endpoint URL",
            "defaultValue": "https://app.fossa.io",
            "helpText": "URL for the FOSSA server to connect to."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            }
          ],
          "helpMarkDown": "<a href=\"https://docs.fossa.io\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "sdelements",
    "version": "0.1.22",
    "name": "SD Elements Integration",
    "publisher": "GeoffW",
    "description": "Security Compass SD Elements Platform Integration",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "tags": [
      "security",
      "release",
      "devsecops",
      "continuous integration",
      "deploy task"
    ],
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "static/images/sdelements-icon.png"
    },
    "files": [
      {
        "path": "SDElementsProjectRiskCheck"
      }
    ],
    "links": {
      "home": {
        "uri": "https://www.securitycompass.com/sdelements/"
      }
    },
    "contributions": [
      {
        "id": "SDElementsProjectRiskCheck",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "SDElementsProjectRiskCheck"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for SD Elements connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "SDElements",
          "displayName": "SD Elements",
          "url": {
            "displayName": "Server Url",
            "helpText": "URL for the SD Elements server to connect to."
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{{endpoint.url}}}api/v2/users/me/",
              "resultSelector": "jsonpath:$.values[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "API Token",
                  "description": "API key for connection",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ],
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Token {{endpoint.apitoken}}"
                }
              ]
            }
          ],
          "helpMarkDown": "This is help"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "terraform-pipelines-extension-dev",
    "name": "Terraform",
    "version": "0.0.1",
    "publisher": "hashicorp",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Task for running Terraform on Azure, AWS, GCP, and Terraform Cloud/Enterprise",
    "categories": [
      "Azure Pipelines"
    ],
    "Tags": [
      "Vault",
      "HashiCorp",
      "Secrets",
      "Release",
      "DevOps"
    ],
    "icons": {
      "default": "images/icon.png",
      "large": "images/icon.png"
    },
    "files": [
      {
        "path": "Tasks/TerraformInstaller"
      },
      {
        "path": "Tasks/Terraform"
      },
      {
        "path": "Tasks/TerraformEnterprise"
      }
    ],
    "contributions": [
      {
        "id": "9b9f2e72-30c3-432b-a835-dd2b1160f3b5",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/TerraformInstaller"
        }
      },
      {
        "id": "653507a3-d921-47dc-8fed-c5649d8e9e0e",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/Terraform"
        }
      },
      {
        "id": "506f3bf4-69c9-4812-a879-ccfc035f174c",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/TerraformEnterprise"
        }
      },
      {
        "id": "terraform-cloud-endpoint-type",
        "description": "Credentials for tasks invoking Terraform Cloud and Enterprise",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "terraformServiceEndpoint",
          "displayName": "Terraform Cloud and Enterprise",
          "authenticationSchemes": [
            {
              "id": "endpoint-auth-scheme-token",
              "name": "token",
              "displayName": "i18n:Access Token",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "description": "i18n:Token based endpoint authentication scheme",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "i18n:Token",
                  "description": "i18n:Token to use when accessing Terraform cloud and Enterprise",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ],
          "url": {
            "displayName": "i18n:Terraform Instance URL",
            "required": true,
            "value": "https://app.terraform.io",
            "helpText": "i18n:Client connection endpoint for the Terraform Cloud or Enterprise instance. Prefix the value with \"https://\"."
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "vault-pipelines-extension-dev",
    "name": "Vault",
    "version": "0.0.1",
    "publisher": "hashicorp",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Task for interfacing with HashiCorp Vault in Azure Pipelines",
    "categories": [
      "Azure Pipelines"
    ],
    "Tags": [
      "Vault",
      "HashiCorp",
      "Secrets",
      "Release",
      "DevOps"
    ],
    "icons": {
      "default": "images/icon.png",
      "large": "images/icon.png"
    },
    "files": [
      {
        "path": "Tasks/VaultInstaller"
      },
      {
        "path": "Tasks/Vault"
      }
    ],
    "contributions": [
      {
        "id": "f5016087-a6db-40c4-9f5e-c8aeead16b89",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/VaultInstaller"
        }
      },
      {
        "id": "23bc3f85-3d14-49a2-aec3-07e40fa06676",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/Vault"
        }
      },
      {
        "id": "vault-enpoint-type",
        "description": "Credentials for task invoking HashiCorp Vault",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "vaultServiceEndpoint",
          "displayName": "Vault",
          "authenticationSchemes": [
            {
              "id": "endpoint-auth-scheme-token",
              "name": "token",
              "displayName": "i18n:Vault Token",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "description": "i18n:Token based endpoint authentication scheme",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "i18n:Vault Token",
                  "description": "i18n:Token to use when accessing vault",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            },
            {
              "id": "endpoint-auth-scheme-userpass",
              "name": "Userpass",
              "displayName": "i18n:Username/Password",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "description": "i18n:Vault username endpoint authentication scheme",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "i18n:Username",
                  "description": "i18n:Vault username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "i18n:Password",
                  "description": "i18n:Vault Password",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "url": {
            "displayName": "i18n:Vault URL",
            "required": true,
            "helpText": "i18n:Client connection endpoint for the Vault instance. Prefix the value with \"https://\"."
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "service-endpoint-tutorial",
    "version": "0.1.1",
    "name": "Sample extension that leverages a service endpoint",
    "description": "A sample Azure DevOps Services extension which shows how to create a custom endpoint and dynamic build task parameters taking value from a REST API.",
    "publisher": "francistotten",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service endpoint type for Fabrikam connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "fabrikam",
          "displayName": "Fabrikam server connection",
          "url": {
            "displayName": "Server Url",
            "helpText": "Url for the Fabrikam server to connect to."
          },
          "dataSources": [
            {
              "name": "Fabrikam Projects",
              "endpointUrl": "{{endpoint.url}}api/projects/index",
              "resultSelector": "jsonpath:$[*].nm"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ],
    "files": [
      {
        "path": "BuildTaskFolder"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "service-endpoint-tutorial",
    "version": "0.1.70",
    "name": "Electric Flow Test Pipeline Run",
    "description": "A sample Visual Studio Team Services extension which shows how to create a custom endpoint and dynamic build task parameters taking value from a REST API.",
    "publisher": "polinashubina",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Electric Flow connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "electricFlow",
          "displayName": "Electric Flow server connection",
          "url": {
            "displayName": "Server Url",
            "helpText": "Url for Electric Flow server to connect to."
          },
          "dataSources": [
            {
              "name": "ElectricFlowProjects",
              "endpointUrl": "{{endpoint.url}}rest/v1.0/projects",
              "resultSelector": "$.project[*].projectName"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "skipCertCheck",
                  "name": "Skip cert check",
                  "description": "Skip cert check",
                  "inputMode": "checkbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "boolean"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "## Test help"
        }
      },
      {
        "id": "run-pipeline",
        "description": "Run Electric Flow Pipeline",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "RunPipeline"
        }
      },
      {
        "id": "publish-artifact",
        "description": "Publish Artifact to Electric Flow Repository",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "PublishArtifact"
        }
      }
    ],
    "files": [
      {
        "path": "RunPipeline"
      },
      {
        "path": "PublishArtifact"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "vsts-extension",
    "name": "Raygun",
    "version": "1.0.1",
    "galleryFlags": [
      "Public"
    ],
    "publisher": "raygun",
    "description": "Provides a task for uploading symbols to Raygun from a TFS/Team Services build or release definition",
    "categories": [
      "Build and release"
    ],
    "tags": [
      "deploy",
      "release",
      "iOS",
      "Xcode",
      "Apple",
      "iPad",
      "iPhone",
      "tvOS",
      "watchOS"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "raygun_default.png"
    },
    "visibility": [
      "Build and release"
    ],
    "content": {
      "details": {
        "path": "docs/vsts-README.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/Ivan-L/vsts-raygun-extension"
      },
      "support": {
        "uri": "https://github.com/Ivan-L/vsts-raygun-extension/issues"
      }
    },
    "files": [
      {
        "path": "_build/Tasks/UploadSymbols"
      },
      {
        "path": "images",
        "addressable": true
      }
    ],
    "scope": [
      "vso.build",
      "vso.serviceendpoint"
    ],
    "contributions": [
      {
        "id": "upload-symbols",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "_build/Tasks/UploadSymbols"
        }
      },
      {
        "id": "raygun-service-endpoint",
        "description": "RaygunAuthenticationEndpoint",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "raygun",
          "displayName": "Raygun",
          "url": "https://raygun.com/",
          "inputDescriptors": [],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "displayName": "External Access Token",
              "headers": [],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "External Access Token",
                  "description": "You can create this token within your <a href=\"https://app.raygun.io/user\" target=\"_blank\">user settings</a> in Raygun in the External Access Token section.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Raygun E-mail",
                  "description": "The e-mail address of the service account used to authenticate with Raygun.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password for the account that is connecting to Raygun.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "jessehouwing-vsts-snyk-task",
    "name": "[DEPRECATED] Snyk for Azure Pipelines",
    "version": "2.0.0",
    "publisher": "jessehouwing",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scope": [
      "vso.build"
    ],
    "description": "Snyk continuously finds and fixes vulnerabilities in your dependencies.",
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "Extension",
      "Build",
      "Snyk",
      "Code Analysis",
      "Security",
      "Scanning",
      "Node",
      "Npm",
      "Xpirit"
    ],
    "screenshots": [
      {
        "path": "extension/Images/Screenshots/snyk-logo-small.png"
      },
      {
        "path": "extension/Images/Screenshots/add-task.png"
      },
      {
        "path": "extension/Images/Screenshots/task-config.png"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      },
      "license": {
        "path": "LICENSE.md"
      },
      "privacy": {
        "path": "PRIVACY.md"
      }
    },
    "links": {
      "home": {
        "uri": "https://jessehouwing.net/"
      },
      "getstarted": {
        "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task/wiki/Getting-Started"
      },
      "support": {
        "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task/issues"
      },
      "issues": {
        "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task/issues"
      },
      "license": {
        "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task/LICENSE.md"
      },
      "privacypolicy": {
        "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task/blob/master/PRIVACY.md"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task"
    },
    "branding": {
      "color": "rgb(34, 34, 72)",
      "theme": "dark"
    },
    "icons": {
      "default": "extension/images/extension-icon-small.png",
      "large": "extension/images/extension-icon.png"
    },
    "files": [
      {
        "path": "snyk/v1/node_modules"
      },
      {
        "path": "snyk/v1/snyk.js"
      },
      {
        "path": "snyk/v1/icon.png"
      },
      {
        "path": "snyk/v1/icon.svg"
      },
      {
        "path": "snyk/v1/task.json"
      },
      {
        "path": "snyk/v2/node_modules"
      },
      {
        "path": "snyk/v2/snyk.js"
      },
      {
        "path": "snyk/v2/icon.png"
      },
      {
        "path": "snyk/v2/icon.svg"
      },
      {
        "path": "snyk/v2/task.json"
      }
    ],
    "badges": [
      {
        "href": "https://snyk.io/test/github/jessehouwing/vsts-snyk-task?targetFile=vsts-snyk%2Fpackage.json",
        "uri": "https://snyk.io/test/github/jessehouwing/vsts-snyk-task/badge.svg?targetFile=vsts-snyk%2Fpackage.json",
        "description": "Snyk"
      },
      {
        "href": "https://paypal.me/jessehouwing/5",
        "uri": "https://github.com/jessehouwing/azure-pipelines-snyk-task/blob/master/extension/images/donate.png?raw=true",
        "description": "Donate"
      },
      {
        "href": "https://jessehouwing.visualstudio.com/vsts-extensions/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=44",
        "uri": "https://jessehouwing.visualstudio.com/_apis/public/build/definitions/a88536a2-a889-45a3-a955-ddf1af8aeba1/44/badge",
        "description": "Build"
      }
    ],
    "contributions": [
      {
        "id": "vsts-snyk",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "snyk"
        }
      },
      {
        "id": "snykio-service-endpoint",
        "description": "Snyk.io",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "Snyk",
          "displayName": "Snyk.io Auth Token",
          "url": "https://snyk.io/",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "API Token",
                  "description": "Go to <a href=\"https://snyk.io/account/\" target=\"_blank\">snyk.io/account</a> or run `snyk auth` to find your API Token.",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Go to <a href=\"https://snyk.io/account/\">snyk.io/account</a> or run `snyk auth` to find your API Token."
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "jessehouwing-vsts-extension-tasks-TEST",
    "name": "VSTS Extension Tasks",
    "version": "0.0.0",
    "publisher": "jessehouwing",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scope": [
      "vso.build",
      "vso.serviceendpoint"
    ],
    "description": "Build and Release Management extensions that enable you to package, publish and share VSTS Extensions to the marketplace.",
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Extension",
      "Marketplace",
      "Publish",
      "Package",
      "Xpirit"
    ],
    "screenshots": [
      {
        "path": "extension/Images/Screenshots/packageandpublish.png"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/jessehouwing/vsts-extension-tasks/wiki"
      },
      "support": {
        "uri": "https://github.com/jessehouwing/vsts-extension-tasks/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/jessehouwing/vsts-extension-tasks"
    },
    "branding": {
      "color": "rgb(36, 43, 50)",
      "theme": "dark"
    },
    "icons": {
      "default": "extension/images/extension-icon.png"
    },
    "files": [
      {
        "path": "vsts-extension-packageandpublish/vsts-extension-packageandpublish.ps1"
      },
      {
        "path": "vsts-extension-packageandpublish/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-packageandpublish/task.json"
      },
      {
        "path": "vsts-extension-packageandpublish/icon.png"
      },
      {
        "path": "vsts-extension-share/vsts-extension-share.ps1"
      },
      {
        "path": "vsts-extension-share/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-share/task.json"
      },
      {
        "path": "vsts-extension-share/icon.png"
      },
      {
        "path": "vsts-extension-publish/vsts-extension-publish.ps1"
      },
      {
        "path": "vsts-extension-publish/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-publish/task.json"
      },
      {
        "path": "vsts-extension-publish/icon.png"
      },
      {
        "path": "vsts-extension-version/vsts-extension-version.ps1"
      },
      {
        "path": "vsts-extension-version/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-version/task.json"
      },
      {
        "path": "vsts-extension-version/icon.png"
      },
      {
        "path": "vsts-extension-install/vsts-extension-install.ps1"
      },
      {
        "path": "vsts-extension-install/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-install/task.json"
      },
      {
        "path": "vsts-extension-install/icon.png"
      }
    ],
    "contributions": [
      {
        "id": "vsts-extension-packageandpublish",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-packageandpublish"
        }
      },
      {
        "id": "vsts-extension-share",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-share"
        }
      },
      {
        "id": "vsts-extension-publish",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-publish"
        }
      },
      {
        "id": "vsts-extension-version",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-version"
        }
      },
      {
        "id": "vsts-extension-install",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-install"
        }
      },
      {
        "id": "marketplace-service-endpoint",
        "description": "Visual Studio Marketplace",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "marketplace-auth-key",
          "displayName": "Visual Studio Marketplace",
          "url": "https://marketplace.visualstudio.com/",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "serveruri",
                  "name": "Server Location",
                  "description": "TFS Server location",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "public": true,
    "id": "jfrog-artifactory-vsts-extension",
    "version": "1.8.1",
    "name": "JFrog Artifactory",
    "description": "Integrate your JFrog Artifactory with Visual Studio Team Services.",
    "publisher": "JFrog",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/artifactory.png"
    },
    "scopes": [
      "vso.build",
      "vso.build_execute"
    ],
    "categories": [
      "Build and release"
    ],
    "tags": [
      "JFrog",
      "Artifactory",
      "Artifact",
      "Build",
      "Release",
      "Promote",
      "Upload",
      "Download",
      "Repository"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://www.jfrog.com"
      },
      "learn": {
        "uri": "https://www.jfrog.com/confluence/display/RTF/Welcome+to+Artifactory"
      },
      "support": {
        "uri": "https://www.jfrog.com/support"
      },
      "repository": {
        "uri": "https://github.com/jfrog/artifactory-vsts-extension"
      }
    },
    "branding": {
      "color": "ffffff",
      "theme": "light"
    },
    "contributions": [
      {
        "id": "artifactory-service",
        "description": "Service Endpoint type for Artifactory connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "artifactoryService",
          "displayName": "Artifactory",
          "url": {
            "displayName": "Server URL",
            "helpText": "Specify the root URL of your Artifactory installation. For example, http://repo.jfrog.org/artifactory"
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/plugins",
              "resultSelector": "jsonpath:$.values[*]"
            },
            {
              "name": "BuildNames",
              "endpointUrl": "{{endpoint.url}}/api/build",
              "resultSelector": "jsonpath:$.builds[*]"
            },
            {
              "name": "BuildNumbers",
              "endpointUrl": "{{endpoint.url}}/api/build/{{definition}}",
              "resultSelector": "jsonpath:$.buildsNumbers[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Artifactory username with deploy permissions.",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password or API key of an Artifactory user with deploy permissions.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Bearer {{ endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Access Token",
                  "description": "Access Token with deploy permissions. Click <a href=\"https://https://www.jfrog.com/confluence/display/ACC/Access+Tokens\" target=\"_blank\">here</a> for information on how to generate Access Tokens.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "artifactory-release-artifact-type",
        "description": "Artifactory",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "Artifactory",
          "displayName": "Artifactory",
          "endpointTypeId": "artifactoryService",
          "uniqueSourceIdentifier": "{{connection}}:{{definition}}:{{buildNumber}}",
          "downloadTaskId": "07fc5c20-6772-11e5-abde-6901d3c00755",
          "artifactType": "Package",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Artifactory service",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Build Name",
              "hasDynamicValueInformation": true,
              "inputMode": "Combo",
              "isConfidential": false,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "defaultVersionType",
              "name": "Default Version",
              "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": false,
              "values": {
                "inputId": "defaultVersionTypeValues",
                "defaultValue": "selectDuringReleaseCreationType",
                "possibleValues": [
                  {
                    "value": "selectDuringReleaseCreationType",
                    "displayValue": "Specify at the time of release creation"
                  },
                  {
                    "value": "specificVersionType",
                    "displayValue": "Specify a specific build number"
                  }
                ],
                "isLimitedToPossibleValues": true
              },
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "defaultVersionSpecific",
              "name": "Build Number",
              "hasDynamicValueInformation": true,
              "inputMode": "Combo",
              "isConfidential": false,
              "groupName": "[{ \"Key\": \"defaultVersionType\", \"Value\": \"specificVersionType\"}]",
              "properties": {
                "visibleRule": "defaultVersionType == specificVersionType"
              },
              "dependencyInputIds": [
                "connection",
                "definition",
                "defaultVersionType"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "definition",
              "dataSourceName": "BuildNames",
              "resultTemplate": "{ \"Value\" : \"{{{ #regex /?(.*$) uri}}}\", \"DisplayValue\" : \"{{{ #regex /?(.*$) uri}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "BuildNumbers",
              "resultTemplate": "{ \"Value\" : \"{{{ #regex /?(.*$) uri}}}\", \"DisplayValue\" : \"{{{ #regex /?(.*$) uri}}}\" }"
            },
            {
              "target": "latestversion",
              "dataSourceName": "BuildNumbers",
              "resultTemplate": "{ Value : \"{{{ #regex /?(.*$) uri}}}\", DisplayValue : \"{{{ #regex /?(.*$) uri}}}\" }"
            },
            {
              "target": "defaultVersionSpecific",
              "dataSourceName": "BuildNumbers",
              "resultTemplate": "{ \"Value\" : \"{{{ #regex /?(.*$) uri}}}\", \"DisplayValue\" : \"{{{ #regex /?(.*$) uri}}}\" }"
            },
            {
              "target": "artifactDetails",
              "resultTemplate": "{ \"Name\": \"{{version}}\", \"downloadUrl\" : \"{{endpoint.url}}\" }"
            }
          ]
        }
      },
      {
        "id": "artifactory-build-info-tab",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "A tab in build result to enforce Artifactory integration",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "Artifactory",
          "uri": "artifactory-build-info.html"
        }
      },
      {
        "id": "artifactory-promote-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryBuildPromotion"
        }
      },
      {
        "id": "artifactory-generic-download",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryGenericDownload"
        }
      },
      {
        "id": "artifactory-generic-upload",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryGenericUpload"
        }
      },
      {
        "id": "artifactory-maven",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryMaven"
        }
      },
      {
        "id": "artifactory-npm",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryNpm"
        }
      },
      {
        "id": "artifactory-nuget",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryNuget"
        }
      },
      {
        "id": "artifactory-publish-build-info",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryPublishBuildInfo"
        }
      },
      {
        "id": "artifactory-docker",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryDocker"
        }
      },
      {
        "id": "artifactory-conan-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryConan"
        }
      },
      {
        "id": "artifactory-xray-scan-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryXrayScan"
        }
      },
      {
        "id": "artifactory-discard-builds-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryDiscardBuilds"
        }
      },
      {
        "id": "artifactory-tools-installer-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryToolsInstaller"
        }
      },
      {
        "id": "artifactory-properties-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryProperties"
        }
      },
      {
        "id": "artifactory-go",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/ArtifactoryGo"
        }
      }
    ],
    "files": [
      {
        "path": "artifactory-build-info.html",
        "addressable": true
      },
      {
        "path": "lib",
        "addressable": true
      },
      {
        "path": "scripts",
        "addressable": true
      },
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "tasks/ArtifactoryBuildPromotion"
      },
      {
        "path": "tasks/ArtifactoryGenericDownload"
      },
      {
        "path": "tasks/ArtifactoryGenericUpload"
      },
      {
        "path": "tasks/ArtifactoryMaven"
      },
      {
        "path": "tasks/ArtifactoryNpm"
      },
      {
        "path": "tasks/ArtifactoryNuget"
      },
      {
        "path": "tasks/ArtifactoryPublishBuildInfo"
      },
      {
        "path": "tasks/ArtifactoryDocker"
      },
      {
        "path": "tasks/ArtifactoryConan"
      },
      {
        "path": "tasks/ArtifactoryXrayScan"
      },
      {
        "path": "tasks/ArtifactoryDiscardBuilds"
      },
      {
        "path": "tasks/ArtifactoryToolsInstaller"
      },
      {
        "path": "tasks/ArtifactoryProperties"
      },
      {
        "path": "tasks/ArtifactoryGo"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "TriggerNewBuild",
    "name": "Trigger New Build",
    "version": "0.0.56",
    "publisher": "jihedmhadhbi",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "tags": [
      "build",
      "queue",
      "tasks",
      "trigger"
    ],
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "LICENSE.txt"
      }
    },
    "description": "Trigger a new Build in the same or in other project.",
    "categories": [
      "Build and release"
    ],
    "files": [
      {
        "path": "task"
      },
      {
        "path": "screenshots",
        "addressable": true
      }
    ],
    "links": {
      "support": {
        "uri": "https://github.com/jimhaMJ/vsts-tfs-trigger-build/issues"
      },
      "repository": {
        "uri": "https://github.com/jimhaMJ/vsts-tfs-trigger-build"
      },
      "issues": {
        "uri": "https://github.com/jimhaMJ/vsts-tfs-trigger-build/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/jimhaMJ/vsts-tfs-trigger-build"
    },
    "screenshots": [
      {
        "path": "screenshots/create-token.png"
      },
      {
        "path": "screenshots/add-end-point.png"
      },
      {
        "path": "screenshots/configure-end-point.png"
      },
      {
        "path": "screenshots/add-task.png"
      },
      {
        "path": "screenshots/configure-task.png"
      },
      {
        "path": "screenshots/log.png"
      }
    ],
    "contributions": [
      {
        "id": "BuildTrigger",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "task"
        }
      },
      {
        "id": "vstsTfsApi-endpoint-type",
        "description": "Service Endpoint type for vsts/tfs api connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "vstsTfsApi",
          "displayName": "Build Api Access",
          "url": {
            "displayName": "Server Url"
          },
          "dataSources": [
            {
              "name": "collections",
              "endpointUrl": "{{endpoint.url}}_apis/projectcollections?api-version=1.0-preview.2",
              "resultSelector": "jsonpath:$.value[*].name"
            },
            {
              "name": "projects",
              "endpointUrl": "{{endpoint.url}}{{collectionName}}/_apis/projects?api-version=1.0",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "buildDefinitions",
              "endpointUrl": "{{endpoint.url}}{{collectionName}}/{{project}}/_apis/build/definitions?api-version=2.0",
              "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal access token is applicable only for endpoint targeting VSTS account or TFS 2016. Click <a href=\"https://www.visualstudio.com/en-us/docs/setup-admin/team-services/use-personal-access-tokens-to-authenticate\" target=\"_blank\">here</a>. for information on how to create Personal Access Token.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "vault-pipelines-extension-dev",
    "name": "Vault",
    "version": "0.0.1",
    "publisher": "jlorich",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Task for interfacing with HashiCorp Vault in Azure Pipelines",
    "categories": [
      "Azure Pipelines"
    ],
    "Tags": [
      "Vault",
      "HashiCorp",
      "Secrets",
      "Release",
      "DevOps"
    ],
    "icons": {
      "default": "images/icon.png",
      "large": "images/icon.png"
    },
    "files": [
      {
        "path": "Tasks/VaultInstaller"
      },
      {
        "path": "Tasks/Vault"
      }
    ],
    "contributions": [
      {
        "id": "f5016087-a6db-40c4-9f5e-c8aeead16b89",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/VaultInstaller"
        }
      },
      {
        "id": "23bc3f85-3d14-49a2-aec3-07e40fa06676",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/Vault"
        }
      },
      {
        "id": "vault-enpoint-type",
        "description": "Credentials for task invoking HashiCorp Vault",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "vaultServiceEndpoint",
          "displayName": "Vault",
          "authenticationSchemes": [
            {
              "id": "endpoint-auth-scheme-token",
              "name": "token",
              "displayName": "i18n:Vault Token",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "description": "i18n:Token based endpoint authentication scheme",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "i18n:Vault Token",
                  "description": "i18n:Token to use when accessing vault",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            },
            {
              "id": "endpoint-auth-scheme-userpass",
              "name": "Userpass",
              "displayName": "i18n:Username/Password",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "description": "i18n:Vault username endpoint authentication scheme",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "i18n:Username",
                  "description": "i18n:Vault username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "i18n:Password",
                  "description": "i18n:Vault Password",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "url": {
            "displayName": "i18n:Vault URL",
            "required": true,
            "helpText": "i18n:Client connection endpoint for the Vault instance. Prefix the value with \"https://\"."
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "azsearch-ado-extension",
    "name": "Azure Search extension for Azure DevOps",
    "version": "0.0.1",
    "scopes": [],
    "description": "Azure DevOps Extension for Azure Search CI/CD related tasks.",
    "publisher": "joalmeid",
    "galleryFlags": [
      "Preview"
    ],
    "files": [
      {
        "path": "azsearch-1-task"
      },
      {
        "path": "static/images",
        "addressable": true
      }
    ],
    "icons": {
      "default": "static/images/azSearch-128-logo.png"
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [
      "api-version/3.0"
    ],
    "tags": [
      "Azure Search",
      "Pipelines",
      "ci",
      "cd",
      "continuous integration",
      "continuous deployment"
    ],
    "categories": [
      "Azure Pipelines"
    ],
    "screenshots": [
      {
        "path": "static/images/azsearch-azsearch-create-ds-task-ui.png"
      },
      {
        "path": "static/images/azsearch-service-endpoint.png"
      }
    ],
    "content": {
      "license": {
        "path": "license.md"
      },
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://dev.azure.com/joalmeid/_git/azsearch-extensions/_wiki/Getting-Started"
      },
      "support": {
        "uri": "https://dev.azure.com/joalmeid/_git/azsearch-extensions/_wiki?pagePath=%2FAzSearch%20DevOps%20Extension%2FSupport"
      },
      "issues": {
        "uri": "https://dev.azure.com/joalmeid/_git/azsearch-extensions/_wiki?pagePath=%2FAzSearch%20DevOps%20Extension%2Fissues"
      },
      "repository": {
        "uri": "https://dev.azure.com/joalmeid/_git/azsearch-extensions"
      },
      "learn": {
        "uri": "https://dev.azure.com/joalmeid/_git/azsearch-extensions/_wiki?pagePath=%2FAzSearch%20DevOps%20Extension"
      }
    },
    "branding": {
      "color": "rgb(255, 217, 0)",
      "theme": "light"
    },
    "contributions": [
      {
        "id": "azsearch-create-ds-task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "type": "ms.vss-distributed-task.task",
        "properties": {
          "name": "azsearch-create-ds-task"
        }
      },
      {
        "id": "azsearch-endpoint-type",
        "description": "Service Endpoint for a Azure DevOps API connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "azSearchAzuredevopsAPI",
          "displayName": "AzSearch Azure DevOps API",
          "url": {
            "displayName": "i18n:Organization Url",
            "value": "https://dev.azure.com/[organization]",
            "isVisible": "true"
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$[*].Key"
            },
            {
              "name": "projects",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "buildDefinitions",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions",
              "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]"
            },
            {
              "name": "releaseDefinitions",
              "endpointUrl": "{{endpoint.releaseUrl}}/{{project}}/_apis/release/definitions",
              "resultSelector": "jsonpath:$.value[?(@.isDeleted==false)]"
            }
          ],
          "inputDescriptors": [
            {
              "id": "releaseUrl",
              "name": "i18n:Release API Url",
              "description": "The url of the release API",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              },
              "values": {
                "inputId": "releaseUrlInput",
                "defaultValue": "https://vsrm.dev.azure.com/[organization]"
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal access token.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "ado-pipeline-triggerer",
    "name": "Azure DevOps Pipeline Triggerer Extension",
    "version": "1.0.30",
    "scopes": [],
    "description": "Azure DevOps Pipeline Triggerer Extension",
    "publisher": "joalmeid",
    "galleryFlags": [
      "Preview"
    ],
    "files": [
      {
        "path": "pipeline-trigger-task"
      },
      {
        "path": "static/images",
        "addressable": true
      }
    ],
    "icons": {
      "default": "static/images/azure-pipelines-logo-128.png"
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [
      "api-version/3.0"
    ],
    "tags": [
      "Pipelines",
      "ci",
      "cd",
      "continuous integration",
      "continuous deployment"
    ],
    "categories": [
      "Azure Pipelines"
    ],
    "screenshots": [
      {
        "path": "static/images/pipeline-triggerer-task-ui.png"
      },
      {
        "path": "static/images/pipeline-triggerer-service-endpoint.png"
      }
    ],
    "content": {
      "license": {
        "path": "license.md"
      },
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/joalmeid/pipeline-triggerer/wiki/Getting-Started"
      },
      "support": {
        "uri": "https://github.com/joalmeid/pipeline-triggerer/wiki"
      },
      "issues": {
        "uri": "https://github.com/joalmeid/pipeline-triggerer/issues"
      },
      "repository": {
        "uri": "https://github.com/joalmeid/pipeline-triggerer"
      },
      "learn": {
        "uri": "https://github.com/joalmeid/pipeline-triggerer/wiki"
      }
    },
    "branding": {
      "color": "rgb(255, 217, 0)",
      "theme": "light"
    },
    "contributions": [
      {
        "id": "pipeline-trigger-task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "type": "ms.vss-distributed-task.task",
        "properties": {
          "name": "pipeline-trigger-task"
        }
      },
      {
        "id": "pipeline-trigger-endpoint-type",
        "description": "Service Endpoint for a Azure DevOps API connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "AzuredevopsAPI",
          "displayName": "Azure DevOps API",
          "url": {
            "displayName": "i18n:Organization Url",
            "value": "https://dev.azure.com/[organization]",
            "isVisible": "true"
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$[*].Key"
            },
            {
              "name": "projects",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "buildDefinitions",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions",
              "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]"
            },
            {
              "name": "releaseDefinitions",
              "endpointUrl": "{{endpoint.releaseUrl}}/{{project}}/_apis/release/definitions",
              "resultSelector": "jsonpath:$.value[?(@.isDeleted==false)]"
            }
          ],
          "inputDescriptors": [
            {
              "id": "releaseUrl",
              "name": "i18n:Release API Url",
              "description": "The url of the release API",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              },
              "values": {
                "inputId": "releaseUrlInput",
                "defaultValue": "https://vsrm.dev.azure.com/[organization]"
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal access token.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "release-freezer",
    "publisher": "trfc",
    "name": "Release Freezer",
    "version": "0.0.3",
    "description": "Gate releases based off of dates (also referred to as 'code freezes')",
    "tags": [
      "Release",
      "Gate",
      "Calendar",
      "Code freeze"
    ],
    "icons": {
      "default": "media/calendargate-logo.png"
    },
    "public": false,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scopes": [],
    "categories": [
      "Azure Pipelines"
    ],
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "LICENSE"
      }
    },
    "screenshots": [
      {
        "path": "media/calendargate-logo.png"
      }
    ],
    "links": {
      "home": {
        "uri": "https://github.com/JoshuaTheMiller/ReleaseFreezer-Task"
      },
      "repository": {
        "uri": "https://github.com/JoshuaTheMiller/ReleaseFreezer-Task"
      },
      "issues": {
        "uri": "https://github.com/JoshuaTheMiller/ReleaseFreezer-Task/issues"
      }
    },
    "badges": [],
    "repository": {
      "type": "git",
      "uri": "https://github.com/JoshuaTheMiller/ReleaseFreezer-Task"
    },
    "files": [
      {
        "path": "Tasks/CalendarGate"
      }
    ],
    "contributions": [
      {
        "id": "trfc-date-gate",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/CalendarGate"
        }
      },
      {
        "id": "trfc-date-gate-endpoint-type",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "ReleaseFreezer",
          "displayName": "Release Freezer",
          "helpMarkDown": "Create a controlled connection to a Release Freezer instance.",
          "url": {
            "displayName": "Release Freezer URL",
            "description": "The Release Freezer instance Url, e.g. `https://instance.release-freezer.com`."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none"
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "kiuwan-analysis-extension-dev",
    "name": "Kiuwan Dev",
    "version": "2.3.102",
    "publisher": "kiuwan-publisher",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      },
      {
        "id": "Microsoft.TeamFoundation.Server",
        "version": "[14.2,)"
      }
    ],
    "public": false,
    "description": "Analyze your applications with Kiuwan in your build definitions. Find relevant security vulnerabilities in your code. Run automatic code security audits. Build secure applications from the start.",
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://www.kiuwan.com/docs/display/K5/Microsoft+TFS-Azure+DevOps+Extension"
      },
      "repository": {
        "uri": "https://github.com/kiuwan/tfs-vsts-extension"
      },
      "issues": {
        "uri": "https://github.com/kiuwan/tfs-vsts-extension/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/kiuwan/tfs-vsts-extension"
    },
    "branding": {
      "color": "#01a4a6",
      "theme": "dark"
    },
    "screenshots": [
      {
        "path": "screenshots/tfs-build-progress.png"
      }
    ],
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "images/kiuwan-extension.png"
    },
    "tags": [
      "SAST",
      "Code Analysis",
      "DevOps",
      "DevSecOps",
      "Applcation security",
      "Security vulnerabilities",
      "OWASP Top 10",
      "Build Task",
      "SCA"
    ],
    "scopes": [
      "vso.code",
      "vso.build",
      "vso.test"
    ],
    "files": [
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "css",
        "addressable": true
      },
      {
        "path": "screenshots"
      },
      {
        "path": "kiuwanTab.html",
        "addressable": true
      },
      {
        "path": "kiuwanSummary.html",
        "addressable": true
      },
      {
        "path": "kiuwanAuditTab.html",
        "addressable": true
      },
      {
        "path": "kiuwan-common"
      },
      {
        "path": "baseline-analysis-task"
      },
      {
        "path": "delivery-analysis-task"
      },
      {
        "path": "enhancer",
        "addressable": true,
        "packagePath": "scripts"
      },
      {
        "path": "node_modules/vss-web-extension-sdk/lib",
        "addressable": true,
        "packagePath": "lib"
      }
    ],
    "contributions": [
      {
        "id": "kiuwan-info-tab",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "A tab contributing to build results view with Kiuwan results info",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "Kiuwan",
          "uri": "kiuwanTab.html",
          "supportsTasks": [
            "f345ac07-f8a0-4859-bcaf-d71fd62bcf37"
          ]
        }
      },
      {
        "id": "build-kiuwan-summary-section",
        "type": "ms.vss-build-web.build-results-section",
        "description": "A section contributing to our own new tab and also to existing build 'summary' tab",
        "targets": [
          "ms.vss-build-web.build-results-summary-tab"
        ],
        "properties": {
          "name": "Kiuwan Summary",
          "uri": "kiuwanSummary.html",
          "supportsTasks": [
            "f345ac07-f8a0-4859-bcaf-d71fd62bcf37",
            "4e6e25e3-c0b5-4986-8714-5c751945c15f"
          ],
          "order": 20,
          "height": 300
        }
      },
      {
        "id": "build-kiuwan-audit-results-tab",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "A tab contributing to build results view and depends on Kiuwan delivery analysis task",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "Kiuwan Audit",
          "uri": "kiuwanAuditTab.html",
          "supportsTasks": [
            "4e6e25e3-c0b5-4986-8714-5c751945c15f"
          ]
        }
      },
      {
        "id": "kiuwan-bl-analysis-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "baseline-analysis-task"
        }
      },
      {
        "id": "kiuwan-cr-analysis-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "delivery-analysis-task"
        }
      },
      {
        "id": "kiuwan-service-endpoint",
        "description": "Kiuwan servide endpoint to connect to the Kiuwan platform",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "kiuwan",
          "displayName": "Kiuwan Platform",
          "url": {
            "displayName": "Kiuwan URL",
            "helpText": "For the cloud Kiuwan Service use: https://www.kiuwan.com This is the default.</br>For Kiuwan Enterprise on-premises use your Kiuwan server URL (i.e. http://kiuwan.mycompany.com).",
            "isVisible": true
          },
          "inputDescriptors": [
            {
              "id": "domainid",
              "name": "Kiuwan Domain ID",
              "description": "If your Kiuwan account is configured for SSO authentication, set here the Domain ID for your account. Contact your Kiuwan admin for details.<br />Leave empty otherwise.<br /><b>WARNING</b>: for TFS 2005 set this to 0 (the number zero) for non-SSO Kiuwan accounts. In this case the combo with possible applications in the tasks definitions will not work. This is a shortcoming of TFS 2005 only",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": false,
                "dataType": "string",
                "maxLength": 255
              }
            }
          ],
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "saas/rest/v1/info",
              "resultSelector": "jsonpath:$.username"
            },
            {
              "name": "ListApplications",
              "endpointUrl": "saas/rest/v1/apps/list",
              "resultSelector": "jsonpath:$[*].name"
            },
            {
              "name": "ListModels",
              "endpointUrl": "saas/rest/v1/qualitymodels",
              "resultSelector": "jsonpath:$[*].name"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "headers": [
                {
                  "name": "X-KW-CORPORATE-DOMAIN-ID",
                  "value": "{{endpoint.domainid}}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "This is your Kiuwan username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Yup! this is your Kiuwan password",
                  "inputMode": "passwordBox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkdown": "<a href=\"https://www.kiuwam.com\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "k8s-endpoint",
    "version": "0.1.17",
    "name": "Kubernetes extension",
    "description": "Kubernetes extension with k8s endpoint. Which enable kubectl command",
    "publisher": "TsuyoshiUshio",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for k8s connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "kubernetes",
          "displayName": "Kubernetes",
          "config": {
            "type": "string",
            "description": "Paste your config file of k8s master node's config file.",
            "required": true
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "kubeconfig",
                  "name": "Kubeconfig",
                  "description": "Copy your kubectl config",
                  "inputMode": "textArea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "build-task",
        "description": "Task executes kubectl for you.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTaskFolder"
        }
      }
    ],
    "files": [
      {
        "path": "BuildTaskFolder"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "maikvandergaag-trigger-pipeline",
    "name": "Trigger Azure DevOps Pipeline",
    "version": "1.0.0",
    "publisher": "maikvandergaag",
    "description": "Build and Release Management task to trigger a Azure DevOps release or build pipeline.",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/icon.png"
    },
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "Release",
      "Build",
      "Azure DevOps",
      "Trigger",
      "3fifty"
    ],
    "screenshots": [
      {
        "path": "images/screenshot-1.png"
      },
      {
        "path": "images/screenshot-2.png"
      }
    ],
    "content": {
      "license": {
        "path": "license.md"
      },
      "details": {
        "path": "readme.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/MaikvanderGaag/msft-extensions/wiki"
      },
      "repository": {
        "uri": "https://github.com/MaikvanderGaag/msft-extensions/"
      },
      "issues": {
        "uri": "https://github.com/MaikvanderGaag/msft-extensions/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/maikvandergaag/msft-extensions/tree/master/azuredevops/triggerpipeline"
    },
    "branding": {
      "color": "rgb(0, 171, 236)",
      "theme": "light"
    },
    "contributions": [
      {
        "id": "TriggerPipeline",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "TriggerPipeline"
        }
      },
      {
        "id": "azuredevops-endpoint-type",
        "description": "Service Endpoint for a Azure DevOps API connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "azuredevopsAPI",
          "displayName": "Azure DevOps API",
          "url": {
            "displayName": "Organization Url",
            "value": "https://dev.azure.com/[organization]"
          },
          "dataSources": [
            {
              "name": "projects",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "buildDefinitions",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions",
              "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]"
            },
            {
              "name": "releaseDefinitions",
              "endpointUrl": "{{endpoint.releaseUrl}}/{{project}}/_apis/release/definitions",
              "resultSelector": "jsonpath:$.value[?(@.isDeleted==false)]"
            }
          ],
          "inputDescriptors": [
            {
              "id": "releaseUrl",
              "name": "Release API Url",
              "description": "The url of the release API",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              },
              "values": {
                "inputId": "releaseUrlInput",
                "defaultValue": "https://vsrm.dev.azure.com/[organization]"
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal access token.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "files": [
      {
        "path": "triggerpipeline"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "swagger-documentation-deployment",
    "publisher": "MariusDrasutis",
    "version": "1.0.9",
    "name": "Swagger Documentation Deployment",
    "description": "Deploy Docker API updates from a document in your repository.",
    "public": false,
    "categories": [
      "Azure Repos"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service endpoint for interacting with the SwaggerHub Registry API.",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "swagger-hub",
          "displayName": "SwaggerHub",
          "url": {
            "displayName": "SwaggerHub API URL",
            "helpText": "URL for the SwaggerHub Registry API.",
            "defaultValue": "https://api.swaggerhub.com"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            }
          ],
          "helpMarkDown": "Get the API key for SwaggerHub <a href=\"https://app.swaggerhub.com/settings/apiKey\" target=\"_blank\"><b>here</b></a>."
        }
      },
      {
        "id": "build-task",
        "description": "SwaggerHub API interaction.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "build_tasks"
        }
      }
    ],
    "files": [
      {
        "path": "node_modules/vss-web-extension-sdk/lib",
        "addressable": true,
        "packagePath": "lib"
      },
      {
        "path": "build_tasks",
        "addressable": true
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "alm-octane-integration",
    "version": "0.1.4",
    "name": "ALM Octane Integration Extension",
    "description": "An Azure DevOps extension that supplies the required entities for establishing an integration with ALM Octane.",
    "publisher": "ALMOctane",
    "categories": [
      "Azure Pipelines"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service endpoint type for ALM Octane connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "OctaneServiceConnection",
          "displayName": "ALM Octane",
          "url": {
            "displayName": "Server Url",
            "helpText": "ALM Octane Workspace Url"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Client ID",
                  "description": "ALM Octane API client ID",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Client Secret",
                  "description": "ALM Octane API client secret",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "inputDescriptors": [
            {
              "id": "instance_id",
              "name": "Instance ID",
              "description": "Unique ID representing current Azure DevOps project in ALM Octane",
              "inputMode": "textbox",
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/MicroFocus/octane-azure-devops-extension/blob/master/readme.pdf\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "octane-start-task",
        "description": "ALM Octane Start Task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/StartTask"
        }
      },
      {
        "id": "octane-end-task",
        "description": "ALM Octane End Task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/EndTask"
        }
      },
      {
        "id": "octane-connection-verifier",
        "description": "ALM Octane Connection Verifier",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/ConnectionVerifier"
        }
      },
      {
        "id": "octane-pipeline-start-decorator",
        "type": "ms.azure-pipelines.pipeline-decorator",
        "targets": [
          "ms.azure-pipelines-agent-job.pre-job-tasks"
        ],
        "properties": {
          "template": "Decorators/octane-pipeline-start-decorator.yml"
        }
      },
      {
        "id": "octane-pipeline-end-decorator",
        "type": "ms.azure-pipelines.pipeline-decorator",
        "targets": [
          "ms.azure-pipelines-agent-job.post-job-tasks"
        ],
        "properties": {
          "template": "Decorators/octane-pipeline-end-decorator.yml"
        }
      }
    ],
    "files": [
      {
        "path": "Tasks"
      },
      {
        "path": "Decorators/octane-pipeline-start-decorator.yml",
        "addressable": true,
        "contentType": "text/plain"
      },
      {
        "path": "Decorators/octane-pipeline-end-decorator.yml",
        "addressable": true,
        "contentType": "text/plain"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "vsts-developer-tools-build-tasks",
    "publisher": "ms-devlabs",
    "name": "Azure DevOps Extension Tasks",
    "version": "1.2.0",
    "description": "Azure Pipelines tasks for packaging and publishing Azure Devops and Visual Studio (coming soon) extensions to the Visual Studio Marketplace.",
    "tags": [
      "Extension",
      "Marketplace",
      "Publish",
      "Package",
      "Install",
      "Continuous Integration",
      "Continuous Delivery",
      "Build",
      "Release",
      "Azure Pipelines",
      "Azure DevOps Extensions",
      "Visual Studio Extensions"
    ],
    "icons": {
      "default": "tools-icon.png"
    },
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scopes": [],
    "categories": [
      "Azure Pipelines"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "links": {
      "repository": {
        "uri": "https://github.com/Microsoft/azure-devops-extension-tasks"
      },
      "issues": {
        "uri": "https://github.com/Microsoft/azure-devops-extension-tasks/issues"
      },
      "support": {
        "uri": "mailto:azdevopsintegrations@microsoft.com"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Microsoft/azure-devops-extension-tasks"
    },
    "badges": [
      {
        "href": "https://almrangers.visualstudio.com/ALM/_build?definitionId=127",
        "uri": "https://almrangers.visualstudio.com/ALM/_apis/build/status/Extensions/Azure%20DevOps%20Extension%20Tasks",
        "description": "Build"
      },
      {
        "href": "https://almrangers.visualstudio.com/ALM/_releaseDefinition?definitionId=25",
        "uri": "https://almrangers.vsrm.visualstudio.com/_apis/public/Release/badge/7f3cfb9a-d1cb-4e66-9d36-1af87b906fe9/25/70",
        "description": "Release"
      }
    ],
    "files": [
      {
        "path": "BuildTasks/ExtensionVersion"
      },
      {
        "path": "BuildTasks/InstallExtension"
      },
      {
        "path": "BuildTasks/IsValidExtension"
      },
      {
        "path": "BuildTasks/IsValidExtensionAgent"
      },
      {
        "path": "BuildTasks/PackageExtension"
      },
      {
        "path": "BuildTasks/PublishExtension"
      },
      {
        "path": "BuildTasks/PublishVSExtension"
      },
      {
        "path": "BuildTasks/ShareExtension"
      },
      {
        "path": "BuildTasks/TfxInstaller"
      },
      {
        "path": "add-task.png",
        "addressable": true
      },
      {
        "path": "permissions.png",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "package-extension-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/PackageExtension"
        }
      },
      {
        "id": "publish-extension-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/PublishExtension"
        }
      },
      {
        "id": "publish-vs-extension-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/PublishVSExtension"
        }
      },
      {
        "id": "install-extension-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/InstallExtension"
        }
      },
      {
        "id": "is-valid-extension-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/IsValidExtension"
        }
      },
      {
        "id": "is-valid-extension-agent-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/IsValidExtensionAgent"
        }
      },
      {
        "id": "extension-version-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/ExtensionVersion"
        }
      },
      {
        "id": "share-extension-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/ShareExtension"
        }
      },
      {
        "id": "tfx-installer-build-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/TfxInstaller"
        }
      },
      {
        "id": "vsts-marketplace-endpoint-type",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "VstsMarketplacePublishing",
          "displayName": "Visual Studio Marketplace",
          "url": {
            "displayName": "Marketplace URL",
            "value": "https://marketplace.visualstudio.com"
          },
          "helpMarkDown": "Required permissions: <ul><li><b>Publish</b>: All accessible organisations, Marketplace (Publish)</li><li><b>Share</b>: All accessible organisations, Marketplace Publish</li><li><b>Install</b>: All accessible organisations or a specific organisation, Extensions (read and manage), Marketplace (acquire)</li><li><b>Query Version</b>: All accessible organisations, Marketplace (read)</li><li><b>Is Valid Extension</b>: All accessible organisations, Marketplace (read)</li></ul><br/><a href='https://www.visualstudio.com/docs/setup-admin/team-services/use-personal-access-tokens-to-authenticate'>More information</a>.",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string",
                    "maxLength": 300
                  },
                  "values": {
                    "inputId": "username",
                    "isDisabled": true,
                    "defaultValue": ""
                  }
                },
                {
                  "id": "password",
                  "name": "Personal access token",
                  "description": "Azure DevOps personal access token. Requires at least the Marketplace (publish) scope.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "tfs-marketplace-endpoint-type",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "TFSMarketplacePublishing",
          "displayName": "Azure DevOps Server Extension Local Gallery",
          "helpMarkDown": "",
          "url": {
            "displayName": "Azure DevOps Server Url",
            "description": "The Azure DevOps Server Url, e.g. `https://servername.domain.local/tfs`."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal Access Token (TFS 2017+ and Azure DevOps Server 2019).",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username (TFS 2015.2+ with Basic Authentication enabled)",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "vss-services-servicenowchangerequestmanagement",
    "name": "ServiceNow Change Management",
    "publisher": "ms-vscs-rm",
    "version": "4.162.1",
    "public": true,
    "description": "Integrate ServiceNow Change Management with Azure Pipelines",
    "categories": [
      "Azure Pipelines"
    ],
    "Tags": [
      "ServiceNow",
      "Change Management",
      "Release",
      "Release Gates",
      "DevOps",
      "Pipelines"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      },
      {
        "id": "Microsoft.TeamFoundation.Server"
      }
    ],
    "demands": [],
    "icons": {
      "default": "images/servicenow.png"
    },
    "screenshots": [
      {
        "path": "images/change_request_screenshot.png"
      },
      {
        "path": "images/gate_screenshot.png"
      }
    ],
    "files": [
      {
        "path": "images/servicenow.png",
        "addressable": true
      },
      {
        "path": "images/agentless_task.png",
        "addressable": true
      },
      {
        "path": "images/release_definition.png",
        "addressable": true
      },
      {
        "path": "images/release_gate.png",
        "addressable": true
      },
      {
        "path": "images/servicenow_connection.png",
        "addressable": true
      },
      {
        "path": "images/1_edit-import-set-table.png",
        "addressable": true
      },
      {
        "path": "images/2_select-transform-map.png",
        "addressable": true
      },
      {
        "path": "images/3_add-field-map.png",
        "addressable": true
      },
      {
        "path": "images/4_update-transform-map.png",
        "addressable": true
      },
      {
        "path": "images/5_field-map-added.png",
        "addressable": true
      },
      {
        "path": "images/add-oauth-configuration.png",
        "addressable": true
      },
      {
        "path": "images/add-oauth-configuration-organization.png",
        "addressable": true
      },
      {
        "path": "images/oauth_servicenow_connection.png",
        "addressable": true
      },
      {
        "path": "Tasks/CreateAndQueryChangeRequest"
      },
      {
        "path": "Tasks/UpdateChangeRequest"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      }
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "ServiceNow",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "ServiceNow",
          "displayName": "ServiceNow",
          "url": {
            "displayName": "ServiceNow Url",
            "helpText": "Url of the ServiceNow instance to connect to."
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/x_mioms_azpipeline/app_version?app_major_version=4",
              "resultSelector": "jsonpath:$.result"
            },
            {
              "name": "StandardChangeTemplate",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_template?sysparm_query=table=change_request^active=true&sysparm_fields=sys_id,sys_name",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "Priority",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=priority^name={{table}}^language=en&sysparm_fields=label,value",
              "resultSelector": "jsonpath:$.result[*]",
              "callbackContextTemplate": "{\"table\": \"task\"}",
              "callbackRequiredTemplate": "{{#equals table \"change_request\"}}{{isEqualNumber result.count 0}}{{else}}false{{/equals}}",
              "initialContextTemplate": "{\"table\": \"change_request\"}"
            },
            {
              "name": "State",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=state^name={{table}}^language=en&sysparm_fields=label,value",
              "resultSelector": "jsonpath:$.result[*]",
              "callbackContextTemplate": "{\"table\": \"task\"}",
              "callbackRequiredTemplate": "{{#equals table \"change_request\"}}{{isEqualNumber result.count 0}}{{else}}false{{/equals}}",
              "initialContextTemplate": "{\"table\": \"change_request\"}"
            },
            {
              "name": "Risk",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=Risk^name=change_request^language=en^ORDERBYDESCvalue&sysparm_fields=label,value",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "Impact",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=Impact^name={{table}}^language=en^ORDERBYDESCvalue&sysparm_fields=label,value",
              "resultSelector": "jsonpath:$.result[*]",
              "callbackContextTemplate": "{\"table\": \"task\"}",
              "callbackRequiredTemplate": "{{#equals table \"change_request\"}}{{isEqualNumber result.count 0}}{{else}}false{{/equals}}",
              "initialContextTemplate": "{\"table\": \"change_request\"}"
            },
            {
              "name": "Category",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=name=change_request^element=category^inactive!=true^language=en&sysparm_fields=label,value",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "Close code",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=name=change_request^element=Close_Code^language=en^ORDERBYDESCvalue&sysparm_fields=label,value",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "PriorityLabel",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=priority^name={{table}}&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label",
              "callbackContextTemplate": "{\"table\": \"task\"}",
              "callbackRequiredTemplate": "{{#equals table \"change_request\"}}{{isEqualNumber result.count 0}}{{else}}false{{/equals}}",
              "initialContextTemplate": "{\"table\": \"change_request\"}"
            },
            {
              "name": "StateLabel",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=state^name={{table}}&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label",
              "callbackContextTemplate": "{\"table\": \"task\"}",
              "callbackRequiredTemplate": "{{#equals table \"change_request\"}}{{isEqualNumber result.count 0}}{{else}}false{{/equals}}",
              "initialContextTemplate": "{\"table\": \"change_request\"}"
            },
            {
              "name": "RiskLabel",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=Risk^name=change_request^ORDERBYDESCvalue&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "ImpactLabel",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=Impact^name={{table}}^ORDERBYDESCvalue&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label",
              "callbackContextTemplate": "{\"table\": \"task\"}",
              "callbackRequiredTemplate": "{{#equals table \"change_request\"}}{{isEqualNumber result.count 0}}{{else}}false{{/equals}}",
              "initialContextTemplate": "{\"table\": \"change_request\"}"
            },
            {
              "name": "CategoryLabel",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=name=change_request^element=category^inactive!=true&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "CloseCodeLabel",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=name=change_request^element=Close_Code^ORDERBYDESCvalue&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "Configuration Item",
              "endpointUrl": "{{endpoint.url}}/api/now/table/cmdb_ci?sysparm_fields=name&sysparm_limit=5000&sysparm_offset={{skip}}",
              "resultSelector": "jsonpath:$.result[*].name",
              "callbackContextTemplate": "{\"skip\": \"{{add skip 5000}}\"}",
              "callbackRequiredTemplate": "{{isEqualNumber result.count 5000}}",
              "initialContextTemplate": "{\"skip\": \"0\"}"
            },
            {
              "name": "Assignment Group",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_user_group?sysparm_element=assignment_group&sysparm_fields=name&sysparm_limit=1000&sysparm_offset={{skip}}",
              "resultSelector": "jsonpath:$.result[*].name",
              "callbackContextTemplate": "{\"skip\": \"{{add skip 1000}}\"}",
              "callbackRequiredTemplate": "{{isEqualNumber result.count 1000}}",
              "initialContextTemplate": "{\"skip\": \"0\"}"
            },
            {
              "name": "AccessToken",
              "endpointUrl": "{{{configuration.Url}}}/oauth_token.do",
              "requestVerb": "Post",
              "requestContent": "grant_type=authorization_code&code={{{#uriDataEncode 1 AuthorizationCode}}}{{{/uridataencode}}}&client_id={{{#uriDataEncode 1 configuration.ClientId}}}{{{/uridataencode}}}&client_secret={{{#uriDataEncode 1 configuration.ClientSecret}}}{{{/uridataencode}}}&redirect_uri={{{#uriDataEncode 1 RedirectUrl}}}{{{/uridataencode}}}",
              "resultSelector": "jsonpath:$",
              "headers": [
                {
                  "name": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                }
              ]
            },
            {
              "name": "RefreshToken",
              "endpointUrl": "{{{configuration.Url}}}/oauth_token.do",
              "requestVerb": "Post",
              "requestContent": "grant_type=refresh_token&refresh_token={{{#uriDataEncode 1 RefreshToken}}}{{{/uridataencode}}}&client_id={{{#uriDataEncode 1 configuration.ClientId}}}{{{/uridataencode}}}&client_secret={{{#uriDataEncode 1 configuration.ClientSecret}}}{{{/uridataencode}}}",
              "resultSelector": "jsonpath:$",
              "headers": [
                {
                  "name": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                }
              ]
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "displayName": "i18n:OAuth2",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-oauth2",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Bearer {{{endpoint.AccessToken}}}"
                }
              ],
              "authorizationUrl": "{{{configuration.Url}}}/oauth_auth.do?client_id={{{configuration.ClientId}}}&response_type=code&redirect_uri={{{RedirectUrl}}}",
              "dataSourceBindings": [
                {
                  "target": "AccessToken",
                  "dataSourceName": "AccessToken",
                  "resultTemplate": "{\"AccessToken\" : \"{{{access_token}}}\", \"RefreshToken\" : \"{{{refresh_token}}}\", \"ExpiresIn\" : \"{{{expires_in}}}\", \"TokenType\" : \"{{{token_type}}}\", \"Scope\" : \"{{{scope}}}\", \"Error\" : \"{{{error}}}\", \"ErrorDescription\" : \"{{{error_description}}}\"}"
                },
                {
                  "target": "RefreshToken",
                  "dataSourceName": "RefreshToken",
                  "resultTemplate": "{\"AccessToken\" : \"{{{access_token}}}\", \"RefreshToken\" : \"{{{refresh_token}}}\", \"ExpiresIn\" : \"{{{expires_in}}}\", \"TokenType\" : \"{{{token_type}}}\", \"Scope\" : \"{{{scope}}}\", \"Error\" : \"{{{error}}}\", \"ErrorDescription\" : \"{{{error_description}}}\"}"
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://docs.microsoft.com/en-us/azure/devops/pipelines/release/approvals/servicenow?view=azure-devops\" target=\"_blank\"><b>Learn More about ServiceNow integration</b></a>"
        }
      },
      {
        "id": "serviceNowchangerequests-update-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/UpdateChangeRequest"
        }
      },
      {
        "id": "serviceNowchangerequests-query-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/CreateAndQueryChangeRequest"
        }
      }
    ]
  },
  {
    "manifestVersion": 1.0,
    "id": "vss-services-servicenowchangerequest",
    "name": "ServiceNow change request management",
    "publisher": "ms-vscs-rm",
    "version": "0.0.1",
    "public": false,
    "description": "Manage ServiceNow change requests.",
    "categories": [
      "Build and release"
    ],
    "Tags": [
      "ServiceNow",
      "Release",
      "ReleaseGates",
      "DevOps"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "demands": [],
    "icons": {
      "default": "images/servicenow.png"
    },
    "files": [
      {
        "path": "images/servicenow.png",
        "addressable": true
      },
      {
        "path": "Tasks/QueryForStatusCreateIfNotExists"
      },
      {
        "path": "Tasks/UpdateChangeRequest"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      }
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "ServiceNow connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "ServiceNow",
          "displayName": "ServiceNow connection",
          "url": {
            "displayName": "ServiceNow Url",
            "helpText": "Url of the ServiceNow instance to connect to."
          },
          "dataSources": [
            {
              "name": "Priority",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=priority^name=change_request&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "State",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=state^name=change_request&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "Risk",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=name=change_request^element=Risk^ORDERBYDESCvalue&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "Impact",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=element=Impact^ORDERBYDESCvalue&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "Category",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_choice?sysparm_query=name=change_request^element=category^inactive!=true&sysparm_fields=label",
              "resultSelector": "jsonpath:$.result[*].label"
            },
            {
              "name": "Configuration Item",
              "endpointUrl": "{{endpoint.url}}/api/now/table/cmdb_ci?sysparm_fields=name&sysparm_limit=5000&sysparm_offset={{skip}}",
              "resultSelector": "jsonpath:$.result[*].name",
              "callbackContextTemplate": "{\"skip\": \"{{add skip 5000}}\"}",
              "callbackRequiredTemplate": "{{isEqualNumber result.count 5000}}",
              "initialContextTemplate": "{\"skip\": \"0\"}"
            },
            {
              "name": "Assignment Group",
              "endpointUrl": "{{endpoint.url}}/api/now/table/sys_user_group?sysparm_element=assignment_group&sysparm_fields=name&sysparm_limit=1000&sysparm_offset={{skip}}",
              "resultSelector": "jsonpath:$.result[*].name",
              "callbackContextTemplate": "{\"skip\": \"{{add skip 1000}}\"}",
              "callbackRequiredTemplate": "{{isEqualNumber result.count 1000}}",
              "initialContextTemplate": "{\"skip\": \"0\"}"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "serviceNowchangerequests-task1",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/QueryForStatusCreateIfNotExists"
        }
      },
      {
        "id": "serviceNowchangerequests-task2",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/UpdateChangeRequest"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "PowerBIImportGroup",
    "name": "PowerBI Import to Group",
    "version": "0.1.1",
    "publisher": "davelusty",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Import a file to PowerBI through the API to a group",
    "categories": [
      "Build and release"
    ],
    "branding": {
      "color": "rgb(135,135,135)",
      "theme": "dark"
    },
    "icons": {
      "default": "powerbi.png"
    },
    "files": [
      {
        "path": "PowerBIImportGroups"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Fabrikam connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "fabrikam",
          "displayName": "Power BI API",
          "url": {
            "displayName": "Power BI API Url",
            "helpText": "Url for the Power BI API. https://api.powerbi.com/v1.0/"
          },
          "dataSources": [
            {
              "name": "Power BI API",
              "endpointUrl": "{{endpoint.url}}api/projects/index",
              "resultSelector": "jsonpath:$[*].nm"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username to use for connection to the Power BI API",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password of the user connecting to the Power BI API",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "clientid",
                  "name": "ClientID",
                  "description": "ClientID",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "PowerBI Import Groups",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "PowerBIImportGroups"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "docker",
    "name": "Docker Integration",
    "version": "0.4.0",
    "publisher": "ms-vscs-rm",
    "description": "Build, push, run or deploy Docker images and multi-container Docker applications.",
    "galleryFlags": [
      "Public"
    ],
    "icons": {
      "default": "images/docker_logo.png",
      "large": "images/docker_logo_large.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [
      "docker",
      "docker-compose"
    ],
    "links": {
      "home": {
        "uri": "http://aka.ms/dockertoolsforvsts"
      }
    },
    "branding": {
      "color": "#f6f7fb",
      "theme": "light"
    },
    "content": {
      "details": {
        "path": "docker.md"
      }
    },
    "files": [
      {
        "path": "tasks/docker"
      },
      {
        "path": "tasks/dockerCompose"
      },
      {
        "path": "tasks/dockerDeploy"
      },
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "ThirdPartyNotices.txt"
      },
      {
        "path": "DockerIntegration_ExtensionForVisualStudioTeamServices_Pre-ReleaseEULA.docx"
      }
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "dockerregistry-endpoint-type",
        "description": "Service Endpoint type for a Docker Registry",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "dockerregistry",
          "displayName": "Docker Registry",
          "url": "http://hub.docker.com",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "registry",
                  "name": "Docker Registry",
                  "description": "The URL for your Docker Registry",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  },
                  "values": {
                    "inputId": "registryInput",
                    "defaultValue": "https://index.docker.io/v1/"
                  }
                },
                {
                  "id": "username",
                  "name": "Docker ID",
                  "description": "The username for your Docker Registry",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "The password for your Docker Registry",
                  "inputMode": "passwordBox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "email",
                  "name": "Email",
                  "description": "The email address for your Docker Registry",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "dockerhost-endpoint-type",
        "description": "Service Endpoint type for a Docker Host",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "dockerhost",
          "displayName": "Docker Host",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-cert",
              "inputDescriptors": [
                {
                  "id": "cacert",
                  "name": "CA Certificate",
                  "description": "Contents of ca.pem",
                  "inputMode": "textarea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "cert",
                  "name": "Certificate",
                  "description": "Contents of cert.pem",
                  "inputMode": "textarea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "key",
                  "name": "Key",
                  "description": "Contents of key.pem",
                  "inputMode": "textarea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "certificate",
                  "name": "Certificate",
                  "description": "Content of the certificate",
                  "inputMode": "TextArea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  },
                  "values": {
                    "inputId": "certificateInput",
                    "defaultValue": "",
                    "isDisabled": true
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Refer <a href=\"http://aka.ms/ms-vscs-rm-secure-docker-daemon\" target=\"_blank\">link</a> to learn more"
        }
      },
      {
        "id": "docker-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/docker"
        }
      },
      {
        "id": "docker-compose-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/dockerCompose"
        }
      },
      {
        "id": "docker-deploy-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/dockerDeploy"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "vmwareapp",
    "name": "VMware Resource Deployment",
    "version": "1.0.1",
    "publisher": "ms-vscs-rm",
    "description": "Connect to a VMware vCenter Server, and easily provision VMs, and perform actions on them like snapshot, revert snapshot, start, stop etc.",
    "public": true,
    "icons": {
      "default": "images/Vmware_logo.png",
      "large": "images/VMware-logo-large.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [],
    "links": {
      "support": {
        "uri": "http://aka.ms/vmwaresupport"
      },
      "pricing": {
        "uri": "http://aka.ms/vstspricing"
      },
      "home": {
        "uri": "http://aka.ms/vmwarehelp"
      }
    },
    "branding": {
      "color": "#f6f7fb",
      "theme": "light"
    },
    "content": {
      "details": {
        "path": "VMWare.md"
      }
    },
    "files": [
      {
        "path": "Tasks/vmOperations"
      },
      {
        "path": "images",
        "addressable": true
      }
    ],
    "scopes": [
      "vso.build_execute",
      "vso.serviceendpoint_manage"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "vmware-endpoint-type",
        "description": "VMwareConnectionServiceEndpoint",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "vmware",
          "displayName": "VMware vCenter Server",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic"
            }
          ],
          "helpMarkDown": "<a href=\"http://aka.ms/vmwareconnection\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "vmwareresourcedeployment-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/vmOperations"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "windows-store-publish",
    "version": "0.9.27",
    "name": "Windows Store",
    "publisher": "ms-rdx-mro",
    "description": "Publish your applications on the Windows Store.",
    "categories": [
      "Build and release"
    ],
    "galleryFlags": [],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scopes": [
      "vso.build_execute"
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "content": {
      "details": {
        "path": "README.md"
      },
      "thirdpartynotice": {
        "path": "ThirdPartyNotices.txt"
      }
    },
    "files": [
      {
        "path": "store-publish"
      },
      {
        "path": "store-flight"
      },
      {
        "path": "docs",
        "addressable": true
      },
      {
        "path": "images/logo.png",
        "addressable": true
      }
    ],
    "tags": [
      "Windows Store",
      "Windows Dev Center",
      "Publish",
      "Deploy"
    ],
    "links": {
      "learn": {
        "uri": "https://github.com/Microsoft/windows-dev-center-vsts-extension"
      },
      "license": {
        "uri": "https://github.com/Microsoft/windows-dev-center-vsts-extension/blob/master/LICENSE"
      },
      "support": {
        "uri": "https://github.com/Microsoft/windows-dev-center-vsts-extension/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Microsoft/windows-dev-center-vsts-extension"
    },
    "contributions": [
      {
        "id": "devCenterApiEndpoint",
        "description": "DevCenterEndpoint",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "devCenter",
          "displayName": "Windows Dev Center",
          "url": "https://manage.devcenter.microsoft.com",
          "inputDescriptors": [],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-service-principal",
              "inputDescriptors": [
                {
                  "id": "url",
                  "name": "Windows Store API URL",
                  "description": "Server URL",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  },
                  "values": {
                    "inputId": "url",
                    "isDisabled": false,
                    "defaultValue": "https://manage.devcenter.microsoft.com"
                  }
                },
                {
                  "id": "tenantId",
                  "name": "Azure tenant ID",
                  "description": "ID of the Azure tenant",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "servicePrincipalId",
                  "name": "Client ID",
                  "description": "ID of the client",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "servicePrincipalKey",
                  "name": "Client secret",
                  "description": "Secret of the client",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "publish-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "store-publish"
        }
      },
      {
        "id": "flight-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "store-flight"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "jessehouwing-vsts-extension-tasks-TEST",
    "name": "VSTS Extension Tasks",
    "version": "0.0.0",
    "publisher": "jessehouwing",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "scope": [
      "vso.build",
      "vso.serviceendpoint"
    ],
    "description": "Build and Release Management extensions that enable you to package, publish and share VSTS Extensions to the marketplace.",
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Extension",
      "Marketplace",
      "Publish",
      "Package"
    ],
    "screenshots": [
      {
        "path": "extension/Images/Screenshots/packageandpublish.png"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/jessehouwing/vsts-extension-tasks/wiki"
      },
      "support": {
        "uri": "https://github.com/jessehouwing/vsts-extension-tasks/issues"
      }
    },
    "branding": {
      "color": "rgb(36, 43, 50)",
      "theme": "dark"
    },
    "icons": {
      "default": "extension/images/extension-icon.png"
    },
    "files": [
      {
        "path": "vsts-extension-packageandpublish/vsts-extension-packageandpublish.ps1"
      },
      {
        "path": "vsts-extension-packageandpublish/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-packageandpublish/task.json"
      },
      {
        "path": "vsts-extension-packageandpublish/icon.png"
      },
      {
        "path": "vsts-extension-share/vsts-extension-share.ps1"
      },
      {
        "path": "vsts-extension-share/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-share/task.json"
      },
      {
        "path": "vsts-extension-share/icon.png"
      },
      {
        "path": "vsts-extension-publish/vsts-extension-publish.ps1"
      },
      {
        "path": "vsts-extension-publish/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-publish/task.json"
      },
      {
        "path": "vsts-extension-publish/icon.png"
      },
      {
        "path": "vsts-extension-version/vsts-extension-version.ps1"
      },
      {
        "path": "vsts-extension-version/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-version/task.json"
      },
      {
        "path": "vsts-extension-version/icon.png"
      },
      {
        "path": "vsts-extension-install/vsts-extension-install.ps1"
      },
      {
        "path": "vsts-extension-install/vsts-extension-shared.psm1",
        "contentType": "text/plain"
      },
      {
        "path": "vsts-extension-install/task.json"
      },
      {
        "path": "vsts-extension-install/icon.png"
      }
    ],
    "contributions": [
      {
        "id": "vsts-extension-packageandpublish",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-packageandpublish"
        }
      },
      {
        "id": "vsts-extension-share",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-share"
        }
      },
      {
        "id": "vsts-extension-publish",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-publish"
        }
      },
      {
        "id": "vsts-extension-version",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-version"
        }
      },
      {
        "id": "vsts-extension-install",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "vsts-extension-install"
        }
      },
      {
        "id": "nexus-service-endpoint",
        "description": "SonaType Nexus",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "nexus-auth-key",
          "displayName": "SonaType Nexus",
          "url": "",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic"
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "processtemplate",
    "name": "Process Tools for Azure DevOps ",
    "version": "#{GitVersion.Major}#.#{GitVersion.Minor}#.#{GitVersion.Patch}##{GitVersion.COMMITSSINCEVERSIONSOURCE}#",
    "public": false,
    "publisher": "nkdAgility",
    "galleryFlags": [
      "Public",
      "Free"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "description": "Incudes tasks to help you manage your Processes (was Process Templates) in Azure DevOps Services. Supports both XML Process and the new Inherited Process.",
    "categories": [
      "Build and release"
    ],
    "tags": [
      "release",
      "build",
      "process",
      "process template",
      "xml process",
      "template",
      "upload",
      "import",
      "export",
      "migrate"
    ],
    "links": {
      "home": {
        "uri": "https://dev.azure.com/nkdagility/Azure-DevOps-Process-Tools/"
      },
      "getstarted": {
        "uri": "https://dev.azure.com/nkdagility/Azure-DevOps-Process-Tools/_wiki/wikis/process-tools"
      },
      "learn": {
        "uri": "https://dev.azure.com/nkdagility/Azure-DevOps-Process-Tools/_wiki/wikis/process-tools"
      },
      "support": {
        "uri": "https://github.com/nkdAgility/Azure-DevOps-Process-Tools/issues"
      },
      "repository": {
        "uri": "https://github.com/nkdAgility/Azure-DevOps-Process-Tools"
      },
      "issues": {
        "uri": "https://github.com/nkdAgility/Azure-DevOps-Process-Tools/issues"
      }
    },
    "CustomerQnASupport": {
      "enableqna": "true",
      "url": "https://github.com/nkdAgility/Azure-DevOps-Process-Tools/issues"
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/nkdAgility/Azure-DevOps-Process-Tools.git"
    },
    "icons": {
      "default": "images/extension-icon.png"
    },
    "branding": {
      "color": "#1C3272",
      "theme": "dark"
    },
    "screenshots": [
      {
        "path": "images/screenshot-01.png"
      },
      {
        "path": "images/screenshot-02.png"
      },
      {
        "path": "images/screenshot-03.png"
      }
    ],
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "LICENSE.txt"
      }
    },
    "files": [
      {
        "path": "processtemplatetask"
      },
      {
        "path": "inheritedprocessmigration"
      }
    ],
    "contributions": [
      {
        "id": "processtemplate-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "processtemplatetask"
        }
      },
      {
        "id": "inheritedprocessmigration-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "inheritedprocessmigration"
        }
      },
      {
        "id": "vstsProcess-endpoint",
        "description": "Azure DevOps Service for Process Tools",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "url": "https://dev.azure.com/myaccount",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "VstsXmlProcessEndpoint",
          "displayName": "Azure DevOps Service Organisation (was Account)",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token"
            }
          ],
          "helpMarkDown": "<a href=\"https://dev.azure.com/nkdagility/Azure-DevOps-Process-Tools/_wiki/wikis/process-tools/\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "portainer-deploy",
    "version": "0.1.6",
    "name": "Portainer.io deploy",
    "description": "Deploy resources to Portainer.io",
    "publisher": "OlliJanatuinen",
    "categories": [
      "Build and release"
    ],
    "galleryFlags": [
      "Public"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/portainer-icon.png"
    },
    "content": {
      "details": {
        "path": "docs/overview.md"
      }
    },
    "contributions": [
      {
        "id": "portainer-endpoint-type",
        "description": "Portainer.io",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "portainer",
          "displayName": "Portainer.io",
          "url": "https://portainer.example.com",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "endpointId",
                  "name": "Endpoint ID",
                  "description": "Endpoint ID on Portainer.io",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "helpText": "Endpoint ID on Portainer (must be number)",
                  "validation": {
                    "isRequired": true,
                    "dataType": "number"
                  }
                },
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "portainer-deploy",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "task"
        }
      }
    ],
    "files": [
      {
        "path": "task"
      },
      {
        "path": "images",
        "addressable": true
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "gitlab-integration",
    "name": "GitLab Integration for Azure Pipelines",
    "publisher": "onlyutkarsh",
    "version": "0.0.168",
    "public": false,
    "description": "Download sources from GitLab repository in your build pipeline or consume them as an artifact in to your release pipeline during deployment.",
    "categories": [
      "Azure Pipelines"
    ],
    "Tags": [
      "GitLab",
      "Azure DevOps",
      "Azure Pipelines",
      "Release",
      "DevOps",
      "Artifacts",
      "Git",
      "Build"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/onlyutkarsh/gitlab-integration"
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [
      "contribution/ms.vss-releaseartifact.artifact-types"
    ],
    "icons": {
      "default": "images/gitlab128.png",
      "large": "images/gitlab512.png"
    },
    "branding": {
      "color": "#3B3E43",
      "theme": "dark"
    },
    "content": {
      "details": {
        "path": "readme.md"
      }
    },
    "files": [
      {
        "path": "tasks"
      },
      {
        "path": "images",
        "addressable": "true"
      }
    ],
    "contributions": [
      {
        "id": "gitlab-downloadrepo-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/DownloadRepo"
        }
      },
      {
        "id": "gitlab-endpoint-type",
        "description": "Service connection type for all GitLab connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "gitlab",
          "icon": "images/gitlab16.png",
          "displayName": "GitLab",
          "url": {
            "displayName": "Server URL",
            "value": "https://gitlab.com",
            "helpText": "Client service connection for GitLab. You don't need to change this unless you are using self hosted GitLab instance, in which case you may need to point to your instance URL. ",
            "isVisible": true
          },
          "inputDescriptors": [
            {
              "id": "username",
              "name": "Username",
              "description": "Username you use to login to GitLab. This is required only to validate your PAT token using 'Verify connection' link below.",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            }
          ],
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{{endpoint.url}}}api/v4/users?username={{{endpoint.username}}}",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Repositories",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects?membership=true",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Branches",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{{definition}}}/repository/branches",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "CommitsFromSelectedBranch",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{{definition}}}/repository/commits{{#if branch}}?ref_name={{{branch}}}",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "LatestCommit",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{{definition}}}/repository/commits",
              "resultSelector": "jsonpath:$[0]"
            },
            {
              "name": "Artifacts",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{definition}}/repository/tree?path={{itemPath}}&ref={{branch}}",
              "resultSelector": "jsonpath:$[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "API Token",
                  "description": "GitLab API Token",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  },
                  "helpMarkDown": "<a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" target=\"_blank\"><b>Creating a personal access token</b></a>"
                }
              ],
              "headers": [
                {
                  "name": "Private-Token",
                  "value": "{{ endpoint.apitoken }}"
                }
              ]
            }
          ],
          "helpMarkDown": "Learn more about <a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" target=\"_blank\"><b>Creating GitLab tokens</b></a> and <a href=\"https://docs.microsoft.com/en-us/vsts/pipelines/library/service-endpoints?view=vsts\" target=\"_blank\"><b>Service connections</b></a> "
        }
      },
      {
        "id": "gitlab-release-artifact-type",
        "description": "GitLab Artifact",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "Gitlab",
          "displayName": "GitLab",
          "endpointTypeId": "gitlab:Token",
          "uniqueSourceIdentifier": "{{connection}}:{{definition}}:{{branch}}",
          "downloadTaskId": "e6590a51-c3b6-4b88-99e4-b3498ed7cd5b",
          "artifactType": "SourceControl",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Source (repository)",
              "description": "Repository to pull",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "defaultVersionType",
              "name": "i18n:Default version",
              "description": "i18n:The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
              "inputMode": "combo",
              "isConfidential": false,
              "hasDynamicValueInformation": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              },
              "values": {
                "inputId": "defaultVersionTypeValues",
                "defaultValue": "latestType",
                "isLimitedToPossibleValues": true,
                "possibleValues": [
                  {
                    "value": "latestType",
                    "displayValue": "i18n:Latest from default branch"
                  },
                  {
                    "value": "latestFromBranchType",
                    "displayValue": "i18n:Latest from specific branch"
                  },
                  {
                    "value": "selectDuringReleaseCreationType",
                    "displayValue": "i18n:Specify at the time of release creation"
                  }
                ]
              }
            },
            {
              "id": "branch",
              "name": "i18n: Branch",
              "description": "i18n: Artifacts from selected branch will be included in release.",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              },
              "dependencyInputIds": [
                "connection",
                "definition",
                "defaultVersionType"
              ],
              "properties": {
                "visibleRule": "defaultVersionType == latestFromBranchType"
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "definition",
              "dataSourceName": "Repositories",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{path_with_namespace}}}\" }"
            },
            {
              "target": "branch",
              "dataSourceName": "Branches",
              "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "CommitsFromSelectedBranch",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{short_id}}}\" }"
            },
            {
              "target": "latestversion",
              "dataSourceName": "LatestCommit",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{short_id}}}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { {{ #stringReplace ['tree','blob'] ['artifactType:\"folder\"','itemType:\"file\"'] type }} } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { itemType: \"{{ #stringReplace ['tree','blob'] ['folder','file'] type }}\" } }"
            }
          ],
          "browsableArtifactTypeMapping": {
            "folder": "artifactItems"
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "apim-deploy",
    "version": "0.1.18",
    "name": "API Management Deployment",
    "description": "Deployment tools for Azure API Management.",
    "publisher": "plukasiak",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "icon.png"
    },
    "scopes": [
      "vso.build_execute"
    ],
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Utility",
      "Deploy API",
      "API Management",
      "Deploy Task"
    ],
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "license.txt"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/p-lukasiak/vsts-apim.git"
    },
    "branding": {
      "color": "#0088DC",
      "theme": "light"
    },
    "files": [
      {
        "path": "BuildTasks"
      }
    ],
    "contributions": [
      {
        "id": "task-APIdelete",
        "type": "ms.vss-distributed-task.task",
        "description": "Delete API",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/APIDelete"
        }
      },
      {
        "id": "apim-endpoint-type",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "APIMManagementService",
          "displayName": "Azure APIM Management",
          "url": {
            "displayName": "Management API URL",
            "value": ""
          },
          "helpMarkDown": "Connection endpoint to APIM Management REST API. The identifer and keys can be retrived from Security->API page in the Publisher portal of your APIM.",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "service",
                  "name": "API Management Service Name",
                  "description": "Name of Azure API Management Service.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "subscriptionId",
                  "name": "Azure Subcription Id",
                  "description": "Identifier of Azure subscription where API Management Service is deployed.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "resourceGroup",
                  "name": "Azure Resource Group Name",
                  "description": "Name of Azure Resource Group where API Management Service is deployed.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                },
                {
                  "id": "identifier",
                  "name": "Identifier",
                  "description": "Identifier for API Management REST API.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  },
                  "values": {
                    "inputId": "identifier",
                    "isDisabled": false,
                    "defaultValue": "identifier"
                  }
                },
                {
                  "id": "key",
                  "name": "Primary or Secondary key",
                  "description": "Primary or Secondary key for APIM Management REST API.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "cookbook-gitlab-integration",
    "name": "GitLab Integration for Azure Pipelines",
    "publisher": "onlyutkarsh",
    "version": "0.0.168",
    "public": false,
    "description": "Download sources from GitLab repository in your build pipeline or consume them as an artifact in to your release pipeline during deployment.",
    "categories": [
      "Azure Pipelines"
    ],
    "Tags": [
      "GitLab",
      "Azure DevOps",
      "Azure Pipelines",
      "Release",
      "DevOps",
      "Artifacts",
      "Git",
      "Build"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/onlyutkarsh/gitlab-integration"
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [],
    "icons": {
      "default": "images/gitlab128.png",
      "large": "images/gitlab512.png"
    },
    "branding": {
      "color": "#3B3E43",
      "theme": "dark"
    },
    "content": {
      "details": {
        "path": "readme.md"
      }
    },
    "files": [
      {
        "path": "tasks"
      },
      {
        "path": "images",
        "addressable": "true"
      }
    ],
    "contributions": [
      {
        "id": "gitlab-downloadrepo-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/DownloadRepo"
        }
      },
      {
        "id": "gitlab-endpoint-type",
        "description": "Service connection type for all GitLab connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "gitlab",
          "icon": "images/gitlab16.png",
          "displayName": "GitLab",
          "url": {
            "displayName": "Server URL",
            "value": "https://gitlab.com",
            "helpText": "Client service connection for GitLab. You don't need to change this unless you are using self hosted GitLab instance, in which case you may need to point to your instance URL. ",
            "isVisible": true
          },
          "inputDescriptors": [
            {
              "id": "username",
              "name": "Username",
              "description": "Username you use to login to GitLab. This is required only to validate your PAT token using 'Verify connection' link below.",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            }
          ],
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{{endpoint.url}}}api/v4/users?username={{{endpoint.username}}}",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Repositories",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects?membership=true",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "Branches",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{{definition}}}/repository/branches",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "CommitsFromSelectedBranch",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{{definition}}}/repository/commits{{#if branch}}?ref_name={{{branch}}}",
              "resultSelector": "jsonpath:$[*]"
            },
            {
              "name": "LatestCommit",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{{definition}}}/repository/commits",
              "resultSelector": "jsonpath:$[0]"
            },
            {
              "name": "Artifacts",
              "endpointUrl": "{{{endpoint.url}}}api/v4/projects/{{definition}}/repository/tree?path={{itemPath}}&ref={{branch}}",
              "resultSelector": "jsonpath:$[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "API Token",
                  "description": "GitLab API Token",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  },
                  "helpMarkDown": "<a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" target=\"_blank\"><b>Creating a personal access token</b></a>"
                }
              ],
              "headers": [
                {
                  "name": "Private-Token",
                  "value": "{{ endpoint.apitoken }}"
                }
              ]
            }
          ],
          "helpMarkDown": "Learn more about <a href=\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html\" target=\"_blank\"><b>Creating GitLab tokens</b></a> and <a href=\"https://docs.microsoft.com/en-us/vsts/pipelines/library/service-endpoints?view=vsts\" target=\"_blank\"><b>Service connections</b></a> "
        }
      },
      {
        "id": "gitlab-release-artifact-type",
        "description": "GitLab Artifact",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "Gitlab",
          "displayName": "GitLab",
          "endpointTypeId": "gitlab:Token",
          "uniqueSourceIdentifier": "{{connection}}:{{definition}}:{{branch}}",
          "downloadTaskId": "e6590a51-c3b6-4b88-99e4-b3498ed7cd5b",
          "artifactType": "SourceControl",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Source (repository)",
              "description": "Repository to pull",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "defaultVersionType",
              "name": "i18n:Default version",
              "description": "i18n:The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
              "inputMode": "combo",
              "isConfidential": false,
              "hasDynamicValueInformation": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              },
              "values": {
                "inputId": "defaultVersionTypeValues",
                "defaultValue": "latestType",
                "isLimitedToPossibleValues": true,
                "possibleValues": [
                  {
                    "value": "latestType",
                    "displayValue": "i18n:Latest from default branch"
                  },
                  {
                    "value": "latestFromBranchType",
                    "displayValue": "i18n:Latest from specific branch"
                  },
                  {
                    "value": "selectDuringReleaseCreationType",
                    "displayValue": "i18n:Specify at the time of release creation"
                  }
                ]
              }
            },
            {
              "id": "branch",
              "name": "i18n: Branch",
              "description": "i18n: Artifacts from selected branch will be included in release.",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              },
              "dependencyInputIds": [
                "connection",
                "definition",
                "defaultVersionType"
              ],
              "properties": {
                "visibleRule": "defaultVersionType == latestFromBranchType"
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "definition",
              "dataSourceName": "Repositories",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{path_with_namespace}}}\" }"
            },
            {
              "target": "branch",
              "dataSourceName": "Branches",
              "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "CommitsFromSelectedBranch",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{short_id}}}\" }"
            },
            {
              "target": "latestversion",
              "dataSourceName": "LatestCommit",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{short_id}}}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { {{ #stringReplace ['tree','blob'] ['artifactType:\"folder\"','itemType:\"file\"'] type }} } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { itemType: \"{{ #stringReplace ['tree','blob'] ['folder','file'] type }}\" } }"
            },
            {
              "target": "listwebhook",
              "endpointUrl": "{{{endpoint.url}}}projects/{{definition}}/hooks",
              "requestVerb": "Post",
              "requestContent": "{}",
              "resultSelector": "jsonpath:$"
            },
            {
              "target": "createwebhook",
              "endpointUrl": "{{{endpoint.url}}}projects/{{definition}}/hooks?url={{payloadUrl}}",
              "requestVerb": "Post",
              "requestContent": "{}",
              "resultSelector": "jsonpath:$"
            },
            {
              "target": "deletewebhook",
              "endpointUrl": "{{{endpoint.url}}}projects/{{definition}}/hooks/{{hookid}}",
              "requestVerb": "Post",
              "requestContent": "{}",
              "resultSelector": "jsonpath:$"
            }
          ],
          "browsableArtifactTypeMapping": {
            "folder": "artifactItems"
          },
          "ArtifactTriggerConfiguration": {
            "isTriggerSupported": true,
            "isTriggerSupportedOnlyInHosted": false,
            "isWebhookSupportedAtServerLevel": false,
            "resources": {
              "TriggerDisabledMessage": "Enabling the trigger will create a new release every time a new commit is made in the selected repository and the branch"
            },
            "payloadHashHeaderName": "X-GitLab-Token",
            "webhookPayloadMapping": {
              "version": "{{id}}",
              "definition": "{{name}}"
            }
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "ctp-vsts-extension",
    "name": "Parasoft Service Virtualization",
    "version": "1.1.4",
    "publisher": "parasoft",
    "public": true,
    "scopes": [
      "vso.build_execute",
      "vso.serviceendpoint_manage"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Create and manage simulated test environments with Parasoft Service Virtualization.  Access complete test environments anytime, anywhere in order to test earlier, faster, and more completely.",
    "categories": [
      "Azure Artifacts"
    ],
    "tags": [
      "Service Virtualization",
      "Stubs",
      "Microsoft service virtualization",
      "test",
      "build task",
      "release",
      "test environments"
    ],
    "icons": {
      "default": "extension-icon.png"
    },
    "files": [
      {
        "path": "DeployTask"
      },
      {
        "path": "DestroyTask"
      }
    ],
    "screenshots": [
      {
        "path": "Screenshots/deploy-and-destroy-tasks.png"
      }
    ],
    "branding": {
      "color": "#004877",
      "theme": "dark"
    },
    "content": {
      "details": {
        "path": "extension-details.md"
      }
    },
    "contributions": [
      {
        "id": "ctp-endpoint-type",
        "description": "Service Endpoint type for Parasoft Continuous Testing Platform (CTP)",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "parasoftctp",
          "displayName": "Parasoft CTP",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Parasoft CTP username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Parasoft CTP password",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "This service endpoint will be available to Parasoft deploy and destroy tasks in the build and release pipeline."
        }
      },
      {
        "id": "deploy-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DeployTask"
        }
      },
      {
        "id": "destroy-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DestroyTask"
        }
      }
    ]
  },
  {
    "manifestVersion": 1.0,
    "id": "vss-services-teamcity",
    "name": "TeamCity artifacts for Release Management",
    "publisher": "ms-devlabs",
    "version": "15.158.3",
    "public": true,
    "description": "Tools related to connecting with TeamCity",
    "_description.comment": "The below format to define artifact extensions is currently in preview and may change in future.",
    "categories": [
      "Build and release"
    ],
    "Tags": [
      "TeamCity",
      "Release",
      "DevOps",
      "Artifacts"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "demands": [
      "contribution/ms.vss-releaseartifact.artifact-types"
    ],
    "icons": {
      "default": "images\\tc-icon128px.png"
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Microsoft/azure-pipelines-extensions/"
    },
    "branding": {
      "color": "#3B3E43",
      "theme": "dark"
    },
    "screenshots": [
      {
        "path": "images/screen1.png"
      },
      {
        "path": "images/screen2.png"
      }
    ],
    "content": {
      "details": {
        "path": "readme.md"
      },
      "license": {
        "path": "mp_terms.md"
      }
    },
    "files": [
      {
        "path": "images/screen1.png",
        "addressable": true
      },
      {
        "path": "images/screen2.png",
        "addressable": true
      },
      {
        "path": "Tasks/DownloadTeamCityArtifacts"
      }
    ],
    "contributions": [
      {
        "id": "teamcity-endpoint-type",
        "description": "Service Endpoint type for all TeamCity connections",
        "_description.comment": "Don't Localize the word 'TeamCity'",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "teamcity",
          "displayName": "TeamCity",
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/projects",
              "resultSelector": "jsonpath:$.project[?(@.id!='_Root')]"
            },
            {
              "name": "Projects",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/projects",
              "resultSelector": "jsonpath:$.project[?(@.id!='_Root')]"
            },
            {
              "name": "BuildConfigurations",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/projects/{{project}}/buildTypes",
              "resultSelector": "jsonpath:$.buildType[*]"
            },
            {
              "name": "Builds",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/buildTypes/{{definition}}/builds/?locator=branch:default:any",
              "resultSelector": "jsonpath:$.build[?(@.status=='SUCCESS')]"
            },
            {
              "name": "LatestBuild",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/buildTypes/{{definition}}/builds?locator=branch:default:any&count=1&status=success",
              "resultSelector": "jsonpath:$.build[*]"
            },
            {
              "name": "Artifacts",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/builds/id:{{version}}/artifacts/children/{{itemPath}}",
              "resultSelector": "jsonpath:$.file[*]"
            },
            {
              "name": "BranchName",
              "endpointUrl": "{{endpoint.url}}httpAuth/app/rest/builds/id:{{version}}",
              "resultSelector": "jsonpath:$.branchName"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic"
            }
          ],
          "helpMarkDown": "<a href=\"https://msdn.microsoft.com/Library/vs/alm/Release/author-release-definition/understanding-tasks#serviceconnections\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "teamcity-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/DownloadTeamCityArtifacts"
        }
      },
      {
        "id": "teamcity-release-artifact-type",
        "description": "TeamCity Artifact",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [
          "ms.vss-releaseartifact.artifact-types"
        ],
        "properties": {
          "name": "TeamCity",
          "displayName": "TeamCity",
          "_displayName.comment": "Don't Localize the word 'TeamCity'",
          "endpointTypeId": "teamcity",
          "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
          "downloadTaskId": "15ECB9F3-C0F7-42CF-9CE3-C6DDED17DE81",
          "artifactType": "Build",
          "inputDescriptors": [
            {
              "id": "connection",
              "name": "Service Endpoint",
              "description": "Service Endpoint Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "project",
              "name": "Project",
              "description": "Project Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "definition",
              "name": "Build Configuration",
              "description": "Build Configuration Id",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              }
            },
            {
              "id": "defaultVersionType",
              "name": "Default version",
              "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": false,
              "values": {
                "inputId": "defaultVersionTypeValues",
                "defaultValue": "latestType",
                "possibleValues": [
                  {
                    "value": "latestType",
                    "displayValue": "Latest"
                  },
                  {
                    "value": "selectDuringReleaseCreationType",
                    "displayValue": "Specify at the time of release creation"
                  },
                  {
                    "value": "specificVersionType",
                    "displayValue": "Specify specific version"
                  }
                ],
                "isLimitedToPossibleValues": true
              },
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "defaultVersionSpecific",
              "name": "i18n:Version",
              "description": "i18n:Version",
              "inputMode": "Combo",
              "isConfidential": false,
              "groupName": "[{ \"Key\": \"defaultVersionType\", \"Value\": \"specificVersionType\"}]",
              "properties": {
                "visibleRule": "defaultVersionType == specificVersionType"
              },
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition",
                "defaultVersionType"
              ],
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "artifacts",
              "name": "Artifacts",
              "description": "Build artifacts",
              "inputMode": "none",
              "isConfidential": false,
              "hasDynamicValueInformation": true,
              "dependencyInputIds": [
                "connection",
                "project",
                "definition"
              ],
              "validation": {
                "isRequired": false,
                "dataType": "string",
                "maxLength": 300
              }
            }
          ],
          "dataSourceBindings": [
            {
              "target": "project",
              "dataSourceName": "Projects",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{name}}} ({{{id}}})\" }"
            },
            {
              "target": "definition",
              "dataSourceName": "BuildConfigurations",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{name}}}\" }"
            },
            {
              "target": "versions",
              "dataSourceName": "Builds",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{number}}}\" }"
            },
            {
              "target": "defaultVersionSpecific",
              "dataSourceName": "Builds",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{number}}}\" }"
            },
            {
              "target": "latestversion",
              "dataSourceName": "LatestBuild",
              "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{number}}}\" }"
            },
            {
              "target": "artifactDetails",
              "resultTemplate": "{ Name: \"{{version}}\", StreamType: \"zip\", downloadUrl : \"{{endpoint.url}}downloadArtifacts.html?buildTypeId={{definition}}&buildId={{version}}\" }"
            },
            {
              "target": "artifacts",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{#if itemPath}}{{{itemPath}}}/{{{name}}}{{else}}{{{name}}}{{/if}}\", DisplayValue : \"{{{name}}}\", data: { artifactType: \"{{#if children}}folder{{else}}archive{{/if}}\" } }"
            },
            {
              "target": "artifactItems",
              "dataSourceName": "Artifacts",
              "resultTemplate": "{ Value : \"{{#if itemPath}}{{{itemPath}}}/{{{name}}}{{else}}{{{name}}}{{/if}}\", DisplayValue : \"{{{name}}}\", data: { itemType: \"{{#if children}}folder{{else}}file{{/if}}\" } }"
            },
            {
              "target": "branchName",
              "dataSourceName": "BranchName"
            }
          ],
          "browsableArtifactTypeMapping": {
            "folder": "artifactItems"
          }
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "name": "Scheduled Work Item Query",
    "version": "0.0.58",
    "publisher": "Quadrotech",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Sends an E-Mail on a Schedule for Work Item Queries",
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "images/extension-icon.png"
    },
    "scopes": [
      "vso.work"
    ],
    "demands": [
      "api-version/5.0"
    ],
    "branding": {
      "color": "rgb(34, 34, 34)",
      "theme": "dark"
    },
    "files": [
      {
        "path": "ado-scheduledworkitemquery-task"
      }
    ],
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "LICENSE"
      }
    },
    "links": {
      "home": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
      },
      "getstarted": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
      },
      "support": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery/issues"
      },
      "repository": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
      },
      "issues": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery/issues"
      },
      "company": {
        "uri": "https://www.quadrotech-it.com/"
      },
      "privacypolicy": {
        "uri": "https://www.quadrotech-it.com/privacy-policy"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
    },
    "contributions": [
      {
        "id": "ADOScheduledWorkItemQuery",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "ado-scheduledworkitemquery-task"
        }
      },
      {
        "id": "sendgrid-endpoint-type",
        "description": "Service endpoint type for sendgrid connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "sendgrid",
          "displayName": "SendGrid connection",
          "url": {
            "displayName": "Server Url",
            "helpText": "SendGrid URL.",
            "value": "https://www.sendgrid.net",
            "isVisible": "false"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "senderEmail",
                  "name": "From E-Mail",
                  "description": "E-Mail Address where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "AzureDevOps@dev.azure.com",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "senderName",
                  "name": "From Name",
                  "description": "Name where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "Azure DevOps",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/Quadrotech/ADOScheduledWorkItemQuery\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "smtp-endpoint-type",
        "description": "Service endpoint type for SMTP connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "smtp",
          "displayName": "SMTP connection",
          "url": {
            "displayName": "SMTP Server Name",
            "helpText": "SMTP Server Name.",
            "value": "https://www.smtp.com",
            "isVisible": "false"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "displayName": "No Authentication",
              "inputDescriptors": [
                {
                  "id": "smtpserverNoAuth",
                  "name": "SMTP Server",
                  "description": "SMTP Server Name",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpportNoAuth",
                  "name": "SMTP Server Port",
                  "description": "SMTP Server Port",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "number",
                    "maxValue": "65500",
                    "minValue": "1"
                  }
                },
                {
                  "id": "tlsOptionsNoAuth",
                  "name": "TLS Options",
                  "description": "TLS Options",
                  "inputMode": "combo",
                  "isConfidential": false,
                  "validation": {
                    "dataType": "string",
                    "maxLength": 300
                  },
                  "values": {
                    "inputId": "tlsOptionsNoAuthValues",
                    "defaultValue": "auto",
                    "possibleValues": [
                      "@{value=force; displayValue=Force TLS}",
                      "@{value=auto; displayValue=Use TLS if the server supports STARTTLS}",
                      "@{value=ignore; displayValue=Do not use TLS, and ignore STARTTLS}"
                    ]
                  }
                },
                {
                  "id": "smtpFromEmailNoAuth",
                  "name": "From E-Mail",
                  "description": "E-Mail Address where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "AzureDevOps@dev.azure.com",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpFromNameNoAuth",
                  "name": "From Name",
                  "description": "Name where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "Azure DevOps",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "displayName": "Username/Password Authentication",
              "inputDescriptors": [
                {
                  "id": "smtpserverUserPassword",
                  "name": "SMTP Server",
                  "description": "SMTP Server Name",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpportUserPassword",
                  "name": "SMTP Server Port",
                  "description": "SMTP Server Port",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "number",
                    "maxValue": "65500",
                    "minValue": "1"
                  }
                },
                {
                  "id": "tlsOptionsUserPassword",
                  "name": "TLS Options",
                  "description": "TLS Options",
                  "inputMode": "combo",
                  "isConfidential": false,
                  "validation": {
                    "dataType": "string",
                    "maxLength": 300
                  },
                  "values": {
                    "inputId": "tlsOptionsUserPasswordValues",
                    "defaultValue": "auto",
                    "possibleValues": [
                      "@{value=force; displayValue=Force TLS}",
                      "@{value=auto; displayValue=Use TLS if the server supports STARTTLS}",
                      "@{value=ignore; displayValue=Do not use TLS, and ignore STARTTLS}"
                    ]
                  }
                },
                {
                  "id": "smtpFromEmailUserPassword",
                  "name": "From E-Mail",
                  "description": "E-Mail Address where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "AzureDevOps@dev.azure.com",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpFromNameUserPassword",
                  "name": "From Name",
                  "description": "Name where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "Azure DevOps",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/Quadrotech/ADOScheduledWorkItemQuery\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ],
    "tags": [
      "query",
      "work item",
      "schedule",
      "e-mail"
    ]
  },
  {
    "manifestVersion": 1,
    "id": "rp-build-release-pnptasks",
    "name": "SharePoint PnP Pipelines Tasks",
    "version": "3.0.0",
    "publisher": "RazorSPoint",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Tasks for Builds and Releases empowered by the PnP provisioning engine.",
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "SharePoint",
      "PnP",
      "xml",
      "deployment",
      "PowerShell",
      "RazorSPoint"
    ],
    "icons": {
      "default": "Images/Icon128.png",
      "large": "Images/Icon512.png"
    },
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/RazorSPoint/azuredevops-pnp-tasks.git"
      },
      "learn": {
        "uri": "https://docs.microsoft.com/en-us/powershell/module/sharepoint-pnp/apply-pnpprovisioningtemplate?view=sharepoint-ps"
      },
      "issues": {
        "uri": "https://github.com/RazorSPoint/azuredevops-pnp-tasks/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/RazorSPoint/azuredevops-pnp-tasks"
    },
    "badges": [
      {
        "href": "https://dev.azure.com/razorspoint/RP_Build-Release-PnPTasks/_build/latest?definitionId=17",
        "uri": "https://dev.azure.com/razorspoint/RP_Build-Release-PnPTasks/_apis/build/status/RazorSPoint.azuredevops-pnp-tasks",
        "description": "Azure DevOps build for the project"
      },
      {
        "href": "https://dev.azure.com/razorspoint/RP_Build-Release-PnPTasks/_release?view=mine&definitionId=2&_a=releases",
        "uri": "https://vsrm.dev.azure.com/RazorSpoint/_apis/public/Release/badge/5618fbe3-b9e3-4226-a374-cfd1d55bb77a/4/6",
        "description": "Azure DevOps internal release for the project"
      },
      {
        "href": "https://dev.azure.com/razorspoint/RP_Build-Release-PnPTasks/_release?view=mine&definitionId=2&_a=releases",
        "uri": "https://vsrm.dev.azure.com/RazorSpoint/_apis/public/Release/badge/5618fbe3-b9e3-4226-a374-cfd1d55bb77a/4/7",
        "description": "Azure DevOps public release for the project"
      }
    ],
    "screenshots": [
      {
        "path": "Images/Preview01.png"
      },
      {
        "path": "Images/Preview02.png"
      },
      {
        "path": "Images/Preview03.png"
      }
    ],
    "branding": {
      "color": "rgb(240,240,240)",
      "theme": "light"
    },
    "scopes": [
      "vso.build_execute"
    ],
    "files": [
      {
        "path": "DeployArtifactsWithPnP"
      },
      {
        "path": "PnPPowerShell"
      },
      {
        "path": "Images",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "RP-DeployArtifactsWithPnP",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "DeployArtifactsWithPnP"
        }
      },
      {
        "id": "RP-PnPPowerShell",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "PnPPowerShell"
        }
      },
      {
        "id": "sharepoint-site-service-endpoint",
        "description": "SharePointSiteAuthenticationEndpoint",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "sharepoint-site",
          "displayName": "SharePoint Site",
          "url": {
            "displayName": "SharePoint Site Url",
            "helpText": "Url for the SharePoint Site to connect to."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "openshift-vsts",
    "publisher": "redhat",
    "version": "1.4.2",
    "name": "OpenShift Extension",
    "description": "OpenShift tasks for Azure DevOps",
    "public": true,
    "galleryFlags": [
      "Preview"
    ],
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "utility",
      "tasks",
      "openshift",
      "oc"
    ],
    "links": {
      "home": {
        "uri": "https://github.com/redhat-developer/openshift-vsts"
      },
      "getstarted": {
        "uri": "https://github.com/redhat-developer/openshift-vsts/blob/master/docs/getting-started.md"
      },
      "support": {
        "uri": "https://github.com/redhat-developer/openshift-vsts/issues"
      },
      "issues": {
        "uri": "https://github.com/redhat-developer/openshift-vsts/issues"
      },
      "repository": {
        "uri": "https://github.com/redhat-developer/openshift-vsts"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/redhat-developer/openshift-vsts"
    },
    "content": {
      "details": {
        "path": "docs/details.md"
      },
      "license": {
        "path": "LICENSE"
      }
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service endpoint for OpenShift cluster",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "openshift",
          "displayName": "OpenShift",
          "url": {
            "displayName": "Server URL",
            "helpText": "URL for the OpenShift cluster to connect to."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "acceptUntrustedCerts",
                  "name": "Accept untrusted SSL certificates",
                  "description": "If checked, self-signed certificates will be accepted. Please do not use this option in production environment.",
                  "inputMode": "checkbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "boolean"
                  }
                },
                {
                  "id": "certificateAuthorityFile",
                  "name": "Certificate Authority File",
                  "description": "The path to a certificate authority file to correctly and securely authenticates with an OpenShift server that uses HTTPS",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "acceptUntrustedCerts",
                  "name": "Accept untrusted SSL certificates",
                  "description": "If checked, self-signed certificates will be accepted. Please do not use this option in production environment.",
                  "inputMode": "checkbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "boolean"
                  }
                },
                {
                  "id": "certificateAuthorityFile",
                  "name": "Certificate Authority File",
                  "description": "The path to a certificate authority file to correctly and securely authenticates with an OpenShift server that uses HTTPS",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "kubeconfig",
                  "name": "Kubeconfig",
                  "description": "Copy your kubectl config",
                  "inputMode": "textArea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/redhat-developer/openshift-vsts/blob/master/docs/getting-started.md\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "oc-cmd-task",
        "description": "Task to run user-defined oc command.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/oc-cmd"
        }
      },
      {
        "id": "config-map-task",
        "description": "Task to apply ConfigMap properties.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/config-map"
        }
      },
      {
        "id": "oc-setup-task",
        "description": "Task to install oc and setup PATH.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/oc-setup"
        }
      }
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "files": [
      {
        "path": "tasks/oc-cmd"
      },
      {
        "path": "tasks/config-map"
      },
      {
        "path": "tasks/oc-setup"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "robert-vsts-dynamics365",
    "version": "0.2.6577.18212",
    "name": "Dynamics 365 Tools",
    "publisher": "robertraaijmakers",
    "description": "Toolbox to help you set up automated builds and deployments for Dynamics 365.",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/icon.png"
    },
    "categories": [
      "Build and release"
    ],
    "branding": {
      "color": "rgb(14, 32, 74)",
      "theme": "dark"
    },
    "content": {
      "details": {
        "path": "README.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/robertraaijmakers/vsts-extensions-dynamics365/wiki/"
      },
      "support": {
        "uri": "https://github.com/robertraaijmakers/vsts-extensions-dynamics365/"
      },
      "repository": {
        "uri": "https://robertraaijmakers.visualstudio.com/vsts-extensions-dynamics365/"
      },
      "issues": {
        "uri": "https://github.com/robertraaijmakers/vsts-extension-huebuildlamp/issues/"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://robertraaijmakers.visualstudio.com/vsts-extensions-dynamics365/"
    },
    "files": [
      {
        "path": "BuildTasks"
      }
    ],
    "contributions": [
      {
        "id": "dynamics365-service-endpoint",
        "description": "Service Endpoint type for Dynamics 365 connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "dynamics365",
          "displayName": "Dynamics 365 Endpoint",
          "url": {
            "displayName": "Server Url",
            "helpText": "Url for the Dynamics 365 server to connect to."
          },
          "authenticationSchemes": [
            {
              "id": "authentication-schema-o365",
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "displayName": "Office 365",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Dynamics 365 user name",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 255
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "User password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 100
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "dynamics365-solution-export-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/ExportSolution"
        }
      },
      {
        "id": "dynamics365-solution-import-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/ImportSolution"
        }
      },
      {
        "id": "dynamics365-activate-sla",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/ActivateSla"
        }
      },
      {
        "id": "dynamics365-publish-duplicatedetectionrule",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "BuildTasks/SetDuplicateDetectionRuleStatus"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "saucelabs-tasks",
    "name": "Sauce for Visual Studio Team Services",
    "version": "0.1.3",
    "publisher": "saucelabs",
    "public": true,
    "description": "Automatically reduce test times from hours to minutes using Sauce from within VSTS, helping accelerate release cycles and increasing quality.",
    "categories": [
      "Test"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "home": {
        "uri": "https://saucelabs.com"
      },
      "gettingstarted": {
        "uri": "https://saucelabs.com/beta/signup?utm_source=vsip"
      },
      "learn": {
        "uri": "https://wiki.saucelabs.com/display/DOCS/viewpage.action?pageId=53019401"
      },
      "issues": {
        "uri": "https://support.saucelabs.com/"
      },
      "support": {
        "uri": "https://support.saucelabs.com"
      },
      "license": {
        "uri": "https://saucelabs.com/tos/"
      },
      "repository": {
        "uri": "https://github.com/saucelabs/vso-sauce-ondemand-plugin"
      }
    },
    "icons": {
      "default": "images/saucelabs-icon.png"
    },
    "files": [
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "sod-main"
      },
      {
        "path": "sod-stop-sc"
      },
      {
        "path": "sod-build-info",
        "addressable": true
      },
      {
        "path": "lib",
        "addressable": true
      }
    ],
    "scopes": [
      "vso.build_execute",
      "vso.test",
      "vso.test_write",
      "vso.serviceendpoint_manage"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "sod-main",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "sod-main"
        }
      },
      {
        "id": "sod-stop-sc",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "sod-stop-sc"
        }
      },
      {
        "id": "saucelabs-endpoint-type",
        "description": "Sauce Labs Credentials",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "saucelabs",
          "displayName": "Sauce Labs Credentials",
          "url": "https://saucelabs.com/rest/",
          "dataSources": [
            {
              "resultSelector": "jsonpath:$.status_message",
              "name": "getStatus",
              "endpointUrl": "https://saucelabs.com/rest/v1/info/status"
            },
            {
              "resultSelector": "jsonpath:$",
              "name": "getBuildFullJobs",
              "endpointUrl": "https://{{sauceEndpoint}}/rest/v1/{{username}}/build/{{build}}/jobs?full=1&vsts=1"
            },
            {
              "resultSelector": "jsonpath:$",
              "name": "getAuth",
              "endpointUrl": "https://sauce-for-vsts.saucelabs.com/rest/v1/users/halkeye/bulk/auth?{{query}}"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "datacenter",
                  "name": "Data Center",
                  "description": "SauceLabs data center",
                  "inputMode": "combo",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  },
                  "values": {
                    "inputId": "dataCenterValues",
                    "possibleValues": [
                      "@{value=us-west-1; displayValue=US West 1}",
                      "@{value=eu-central-1; displayValue=EU Central 1}",
                      "@{value=us-east-1; displayValue=US East 1 (headless)}"
                    ],
                    "isLimitedToPossibleValues": true
                  }
                },
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "API Token",
                  "description": "API Token Found on your saucelabs account page",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "build-info-tab",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "A tab contributing to build results view",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "Sauce Labs",
          "uri": "sod-build-info/infoTab.html"
        }
      },
      {
        "id": "embed-dialog",
        "type": "ms.vss-web.control",
        "description": "Embed Dialog",
        "targets": [],
        "properties": {
          "uri": "sod-build-info/embedDialog.html?auth={{auth}}"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "Vsix-Tools",
    "name": "Vsix Tools",
    "public": true,
    "version": "2.4.43",
    "publisher": "samirboulema",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Various Vsix build tasks.",
    "icons": {
      "default": "images/Logo128x128.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Build",
      "Release",
      "Binary",
      "Assembly",
      "Version",
      "Continuous Delivery",
      "Continuous Integration",
      "Management",
      "Utility",
      "Tasks"
    ],
    "screenshots": [
      {
        "path": "images/Task_List.png"
      }
    ],
    "links": {
      "learn": {
        "uri": "https://github.com/sboulema/VsixTools/wiki"
      },
      "support": {
        "uri": "https://github.com/sboulema/VsixTools/issues"
      },
      "license": {
        "uri": "https://github.com/sboulema/VsixTools/blob/master/LICENSE"
      },
      "privacypolicy": {
        "uri": "https://github.com/sboulema/VsixTools/blob/master/PRIVACY.md"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/sboulema/VsixTools"
    },
    "content": {
      "details": {
        "path": "Overview.md"
      },
      "license": {
        "path": "License.md"
      }
    },
    "files": [
      {
        "path": "tasks"
      },
      {
        "path": "images",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "Vsix-Tools-Update-Version",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/updateVersion"
        }
      },
      {
        "id": "Vsix-Tools-Upload-Vsix",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/uploadVsix"
        }
      },
      {
        "id": "Vsix-Tools-Sign-Vsix",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/signVsix"
        }
      },
      {
        "id": "Vsix-Tools-MyGet-Endpoint",
        "description": "Service endpoint type for MyGet connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "Vsix-Tools-MyGet",
          "displayName": "MyGet Vsix",
          "url": {
            "displayName": "Feed Upload Url",
            "helpText": "Url for the MyGet feed to publish to."
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "X-NuGet-ApiKey",
                  "value": "{{ endpoint.apitoken }}"
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://docs.myget.org/docs/reference/feed-endpoints\" target=\"_blank\"><b>Learn More</b></a>",
          "icon": "images/MyGet.png"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "sdelements",
    "version": "0.1.13",
    "name": "SD Elements Integration",
    "publisher": "securitycompass",
    "description": "Security Compass SD Elements Platform Integration",
    "galleryFlags": [
      "Public"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "tags": [
      "security",
      "release",
      "devsecops",
      "continuous integration",
      "deploy task"
    ],
    "categories": [
      "Azure Pipelines"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "icons": {
      "default": "static/images/sde.png"
    },
    "files": [
      {
        "path": "SDElementsProjectRiskCheck"
      }
    ],
    "links": {
      "home": {
        "uri": "https://www.securitycompass.com/sdelements/"
      },
      "getstarted": {
        "uri": "https://github.com/sdelements/sdelements-azuredevops-plugin/wiki/Getting-Started"
      }
    },
    "contributions": [
      {
        "id": "SDElementsProjectRiskCheck",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "SDElementsProjectRiskCheck"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for SD Elements connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "SDElements",
          "displayName": "SD Elements",
          "url": {
            "displayName": "Server Url",
            "helpText": "URL for the SD Elements server to connect to."
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{{endpoint.url}}}api/v2/users/me/",
              "resultSelector": "jsonpath:$.values[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "API Token",
                  "description": "API key for connection",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ],
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Token {{endpoint.apitoken}}"
                }
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "new-relic-record-deployment",
    "version": "1.1.1",
    "name": "New Relic Record Deployment",
    "description": "New Build/Release task to record deployment event securely to your New Relic account with a dedicated new endpoint type",
    "publisher": "ShmulikAhituv",
    "icons": {
      "default": "img/logo.png"
    },
    "galleryFlags": [
      "Public"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "tags": [
      "New Relic",
      "Deployment",
      "Endpoint"
    ],
    "screenshots": [
      {
        "path": "img/screenshots/endpoint1.png"
      },
      {
        "path": "img/screenshots/endpoint2.png"
      },
      {
        "path": "img/screenshots/task.png"
      }
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "home": {
        "uri": "https://github.com/shmulikah/VSTSExtensions"
      },
      "getstarted": {
        "uri": "https://github.com/shmulikah/VSTSExtensions"
      },
      "learn": {
        "uri": "https://github.com/shmulikah/VSTSExtensions"
      },
      "support": {
        "uri": "https://github.com/shmulikah/VSTSExtensions"
      },
      "repository": {
        "uri": "https://github.com/shmulikah/VSTSExtensions"
      },
      "issues": {
        "uri": "https://github.com/shmulikah/VSTSExtensions/issues"
      }
    },
    "branding": {
      "color": "rgb(220, 235, 252)",
      "theme": "light"
    },
    "files": [
      {
        "path": "RecordDeployment"
      },
      {
        "path": "img",
        "addressable": true
      }
    ],
    "scopes": [
      "vso.build_execute"
    ],
    "categories": [
      "Integrate"
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for new relic API",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "NewRelic",
          "displayName": "New Relic connection",
          "url": {
            "displayName": "New relic Server Url (v2)",
            "helpText": "Url for the new relic API server to connect to."
          },
          "dataSources": [
            {
              "name": "New Relic Applications",
              "endpointUrl": "applications.json",
              "resultSelector": "jsonpath:$.applications[*].name"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "X-Api-Key",
                  "description": "API Token for connection to endpoint",
                  "inputMode": "textbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ],
              "headers": [
                {
                  "name": "X-Api-Key",
                  "value": "{{endpoint.apitoken}}"
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "task-RecordDeployment",
        "description": "Task that Records a new relic deployment event",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "RecordDeployment"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "maikvandergaag-trigger-pipeline",
    "name": "Trigger Azure DevOps Pipeline",
    "version": "1.0.0",
    "publisher": "maikvandergaag",
    "description": "Build and Release Management task to trigger a Azure DevOps release or build pipeline.",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/icon.png"
    },
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "Release",
      "Build",
      "Azure DevOps",
      "Trigger",
      "3fifty"
    ],
    "screenshots": [
      {
        "path": "images/screenshot-1.png"
      },
      {
        "path": "images/screenshot-2.png"
      }
    ],
    "content": {
      "license": {
        "path": "license.md"
      },
      "details": {
        "path": "readme.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "https://github.com/MaikvanderGaag/msft-extensions/wiki"
      },
      "repository": {
        "uri": "https://github.com/MaikvanderGaag/msft-extensions/"
      },
      "issues": {
        "uri": "https://github.com/MaikvanderGaag/msft-extensions/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/maikvandergaag/msft-extensions/tree/master/azuredevops/triggerpipeline"
    },
    "branding": {
      "color": "rgb(0, 171, 236)",
      "theme": "light"
    },
    "contributions": [
      {
        "id": "TriggerPipeline",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "TriggerPipeline"
        }
      },
      {
        "id": "azuredevops-endpoint-type",
        "description": "Service Endpoint for a Azure DevOps API connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "azuredevopsAPI",
          "displayName": "Azure DevOps API",
          "url": {
            "displayName": "Organization Url",
            "value": "https://dev.azure.com/[organization]"
          },
          "dataSources": [
            {
              "name": "projects",
              "endpointUrl": "{{endpoint.url}}/_apis/projects",
              "resultSelector": "jsonpath:$.value[?(@.state=='wellFormed')]"
            },
            {
              "name": "buildDefinitions",
              "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions",
              "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]"
            },
            {
              "name": "releaseDefinitions",
              "endpointUrl": "{{endpoint.releaseUrl}}/{{project}}/_apis/release/definitions",
              "resultSelector": "jsonpath:$.value[?(@.isDeleted==false)]"
            }
          ],
          "inputDescriptors": [
            {
              "id": "releaseUrl",
              "name": "Release API Url",
              "description": "The url of the release API",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string",
                "maxLength": 300
              },
              "values": {
                "inputId": "releaseUrlInput",
                "defaultValue": "https://vsrm.dev.azure.com/[organization]"
              }
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 \"token\" \":\" endpoint.apitoken }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "Personal Access Token",
                  "description": "Personal access token.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "files": [
      {
        "path": "triggerpipeline"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "AzureADPowerShell",
    "name": "AzureAD PowerShell",
    "version": "0.0.8",
    "publisher": "SmokedLinq",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "description": "Run a PowerShell script against an AzureAD tenant",
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "icon.png"
    },
    "scopes": [
      "vso.release"
    ],
    "contributions": [
      {
        "id": "AzureADPowerShell",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/AzureADPowerShell"
        }
      },
      {
        "id": "azuread-service-endpoint",
        "description": "Service Endpoint for AzureAD",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "azureAD",
          "displayName": "Azure Active Directory",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-service-principal",
              "inputDescriptors": [
                {
                  "id": "tenantId",
                  "name": "Azure Tenant ID",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "servicePrincipalId",
                  "name": "Client ID",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "servicePrincipalKey",
                  "name": "Client Secret",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "files": [
      {
        "path": "Tasks"
      }
    ],
    "repository": {
      "type": "git",
      "uri": "https://github.com/smokedlinq/vsts-task-azureadpowershell/"
    }
  },
  {
    "manifestVersion": 1,
    "id": "sonarcloud",
    "name": "SonarCloud",
    "version": "1.9.0",
    "branding": {
      "color": "rgb(243, 243, 243)",
      "theme": "light"
    },
    "publisher": "sonarsource",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "description": "Detect bugs, vulnerabilities and code smells across project branches and pull requests.",
    "public": true,
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "extension-icon.png"
    },
    "tags": [
      "build",
      "ci",
      "continuous integration",
      "code quality",
      "static code analysis"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "license-terms.md"
      }
    },
    "screenshots": [
      {
        "path": "img/tasks.png"
      }
    ],
    "links": {
      "home": {
        "uri": "https://about.sonarcloud.io/"
      },
      "getstarted": {
        "uri": "https://www.azuredevopslabs.com/labs/vstsextend/sonarcloud"
      },
      "support": {
        "uri": "https://www.sonarqube.org/community/"
      }
    },
    "CustomerQnASupport": {
      "enableqna": "true",
      "url": "https://about.sonarcloud.io/contact/"
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/SonarSource/sonar-scanner-vsts"
    },
    "baseUri": "https://sonarcloud.io",
    "files": [
      {
        "path": "tasks"
      },
      {
        "path": "img",
        "addressable": true
      },
      {
        "path": "icons",
        "addressable": true
      },
      {
        "path": "templates"
      }
    ],
    "scopes": [
      "vso.build",
      "vso.code",
      "vso.test"
    ],
    "contributions": [
      {
        "id": "14d9cde6-c1da-4d55-aa01-2965cd301255",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/prepare"
        }
      },
      {
        "id": "ce096e50-6155-4de8-8800-4221aaeed4a1",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/analyze"
        }
      },
      {
        "id": "38b27399-a642-40af-bb7d-9971f69712e8",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/publish"
        }
      },
      {
        "id": "6350bfb8-c310-4cdd-af68-722f33cf440a",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/qgstatus"
        }
      },
      {
        "id": "3c598f25-01c1-4c09-97c6-926476882688",
        "type": "ms.vss-dashboards-web.widget",
        "targets": [
          "ms.vss-dashboards-web.widget-catalog",
          ".e56c6ff0-c6f9-43d0-bdef-b3f1aa0dc6dd"
        ],
        "properties": {
          "name": "Code Quality",
          "description": "Shows the current quality status of your project based on SonarCloud.",
          "catalogIconUrl:": "/integration/vsts/images/sonarcloud-icon.png",
          "previewImageUrl": "/integration/vsts/images/sonarcloud-icon.png",
          "uri": "/integration/vsts/index.html?type=widget&contribution=3c598f25-01c1-4c09-97c6-926476882688",
          "supportedSizes": [
            {
              "rowSpan": 1,
              "columnSpan": 1
            }
          ],
          "supportedScopes": [
            "project_team"
          ]
        }
      },
      {
        "id": "e56c6ff0-c6f9-43d0-bdef-b3f1aa0dc6dd",
        "type": "ms.vss-dashboards-web.widget-configuration",
        "targets": [
          "ms.vss-dashboards-web.widget-configuration"
        ],
        "properties": {
          "name": "Code Quality Configuration",
          "description": "Configures Code Quality Widget",
          "uri": "/integration/vsts/index.html?type=configuration&contribution=e56c6ff0-c6f9-43d0-bdef-b3f1aa0dc6dd"
        }
      },
      {
        "id": "343c5f6a-e4d5-4480-a764-506e1daa05df",
        "description": "Service endpoint type for SonarCloud Connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "sonarcloud",
          "displayName": "SonarCloud",
          "icon": "icons/SonarCloud_endpoint.png",
          "url": {
            "displayName": "Server Url",
            "value": "https://sonarcloud.io",
            "isVisible": false
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/organizations/search?member=true",
              "resultSelector": "jsonpath:$.organizations[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 endpoint.apitoken \":\" }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "SonarCloud Token",
                  "description": "Authentication Token generated through SonarCloud (go to My Account > Security > Generate Tokens)",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Go to <a href=\"https://sonarcloud.io/account/security/\" target=\"_blank\">your SonarCloud account security page</a> to generate a token."
        }
      },
      {
        "id": "7ae27005-05c8-46d3-a5f2-06b3b15d608b",
        "type": "ms.vss-build.template",
        "targets": [
          "ms.vss-build.templates"
        ],
        "properties": {
          "name": "templates/maven"
        }
      },
      {
        "id": "b17d1503-2143-4e01-aada-5f8e29759a32",
        "type": "ms.vss-build.template",
        "targets": [
          "ms.vss-build.templates"
        ],
        "properties": {
          "name": "templates/gradle"
        }
      },
      {
        "id": "5f882e5A-b102-4fe4-b0b2-de4c812d1e18",
        "type": "ms.vss-build.template",
        "targets": [
          "ms.vss-build.templates"
        ],
        "properties": {
          "name": "templates/netcore"
        }
      },
      {
        "id": "05fc4e32-1887-480d-93bf-337f6072348e",
        "type": "ms.vss-build.template",
        "targets": [
          "ms.vss-build.templates"
        ],
        "properties": {
          "name": "templates/netdesktop"
        }
      },
      {
        "id": "f2dcb989-20d1-4a5c-b138-0dd8f53bcf97",
        "type": "ms.vss-build.template",
        "targets": [
          "ms.vss-build.templates"
        ],
        "properties": {
          "name": "templates/otherfile"
        }
      },
      {
        "id": "1d772a94-aac4-4395-baf6-7d2d0cb17e5d",
        "type": "ms.vss-build.template",
        "targets": [
          "ms.vss-build.templates"
        ],
        "properties": {
          "name": "templates/othermanual"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "name": "Scheduled Work Item Query",
    "version": "0.0.58",
    "publisher": "Quadrotech",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Sends an E-Mail on a Schedule for Work Item Queries",
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "images/extension-icon.png"
    },
    "scopes": [
      "vso.work"
    ],
    "demands": [
      "api-version/5.0"
    ],
    "branding": {
      "color": "rgb(34, 34, 34)",
      "theme": "dark"
    },
    "files": [
      {
        "path": "ado-scheduledworkitemquery-task"
      }
    ],
    "content": {
      "details": {
        "path": "README.md"
      },
      "license": {
        "path": "LICENSE"
      }
    },
    "links": {
      "home": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
      },
      "getstarted": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
      },
      "support": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery/issues"
      },
      "repository": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
      },
      "issues": {
        "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery/issues"
      },
      "company": {
        "uri": "https://www.quadrotech-it.com/"
      },
      "privacypolicy": {
        "uri": "https://www.quadrotech-it.com/privacy-policy"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Quadrotech/ADOScheduledWorkItemQuery"
    },
    "contributions": [
      {
        "id": "ADOScheduledWorkItemQuery",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "ado-scheduledworkitemquery-task"
        }
      },
      {
        "id": "sendgrid-endpoint-type",
        "description": "Service endpoint type for sendgrid connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "sendgrid",
          "displayName": "SendGrid connection",
          "url": {
            "displayName": "Server Url",
            "helpText": "SendGrid URL.",
            "value": "https://www.sendgrid.net",
            "isVisible": "false"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "senderEmail",
                  "name": "From E-Mail",
                  "description": "E-Mail Address where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "AzureDevOps@dev.azure.com",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "senderName",
                  "name": "From Name",
                  "description": "Name where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "Azure DevOps",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/Quadrotech/ADOScheduledWorkItemQuery\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "smtp-endpoint-type",
        "description": "Service endpoint type for SMTP connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "smtp",
          "displayName": "SMTP connection",
          "url": {
            "displayName": "SMTP Server Name",
            "helpText": "SMTP Server Name.",
            "value": "https://www.smtp.com",
            "isVisible": "false"
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "displayName": "No Authentication",
              "inputDescriptors": [
                {
                  "id": "smtpserverNoAuth",
                  "name": "SMTP Server",
                  "description": "SMTP Server Name",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpportNoAuth",
                  "name": "SMTP Server Port",
                  "description": "SMTP Server Port",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "number",
                    "maxValue": "65500",
                    "minValue": "1"
                  }
                },
                {
                  "id": "tlsOptionsNoAuth",
                  "name": "TLS Options",
                  "description": "TLS Options",
                  "inputMode": "combo",
                  "isConfidential": false,
                  "validation": {
                    "dataType": "string",
                    "maxLength": 300
                  },
                  "values": {
                    "inputId": "tlsOptionsNoAuthValues",
                    "defaultValue": "auto",
                    "possibleValues": [
                      "@{value=force; displayValue=Force TLS}",
                      "@{value=auto; displayValue=Use TLS if the server supports STARTTLS}",
                      "@{value=ignore; displayValue=Do not use TLS, and ignore STARTTLS}"
                    ]
                  }
                },
                {
                  "id": "smtpFromEmailNoAuth",
                  "name": "From E-Mail",
                  "description": "E-Mail Address where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "AzureDevOps@dev.azure.com",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpFromNameNoAuth",
                  "name": "From Name",
                  "description": "Name where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "Azure DevOps",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            },
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "displayName": "Username/Password Authentication",
              "inputDescriptors": [
                {
                  "id": "smtpserverUserPassword",
                  "name": "SMTP Server",
                  "description": "SMTP Server Name",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpportUserPassword",
                  "name": "SMTP Server Port",
                  "description": "SMTP Server Port",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "number",
                    "maxValue": "65500",
                    "minValue": "1"
                  }
                },
                {
                  "id": "tlsOptionsUserPassword",
                  "name": "TLS Options",
                  "description": "TLS Options",
                  "inputMode": "combo",
                  "isConfidential": false,
                  "validation": {
                    "dataType": "string",
                    "maxLength": 300
                  },
                  "values": {
                    "inputId": "tlsOptionsUserPasswordValues",
                    "defaultValue": "auto",
                    "possibleValues": [
                      "@{value=force; displayValue=Force TLS}",
                      "@{value=auto; displayValue=Use TLS if the server supports STARTTLS}",
                      "@{value=ignore; displayValue=Do not use TLS, and ignore STARTTLS}"
                    ]
                  }
                },
                {
                  "id": "smtpFromEmailUserPassword",
                  "name": "From E-Mail",
                  "description": "E-Mail Address where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "AzureDevOps@dev.azure.com",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "smtpFromNameUserPassword",
                  "name": "From Name",
                  "description": "Name where the e-mail is coming from",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "defaultValue": "Azure DevOps",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/Quadrotech/ADOScheduledWorkItemQuery\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ],
    "tags": [
      "query",
      "work item",
      "schedule",
      "e-mail"
    ]
  },
  {
    "manifestVersion": 1,
    "id": "testingbot-tasks",
    "name": "TestingBot for Visual Studio Team Services",
    "version": "0.1.0",
    "publisher": "testingbot",
    "public": true,
    "description": "Integrate TestingBot's Automated Testing with VSTS",
    "categories": [
      "Azure Pipelines",
      "Azure Test Plans"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "home": {
        "uri": "https://testingbot.com"
      },
      "gettingstarted": {
        "uri": "https://testingbot.com/signup?utm_source=vsip"
      },
      "learn": {
        "uri": "https://testingbot.com/support"
      },
      "issues": {
        "uri": "https://testingbot.com/support"
      },
      "support": {
        "uri": "https://testingbot.com/support"
      },
      "license": {
        "uri": "https://testingbot.com/terms"
      },
      "repository": {
        "uri": "https://github.com/testingbot/vso-testingbot-plugin"
      }
    },
    "icons": {
      "default": "images/testingbot-icon.png"
    },
    "files": [
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "tb-main"
      },
      {
        "path": "tb-stop-tunnel"
      },
      {
        "path": "tb-build-info",
        "addressable": true
      },
      {
        "path": "lib",
        "addressable": true
      }
    ],
    "scopes": [
      "vso.build_execute",
      "vso.test",
      "vso.test_write",
      "vso.serviceendpoint_manage"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "contributions": [
      {
        "id": "tb-main",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tb-main"
        }
      },
      {
        "id": "tb-stop-tunnel",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tb-stop-tunnel"
        }
      },
      {
        "id": "tb-endpoint-type",
        "description": "TestingBot Credentials",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "testingbot",
          "displayName": "TestingBot Credentials",
          "url": "https://api.testingbot.com/v1/",
          "dataSources": [
            {
              "resultSelector": "jsonpath:$",
              "name": "getBuildFullJobs",
              "endpointUrl": "https://api.testingbot.com/v1/builds/{{build}}"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic"
            }
          ]
        }
      },
      {
        "id": "build-info-tab",
        "type": "ms.vss-build-web.build-results-tab",
        "description": "Build Results View",
        "targets": [
          "ms.vss-build-web.build-results-view"
        ],
        "properties": {
          "name": "TestingBot",
          "uri": "tb-build-info/infoTab.html"
        }
      },
      {
        "id": "embed-dialog",
        "type": "ms.vss-web.control",
        "description": "Embed Dialog",
        "targets": [],
        "properties": {
          "uri": "tb-build-info/embedDialog.html?url={{url}}"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "create-pr-comment-task",
    "name": "Create Pull Request Comment",
    "version": "0.0.6",
    "publisher": "CSE-DevOps",
    "galleryFlags": [
      "Public"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "description": "Create Pull Request Comment",
    "categories": [
      "Azure Pipelines"
    ],
    "tags": [
      "AzureDevOps"
    ],
    "content": {
      "details": {
        "path": "README.md"
      }
    },
    "icons": {
      "default": "images/extension-icon.png"
    },
    "files": [
      {
        "path": "Task"
      }
    ],
    "repository": {
      "type": "git",
      "uri": "https://github.com/TsuyoshiUshio/CommentPRTask"
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Azure DevOps PAT",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "azuredevops",
          "displayName": "AzureDevOps PAT",
          "config": {
            "type": "string",
            "description": "Put your Personal Access Token of the Azure DevOps",
            "required": true
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "pat",
                  "name": "PAT",
                  "description": "Azure DevOps Personal Access Token here.",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Create a Pull Request Comment."
        }
      },
      {
        "id": "custom-build-release-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Task"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "deis-workflow-endpoint",
    "version": "0.1.9",
    "name": "Deis extension",
    "description": "Enabling Deis command with storing secret on the endpoint",
    "publisher": "TsuyoshiUshio",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [
      "kubernetes"
    ],
    "content": {
      "details": {
        "path": "deis.md"
      }
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Deis connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "deis",
          "displayName": "Deis workflow",
          "config": {
            "type": "string",
            "description": "Configure youre deis connection",
            "required": true
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "username",
                  "description": "Enter the username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "password",
                  "description": "Enter the password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/TsuyoshiUshio/DeisTask\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "deis-task",
        "description": "Task executes deis workflow general command for you.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/general"
        }
      }
    ],
    "files": [
      {
        "path": "tasks/general"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "durable-safe-deploy",
    "version": "0.0.6",
    "name": "Durable Function Safe Deployment extension",
    "description": "Durable Function Deployment extension for safe-deployment. Work with Backend service",
    "publisher": "TsuyoshiUshio",
    "galleryFlags": [
      "Private"
    ],
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "logo.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [
      "durable"
    ],
    "content": {
      "details": {
        "path": "durable.md"
      }
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for Durable API connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "durableapi",
          "displayName": "Durable API",
          "config": {
            "type": "string",
            "description": "Please store the URL of the Durable Functions API endpoint",
            "required": true
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "comment",
                  "name": "comment",
                  "description": "Leave Free Comment (not required)",
                  "inputMode": "textArea",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/TsuyoshiUshio/DurableFunctionsDeploymentTask\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "deployready",
        "description": "Task check if the Staging Slot has no active tasks.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "deployready"
        }
      },
      {
        "id": "deploytostaging",
        "description": "Task notify the durable api server that vsts deploys the deployment of Staging slot",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "deploytostaging"
        }
      },
      {
        "id": "swap",
        "description": "Task notify the durable api server that a swap happens.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "swap"
        }
      },
      {
        "id": "cleanup",
        "description": "Task commands the durable api server to clean up",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "cleanup"
        }
      }
    ],
    "files": [
      {
        "path": "deployready"
      },
      {
        "path": "deploytostaging"
      },
      {
        "path": "swap"
      },
      {
        "path": "cleanup"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "k8s-endpoint",
    "version": "0.1.45",
    "name": "Kubernetes Ostrich extension",
    "description": "Kubernetes Ostrich extension with k8s endpoint. Which enable kubectl command",
    "publisher": "ostrich",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "icons": {
      "default": "images/logo.png"
    },
    "categories": [
      "Build and release"
    ],
    "tags": [
      "kubernetes"
    ],
    "content": {
      "details": {
        "path": "k8s.md"
      }
    },
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for k8s connection",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "kubernetes",
          "displayName": "Kubernetes",
          "config": {
            "type": "string",
            "description": "Paste your config file of k8s master node's config file.",
            "required": true
          },
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-none",
              "inputDescriptors": [
                {
                  "id": "kubeconfig",
                  "name": "Kubeconfig",
                  "description": "Copy your kubectl config",
                  "inputMode": "textArea",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"url-to-documentation\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "apply-task",
        "description": "Task executes the kubectl apply for you.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/apply"
        }
      },
      {
        "id": "general-task",
        "description": "Task executes a general kubectl command for you.",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/general"
        }
      }
    ],
    "files": [
      {
        "path": "tasks/apply"
      },
      {
        "path": "tasks/general"
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "twistcli-build-release-task",
    "name": "Twistcli Build and Release Task",
    "version": "1.1.6",
    "publisher": "Twistlock",
    "public": true,
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Task to scan container images or serverless functions using twistcli during Azure DevOps Build & Release pipelines",
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "images/extension-icon.png"
    },
    "files": [
      {
        "path": "tasks/twistcli-scan"
      },
      {
        "path": "tasks/twistcli-rasp"
      }
    ],
    "contributions": [
      {
        "id": "twistlock-console-endpoint-type",
        "description": "Service endpoint type for Twistlock API communications",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "twistlockConsole",
          "displayName": "Twistlock console",
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Twistlock console username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Password",
                  "description": "Twistlock console password",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "tlscacert",
                  "name": "CA Certificate",
                  "description": "CA Certificate used to verify Twistlock console",
                  "inputMode": "textarea",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://github.com/twistlock/sample-code/tree/master/CI/Azure_DevOps/Extensions/azure-devops-twistcli-tasks\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "custom-build-release-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/twistcli-scan"
        }
      },
      {
        "id": "rasp-build-release-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/twistcli-rasp"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "sonarcloud",
    "name": "SonarCloud",
    "version": "1.1.1",
    "branding": {
      "color": "rgb(243, 243, 243)",
      "theme": "light"
    },
    "publisher": "sonarsource",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "description": "Use the SonarCloud build tasks in your build/release definitions to track bugs, code smells and vulnerabilities for 20 different languages such as C#, VB.Net, Java, C, C++, JavaScript...",
    "public": true,
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "extension-icon.png"
    },
    "tags": [
      "build",
      "ci",
      "continuous integration",
      "code quality",
      "static code analysis"
    ],
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "license-terms.md"
      }
    },
    "screenshots": [
      {
        "path": "img/tasks.png"
      }
    ],
    "links": {
      "home": {
        "uri": "https://about.sonarcloud.io/"
      },
      "getstarted": {
        "uri": "http://redirect.sonarsource.com/doc/install-configure-scanner-tfs-ts.html"
      },
      "support": {
        "uri": "https://www.sonarqube.org/community/"
      }
    },
    "CustomerQnASupport": {
      "enableqna": "true",
      "url": "https://about.sonarcloud.io/contact/"
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/SonarSource/sonar-scanner-vsts"
    },
    "files": [
      {
        "path": "tasks"
      },
      {
        "path": "img",
        "addressable": true
      },
      {
        "path": "icons",
        "addressable": true
      }
    ],
    "scopes": [
      "vso.build",
      "vso.code",
      "vso.test"
    ],
    "contributions": [
      {
        "id": "14d9cde6-c1da-4d55-aa01-2965cd301255",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/prepare"
        }
      },
      {
        "id": "ce096e50-6155-4de8-8800-4221aaeed4a1",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/analyze"
        }
      },
      {
        "id": "38b27399-a642-40af-bb7d-9971f69712e8",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "tasks/publish"
        }
      },
      {
        "id": "343c5f6a-e4d5-4480-a764-506e1daa05df",
        "description": "Service endpoint type for SonarCloud Connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "sonarcloud",
          "displayName": "SonarCloud",
          "icon": "icons/SonarCloud_endpoint.png",
          "url": {
            "displayName": "Server Url",
            "value": "https://sonarcloud.io",
            "isVisible": false
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/organizations/search?member=true",
              "resultSelector": "jsonpath:$.organizations[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "Authorization",
                  "value": "Basic {{ #base64 endpoint.apitoken \":\" }}"
                }
              ],
              "inputDescriptors": [
                {
                  "id": "apitoken",
                  "name": "SonarCloud Token",
                  "description": "Authentication Token generated through SonarCloud (go to My Account > Security > Generate Tokens)",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "Go to <a href=\"https://sonarcloud.io/account/security/\" target=\"_blank\">your SonarCloud account security page</a> to generate a token."
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "HockeyAppUWP",
    "name": "Publish UWP to HockeyApp",
    "version": "1.0.13",
    "publisher": "Vitaliy-Leschenko-BY",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "description": "Tools for publish UWP apps to HockeyApp.",
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "categories": [
      "Build and release"
    ],
    "icons": {
      "default": "images/hockeyapp-logo.png",
      "large": "images/hockeyapp-logo-large.png"
    },
    "screenshots": [
      {
        "path": "images/screen1.png"
      },
      {
        "path": "images/screen2.png"
      },
      {
        "path": "images/screen3.png"
      }
    ],
    "files": [
      {
        "path": "task"
      },
      {
        "path": "images/settings.png",
        "addressable": true
      },
      {
        "path": "images/service-endpoint-hockeyapp.png",
        "addressable": true
      },
      {
        "path": "widget/configuration.htm",
        "addressable": true
      },
      {
        "path": "widget/widget.htm",
        "addressable": true
      },
      {
        "path": "widget/css/configuration.css",
        "addressable": true
      },
      {
        "path": "widget/css/widget.css",
        "addressable": true
      },
      {
        "path": "widget/img/configurationRequired.png",
        "addressable": true
      },
      {
        "path": "widget/img/crashReports.png",
        "addressable": true
      },
      {
        "path": "widget/img/download.png",
        "addressable": true
      },
      {
        "path": "widget/img/errorIcon.png",
        "addressable": true
      },
      {
        "path": "widget/img/loading.png",
        "addressable": true
      },
      {
        "path": "widget/img/logo.png",
        "addressable": true
      },
      {
        "path": "widget/img/overview.png",
        "addressable": true
      },
      {
        "path": "widget/img/preview.png",
        "addressable": true
      },
      {
        "path": "widget/js/configuration.js",
        "addressable": true
      },
      {
        "path": "widget/js/q.js",
        "addressable": true
      },
      {
        "path": "widget/js/widget.js",
        "addressable": true
      },
      {
        "path": "widget/sdk/scripts/VSS.SDK.js",
        "addressable": true
      }
    ],
    "scopes": [
      "vso.build_execute",
      "vso.serviceendpoint_manage"
    ],
    "contributions": [
      {
        "id": "hockeyapp-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "task"
        }
      },
      {
        "id": "hockeyapp-endpoint-type",
        "description": "HockeyApp provides analytics for mobile app.",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "hockeyapp",
          "displayName": "HockeyApp",
          "url": "https://rink.hockeyapp.net/api/2/apps/",
          "inputDescriptors": [],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Username",
                  "description": "Username",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  },
                  "values": {
                    "inputId": "usernameInput",
                    "defaultValue": "",
                    "isDisabled": true
                  }
                },
                {
                  "id": "password",
                  "name": "API Token",
                  "description": "API token to connect to HockeyApp account can be created <a href=\"https://rink.hockeyapp.net/manage/auth_tokens\" target=\"_blank\">here</a>.",
                  "inputMode": "textbox",
                  "isConfidential": false,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": "HockeyAppWidget",
        "type": "ms.vss-dashboards-web.widget",
        "targets": [
          "ms.vss-dashboards-web.widget-catalog",
          "ms.hockeyapp.HockeyAppWidget.Configuration"
        ],
        "properties": {
          "name": "HockeyApp Widget",
          "description": "Provides links to the HockeyApp overview information, crash reports and a link to download the app.",
          "previewImageUrl": "widget/img/preview.png",
          "loadingImageUrl": "widget/img/loading.png",
          "uri": "widget/widget.htm",
          "isVisibleFromCatalog": true,
          "isNameConfigurable": true,
          "configurationRequired": true,
          "supportedSizes": [
            {
              "rowSpan": 1,
              "columnSpan": 2
            }
          ],
          "supportedScopes": [
            "project_team"
          ]
        }
      },
      {
        "id": "HockeyAppWidget.Configuration",
        "type": "ms.vss-dashboards-web.widget-configuration",
        "targets": [
          "ms.vss-dashboards-web.widget-configuration"
        ],
        "properties": {
          "name": "HockeyApp Configuration",
          "description": "Configures HockeyApp",
          "uri": "widget/configuration.htm"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "whitesource",
    "version": "19.9.1",
    "name": "WhiteSource",
    "description": "Detect & fix security vulnerabilities, problematic open source licenses and quality issues.",
    "publisher": "whitesource",
    "public": true,
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "content": {
      "details": {
        "path": "details.md"
      }
    },
    "categories": [
      "Build and release"
    ],
    "branding": {
      "color": "rgb(78, 104, 193)",
      "theme": "dark"
    },
    "icons": {
      "default": "images/logo.png"
    },
    "files": [
      {
        "path": "whitesource",
        "addressable": true
      },
      {
        "path": "images",
        "addressable": true
      }
    ],
    "contributions": [
      {
        "id": "task-hash-collector",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "whitesource"
        }
      },
      {
        "id": "service-endpoint",
        "description": "Service Endpoint type for WhiteSource connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "whitesource",
          "displayName": "WhiteSource",
          "url": {
            "displayName": "Server Url",
            "helpText": "Url for the WhiteSource server to connect to."
          },
          "dataSources": [
            {
              "name": "WhiteSource Projects",
              "endpointUrl": "{{endpoint.url}}/agent",
              "resultSelector": "jsonpath:$[*].nm"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "inputDescriptors": [
                {
                  "id": "userKey",
                  "name": "User Key",
                  "description": "Unique identifier of the organization to update can be retrieved from the admin page in your WhiteSource account",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": false,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"http://www.whitesourcesoftware.com/tfs_security\" target=\"_blank\"><b>Learn More</b></a>"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "esquio-extensions-canary",
    "version": "2.1.0",
    "name": "Esquio extensions (canary)",
    "description": "Esquio extensions for Azure DevOps",
    "publisher": "xabaril",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "categories": [
      "Azure Pipelines"
    ],
    "icons": {
      "default": "icons/xabaril.png"
    },
    "branding": {
      "color": "#3B3E43",
      "theme": "dark"
    },
    "screenshots": [
      {
        "path": "images/EsquioSample.png"
      },
      {
        "path": "images/service-connection.png"
      },
      {
        "path": "images/rollout.png"
      },
      {
        "path": "images/rollback.png"
      },
      {
        "path": "images/set-parameter.png"
      }
    ],
    "content": {
      "details": {
        "path": "overview.md"
      }
    },
    "links": {
      "license": {
        "uri": "https://github.com/Xabaril/Xabaril/blob/master/LICENSE"
      },
      "learn": {
        "uri": "https://esquio.readthedocs.io/"
      },
      "repository": {
        "uri": "https://github.com/Xabaril/Esquio"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/Xabaril/Esquio"
    },
    "badges": [
      {
        "href": "https://github.com/Xabaril/Esquio",
        "uri": "https://dev.azure.com/xabaril/Esquio/_apis/build/status/esquio-master-release?branchName=master",
        "description": "Esquio Azure DevOps build for the project"
      },
      {
        "href": "https://github.com/Xabaril/Esquio",
        "uri": "https://dev.azure.com/xabaril/Esquio/_apis/build/status/DevOpsExtensions-master-CI?branchName=master",
        "description": "Esquio Extension build"
      }
    ],
    "contributions": [
      {
        "id": "service-endpoint",
        "description": "Service endpoint type for Esquio connections",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "esquio",
          "icons": {
            "default": "icons/xabaril-endpoint-icon.png",
            "wide": "icons/xabaril.png"
          },
          "displayName": "Esquio API connection V1",
          "url": {
            "displayName": "Esquio API Url",
            "helpText": "Url for the Esquio API to connect to."
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/v1/products",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "EsquioProducts",
              "endpointUrl": "{{endpoint.url}}/api/v1/products",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "EsquioFlags",
              "endpointUrl": "{{endpoint.url}}/api/v1/products/$(productId)/flags",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "EsquioFlagDetailed",
              "endpointUrl": "{{endpoint.url}}/api/v1/flags/$(flagId)",
              "resultSelector": "jsonpath:$.toggles[*]"
            },
            {
              "name": "EsquioToggleDetailed",
              "endpointUrl": "{{endpoint.url}}/api/v1/toggles/$(toggleId)",
              "resultSelector": "jsonpath:$.parameters[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "x-api-key",
                  "value": "{{endpoint.apitoken}}"
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://esquio.readthedocs.io\" target=\"_blank\"><b>Learn More about Esquio</b></a>"
        }
      },
      {
        "id": "service-endpoint-v2",
        "description": "Service endpoint type for Esquio connections (V2)",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "esquio-v2",
          "icons": {
            "default": "icons/xabaril-endpoint-icon.png",
            "wide": "icons/xabaril.png"
          },
          "displayName": "Esquio API connection V2",
          "url": {
            "displayName": "Esquio API Url",
            "helpText": "Url for the Esquio API to connect to."
          },
          "dataSources": [
            {
              "name": "TestConnection",
              "endpointUrl": "{{endpoint.url}}/api/products",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "EsquioProductsV2",
              "endpointUrl": "{{endpoint.url}}/api/products",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "EsquioFlagsV2",
              "endpointUrl": "{{endpoint.url}}/api/products/$(productName)/features",
              "resultSelector": "jsonpath:$.result[*]"
            },
            {
              "name": "EsquioFlagDetailedV2",
              "endpointUrl": "{{endpoint.url}}/api/products/$(productName)/features/$(featureName)",
              "resultSelector": "jsonpath:$.toggles[*]"
            },
            {
              "name": "EsquioToggleDetailedV2",
              "endpointUrl": "{{endpoint.url}}/api/products/$(productName)/features/$(featureName)/toggles/$(toggleType)",
              "resultSelector": "jsonpath:$.parameters[*]"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-token",
              "headers": [
                {
                  "name": "x-api-key",
                  "value": "{{endpoint.apitoken}}"
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://esquio.readthedocs.io\" target=\"_blank\"><b>Learn More about Esquio</b></a>"
        }
      },
      {
        "id": "rollout-feature",
        "description": "Esquio rollout feature",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "rollout-feature"
        }
      },
      {
        "id": "rollback-feature",
        "description": "Esquio rollback feature",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "rollback-feature"
        }
      },
      {
        "id": "set-toggle-parameter",
        "description": "Esquio set a parameter for a toggle",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "set-toggle-parameter"
        }
      }
    ],
    "files": [
      {
        "path": "rollout-feature"
      },
      {
        "path": "rollback-feature"
      },
      {
        "path": "set-toggle-parameter"
      },
      {
        "path": "images/service-connection.png",
        "addressable": true
      },
      {
        "path": "images/rollout.png",
        "addressable": true
      },
      {
        "path": "images/rollback.png",
        "addressable": true
      },
      {
        "path": "images/set-parameter.png",
        "addressable": true
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "RA",
    "name": "CA Release Automation",
    "version": "1.0.0",
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services"
      }
    ],
    "publisher": "CATechnologiesRA",
    "description": "Run an existing Deployment Plan or create and run a Deployment Plan out of Deployment Template",
    "public": false,
    "categories": [
      "Build and release"
    ],
    "tags": [
      "Nolio",
      "Release Automation",
      "CA Technologies",
      "Deploy"
    ],
    "files": [
      {
        "path": "Tasks/RA"
      },
      {
        "path": "images",
        "addressable": true
      }
    ],
    "icons": {
      "default": "images/ca_as_128.png",
      "large": "images/ca_as_512.png"
    },
    "content": {
      "details": {
        "path": "RA.md"
      }
    },
    "links": {
      "getstarted": {
        "uri": "http://www.ca.com/us/products/ca-release-automation.html"
      },
      "support": {
        "uri": " https://communities.ca.com/community/ca-release-automation"
      }
    },
    "branding": {
      "color": "#f6f7fb",
      "theme": "light"
    },
    "contributions": [
      {
        "id": "endpoint-auth-scheme-custom",
        "description": "RAcustomscheme.",
        "type": "ms.vss-endpoint.service-endpoint-auth-scheme",
        "targets": [
          "ms.vss-endpoint.endpoint-auth-schemes"
        ],
        "properties": {
          "name": "CustomAuthScheme",
          "displayName": "RACustomAuthenticationScheme",
          "inputDescriptors": [
            {
              "id": "RAusername",
              "name": "RA username",
              "description": "The username to access RA Server when using RA build task.",
              "inputMode": "textbox",
              "isConfidential": false,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
              "id": "RApassword",
              "name": "RA password",
              "description": "The password to access RA Server when using RA build task.",
              "inputMode": "passwordbox",
              "isConfidential": true,
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            }
          ]
        }
      },
      {
        "id": "ca-ra-endpoint-type",
        "description": "RAConnectionServiceEndpoint",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "RA",
          "displayName": "CA Release Automation Server",
          "authenticationSchemes": [
            {
              "type": "endpoint-auth-scheme-custom"
            }
          ],
          "helpMarkDown": "Server URL i.e. http://my-server:8080, https://my-secured-server:443 etc..."
        }
      },
      {
        "id": "RA-task",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "Tasks/RA"
        }
      }
    ]
  },
  {
    "manifestVersion": 1,
    "id": "lambda-deploy-aws-plugin",
    "version": "0.0.4",
    "name": "AWS Lambda Deploy",
    "scope": [
      "vso.build",
      "vso.build_execute",
      "vso.release"
    ],
    "description": "Deploy or Publish a package in AWS Lambda function",
    "publisher": "zapimoveis",
    "icons": {
      "default": "images/logo.png"
    },
    "public": true,
    "content": {
      "details": {
        "path": "overview.md"
      },
      "license": {
        "path": "LICENSE"
      }
    },
    "targets": [
      {
        "id": "Microsoft.VisualStudio.Services.Cloud"
      }
    ],
    "tags": [
      "AWS",
      "Lambda"
    ],
    "links": {
      "license": {
        "uri": "https://github.com/zapimoveis/vsts-task-lambda-deploy/blob/master/LICENSE"
      },
      "support": {
        "uri": "https://github.com/zapimoveis/vsts-task-lambda-deploy/issues"
      }
    },
    "repository": {
      "type": "git",
      "uri": "https://github.com/zapimoveis/vsts-task-lambda-deploy"
    },
    "branding": {
      "color": "rgb(111, 111, 111)",
      "theme": "light"
    },
    "files": [
      {
        "path": "images",
        "addressable": true
      },
      {
        "path": "lambda-deploy"
      }
    ],
    "categories": [
      "Build and release"
    ],
    "contributions": [
      {
        "id": "aws-credentials",
        "description": "Credentials for tasks invoking AWS services",
        "type": "ms.vss-endpoint.service-endpoint-type",
        "targets": [
          "ms.vss-endpoint.endpoint-types"
        ],
        "properties": {
          "name": "AWS",
          "displayName": "AWS",
          "url": {
            "displayName": "Server Url",
            "helpText": "AWS homepage.",
            "value": "https://aws.amazon.com/",
            "isVisible": "false"
          },
          "dataSources": [
            {
              "name": "AWS",
              "endpointUrl": "{{endpoint.url}}api/projects/index",
              "resultSelector": "jsonpath:$[*].nm"
            }
          ],
          "authenticationSchemes": [
            {
              "type": "ms.vss-endpoint.endpoint-auth-scheme-basic",
              "inputDescriptors": [
                {
                  "id": "username",
                  "name": "Access Key ID",
                  "description": "The AWS access key ID for signing programmatic requests.\nExample: AKIAIOSFODNN7EXAMPLE",
                  "inputMode": "textbox",
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                  "id": "password",
                  "name": "Secret Access Key",
                  "description": "The AWS secret access key for signing programmatic requests.\nExample: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
                  "inputMode": "passwordbox",
                  "isConfidential": true,
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                }
              ]
            }
          ],
          "helpMarkDown": "<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html?icmpid=docs_iam_console\" target=\"_blank\"><b>Learn More</b></a>"
        }
      },
      {
        "id": "LambdaDeploy",
        "description": "Deploy or Publish a package in AWS Lambda Function",
        "type": "ms.vss-distributed-task.task",
        "targets": [
          "ms.vss-distributed-task.tasks"
        ],
        "properties": {
          "name": "lambda-deploy"
        }
      }
    ]
  }
]